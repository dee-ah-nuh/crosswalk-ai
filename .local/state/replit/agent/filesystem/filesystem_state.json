{"file_contents":{"README.md":{"content":"# Interactive Crosswalk & ETL Helper\n\nA production-grade data engineering tool for mapping source data columns to standardized data models, with validation, transformation, and ETL configuration capabilities.\n\n## Overview\n\nThis application helps data engineers and analysts:\n- Map source columns from CSV/Excel files to predefined data model fields\n- Create custom fields when needed\n- Define and test regex validation rules\n- Apply data transformation expressions using a built-in DSL\n- Export mappings in multiple formats (CSV, Excel, JSON, SQL)\n- Optionally fetch sample data from data warehouses\n\n## Features\n\n### Core Functionality\n- **Two Input Modes**: Upload files (CSV/Excel) or define schema-only column lists\n- **Interactive Grid**: Spreadsheet-like interface for column mapping\n- **Data Model Integration**: Pre-defined target schema with required field validation\n- **Custom Fields**: Support for fields not in the standard data model\n- **Transform DSL**: Safe expression language for data transformations\n- **Regex Validation**: Create and test regex patterns against sample data\n- **Project Management**: Persistent storage with SQLite database\n\n### Export Capabilities\n- **CSV/Excel**: Traditional crosswalk format\n- **JSON**: Pipeline configuration for ETL systems  \n- **SQL**: Idempotent DDL/DML scripts with transformation views\n- **Validation Reports**: Mapping completeness and rule compliance\n\n### Optional Features\n- **Warehouse Integration**: Fetch sample data via stored procedures (Snowflake)\n- **Real-time Validation**: Live feedback on mapping progress and rule compliance\n- **Bulk Operations**: Quick-fill and keyboard navigation for efficiency\n\n## Technology Stack\n\n### Frontend\n- React 18 + TypeScript\n- Vite (build tool)\n- Tailwind CSS (styling)\n- TanStack Table (data grid)\n- Font Awesome (icons)\n\n### Backend\n- Python FastAPI\n- SQLAlchemy (ORM)\n- SQLite (database)\n- pandas + openpyxl (file processing)\n- Optional: snowflake-connector-python\n\n## Quick Start\n\n### Prerequisites\n- Python 3.8+\n- Node.js 16+\n- npm or yarn\n\n### Installation & Startup\n\n1. **Clone or set up the project structure**\n\n2. **Install Python dependencies** (handled by Replit or pip):\n```bash\npip install fastapi uvicorn sqlalchemy pandas openpyxl python-multipart\n","size_bytes":2271},"main.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nLauncher script for the Interactive Crosswalk & ETL Helper application.\nStarts both the FastAPI backend and serves the React frontend.\n\"\"\"\n\nimport os\nimport sys\nimport subprocess\nimport threading\nimport time\nfrom pathlib import Path\n\ndef run_backend():\n    \"\"\"Run the FastAPI backend server\"\"\"\n    try:\n        import uvicorn\n        from backend.app import app\n        \n        # Initialize database and seed data\n        from backend.database import init_db\n        from backend.seed_data import seed_initial_data\n        \n        init_db()\n        seed_initial_data()\n        \n        # Start FastAPI server\n        uvicorn.run(app, host=\"0.0.0.0\", port=8000, log_level=\"info\")\n    except Exception as e:\n        print(f\"Error starting backend: {e}\")\n        sys.exit(1)\n\ndef run_frontend():\n    \"\"\"Build and serve the React frontend\"\"\"\n    try:\n        frontend_dir = Path(__file__).parent / \"frontend\"\n        os.chdir(frontend_dir)\n        \n        # Install dependencies if needed (handled separately)\n        # Build the frontend\n        subprocess.run([\"npm\", \"run\", \"build\"], check=True)\n        \n        # Serve the built frontend\n        subprocess.run([\"npx\", \"serve\", \"-s\", \"dist\", \"-l\", \"5000\"], check=True)\n    except Exception as e:\n        print(f\"Error starting frontend: {e}\")\n        sys.exit(1)\n\ndef main():\n    \"\"\"Main launcher function\"\"\"\n    print(\"🚀 Starting Interactive Crosswalk & ETL Helper...\")\n    \n    # Start backend in a separate thread\n    backend_thread = threading.Thread(target=run_backend, daemon=True)\n    backend_thread.start()\n    \n    # Give backend time to start\n    time.sleep(3)\n    \n    # Start frontend (this will block)\n    try:\n        run_frontend()\n    except KeyboardInterrupt:\n        print(\"\\n⏹️  Shutting down application...\")\n        sys.exit(0)\n\nif __name__ == \"__main__\":\n    main()\n","size_bytes":1876},"pyproject.toml":{"content":"[project]\nname = \"repl-nix-workspace\"\nversion = \"0.1.0\"\ndescription = \"Add your description here\"\nrequires-python = \">=3.11\"\ndependencies = [\n    \"fuzzywuzzy>=0.18.0\",\n    \"numpy>=2.3.2\",\n    \"openpyxl>=3.1.5\",\n    \"pandas>=2.3.2\",\n    \"psycopg2-binary>=2.9.10\",\n    \"python-levenshtein>=0.27.1\",\n    \"scikit-learn>=1.7.1\",\n]\n","size_bytes":326},"replit.md":{"content":"# Interactive Crosswalk & ETL Helper\n\n## Overview\n\nA production-grade data engineering tool designed to streamline the process of mapping source data columns to standardized data models. The application enables data engineers to upload CSV/Excel files or define schema-only column lists, create interactive mappings to predefined data model fields, validate data using regex rules, and export configurations in multiple formats (CSV, Excel, JSON, SQL). The system supports custom field creation, data transformation using a built-in DSL, and optional data warehouse integration for fetching sample data.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\nRun command: \"crosswalk run\" (uses unified deployment on port 5000)\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development practices\n- **Build Tool**: Vite for fast development and optimized production builds\n- **Styling**: Tailwind CSS for utility-first styling with custom design system\n- **Data Grid**: TanStack Table for spreadsheet-like interface with editable cells and advanced features\n- **State Management**: React hooks with custom data fetching hooks (`useProfiles`, `useCrosswalk`)\n- **Component Structure**: Modular components including ProjectSidebar, CrosswalkGrid, DetailPanel, RegexTester, FileUpload, and SchemaInput\n\n### Backend Architecture\n- **Framework**: FastAPI for high-performance API development with automatic OpenAPI documentation\n- **Database ORM**: SQLAlchemy with declarative models for type-safe database operations\n- **Routing**: Modular route organization with separate modules for profiles, crosswalk mappings, and exports\n- **File Processing**: pandas and openpyxl for robust CSV/Excel parsing and data inference\n- **Data Transformation**: Custom DSL engine for safe expression evaluation and validation\n\n### Data Storage Solutions\n- **Primary Database**: SQLite for local persistence and simplicity\n- **Schema Design**: Normalized relational schema with core entities:\n  - `data_model_fields`: Predefined target schema fields\n  - `source_profiles`: Project containers with metadata\n  - `source_columns`: Source data column definitions with sample values\n  - `crosswalk_mappings`: Column mapping configurations\n  - `regex_rules`: Validation rule definitions\n  - `warehouse_configs`: Optional data warehouse connection settings\n\n### Authentication and Authorization\n- **Current State**: No authentication implemented (internal tool assumption)\n- **CORS Configuration**: Configured for local development with specific origin allowlist\n- **Security Considerations**: Designed for internal network deployment with potential for future authentication integration\n\n### Data Processing Pipeline\n- **File Ingestion**: Multi-format support (CSV, XLSX, XLS) with automatic type inference\n- **Schema Processing**: Support for schema-only workflows without physical files\n- **Validation Engine**: Real-time regex validation with testing capabilities\n- **Transform Engine**: Safe DSL for data transformations with function validation\n- **Export Pipeline**: Multi-format output generation (CSV, Excel, JSON, SQL DDL/DML)\n\n## External Dependencies\n\n### Core Dependencies\n- **React Ecosystem**: React 18, TypeScript, Vite for modern frontend development\n- **Python Backend**: FastAPI, SQLAlchemy, pandas, openpyxl for robust data processing\n- **Styling and UI**: Tailwind CSS, Font Awesome icons, TanStack Table for professional interface\n\n### Optional Integrations\n- **Data Warehouse**: Snowflake connector for sample data fetching (feature-flagged)\n- **Database Flexibility**: Architecture supports migration from SQLite to PostgreSQL or other databases\n- **Export Formats**: Built-in support for CSV, Excel, JSON, and SQL export without external services\n\n### Development Tools\n- **Build and Bundling**: Vite with optimized chunk splitting and vendor separation\n- **Type Safety**: TypeScript configuration with strict mode and path mapping\n- **Code Organization**: Modular architecture with clear separation of concerns\n\n### Environment Configuration\n- **Development Server**: Built-in proxy configuration for API routing\n- **Production Deployment**: Static file serving with FastAPI backend using unified port 5000\n- **Feature Toggles**: Environment-based configuration for optional features like warehouse connectivity\n- **Run Commands**: Simple crosswalk script for starting the application\n  - `./crosswalk run` or `crosswalk run`: Start production server with unified frontend/backend\n  - `./crosswalk dev` or `crosswalk dev`: Start development mode with separate ports\n  - `./crosswalk build` or `crosswalk build`: Build frontend only\n  - `./crosswalk help` or `crosswalk help`: Show available commands","size_bytes":4793},"backend/app.py":{"content":"\"\"\"\nFastAPI application for the Interactive Crosswalk & ETL Helper.\n\"\"\"\n\nfrom fastapi import FastAPI, HTTPException\nfrom fastapi.middleware.cors import CORSMiddleware\nfrom fastapi.staticfiles import StaticFiles\nimport os\n\nfrom database import engine\nfrom models import Base\nfrom routes import profiles, exports, datamodel, snowflake_export\nfrom routes import crosswalk_new as crosswalk, auto_mapping\n\n# Create FastAPI app\napp = FastAPI(\n    title=\"Interactive Crosswalk & ETL Helper\",\n    description=\"Data engineering tool for column mapping and validation\",\n    version=\"1.0.0\"\n)\n\n# CORS middleware - allow all origins for deployment\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],  # Allow all origins for deployment\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n# Include API routers\napp.include_router(profiles.router, prefix=\"/api\")\napp.include_router(crosswalk.router, prefix=\"/api\")\napp.include_router(exports.router, prefix=\"/api\")\napp.include_router(datamodel.router)\napp.include_router(snowflake_export.router)\napp.include_router(auto_mapping.router)\n\n# Serve static files from the frontend build directory\nfrontend_dist_path = os.path.join(os.path.dirname(__file__), \"../frontend/dist\")\nif os.path.exists(frontend_dist_path):\n    app.mount(\"/\", StaticFiles(directory=frontend_dist_path, html=True), name=\"static\")\nelse:\n    print(f\"⚠️  Warning: Frontend dist directory not found at {frontend_dist_path}\")\n    print(\"   Run 'cd frontend && npm run build' to build the frontend first.\")\n\n@app.get(\"/api/health\")\nasync def health_check():\n    \"\"\"Health check endpoint\"\"\"\n    return {\"status\": \"healthy\", \"service\": \"crosswalk-etl-helper\"}\n\n@app.on_event(\"startup\")\nasync def startup_event():\n    \"\"\"Initialize database on startup\"\"\"\n    Base.metadata.create_all(bind=engine)\n","size_bytes":1840},"backend/database.py":{"content":"\"\"\"\nDatabase configuration and connection management.\n\"\"\"\n\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\nimport os\n\n# Database URL - use PostgreSQL from environment\nDATABASE_URL = os.getenv(\"DATABASE_URL\")\n\nif not DATABASE_URL:\n    raise ValueError(\"DATABASE_URL environment variable is required\")\n\n# Create engine\nengine = create_engine(DATABASE_URL)\n\n# Create session factory\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n\ndef get_db():\n    \"\"\"Dependency to get database session\"\"\"\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n\ndef init_db():\n    \"\"\"Initialize database tables\"\"\"\n    from models import Base\n    Base.metadata.create_all(bind=engine)\n","size_bytes":750},"backend/models.py":{"content":"\"\"\"\nSQLAlchemy models for the Interactive Crosswalk & ETL Helper.\n\"\"\"\n\nfrom sqlalchemy import Column, Integer, String, Text, Boolean, DateTime, ForeignKey\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import relationship\nfrom datetime import datetime\n\nBase = declarative_base()\n\nclass DataModelField(Base):\n    __tablename__ = \"data_model_fields\"\n    \n    id = Column(Integer, primary_key=True)\n    model_table = Column(String, nullable=False)\n    model_column = Column(String, nullable=False)\n    description = Column(Text)\n    data_type = Column(String)\n    required = Column(Boolean, default=False)\n    unique_key = Column(Boolean, default=False)\n\nclass SourceProfile(Base):\n    __tablename__ = \"source_profiles\"\n    \n    id = Column(Integer, primary_key=True)\n    name = Column(String, nullable=False)\n    client_id = Column(String)\n    created_at = Column(DateTime, default=datetime.utcnow)\n    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)\n    has_physical_file = Column(Boolean, default=False)\n    raw_table_name = Column(String)\n    \n    # Relationships\n    source_columns = relationship(\"SourceColumn\", back_populates=\"profile\", cascade=\"all, delete-orphan\")\n    crosswalk_mappings = relationship(\"CrosswalkMapping\", back_populates=\"profile\", cascade=\"all, delete-orphan\")\n    warehouse_configs = relationship(\"WarehouseConfig\", back_populates=\"profile\", cascade=\"all, delete-orphan\")\n\nclass SourceColumn(Base):\n    __tablename__ = \"source_columns\"\n    \n    id = Column(Integer, primary_key=True)\n    profile_id = Column(Integer, ForeignKey(\"source_profiles.id\"), nullable=False)\n    source_column = Column(String, nullable=False)\n    sample_values_json = Column(Text)  # JSON array of strings\n    inferred_type = Column(String)  # string/number/date/boolean\n    \n    # Relationships\n    profile = relationship(\"SourceProfile\", back_populates=\"source_columns\")\n    regex_rules = relationship(\"RegexRule\", back_populates=\"source_column\", cascade=\"all, delete-orphan\")\n    crosswalk_mappings = relationship(\"CrosswalkMapping\", back_populates=\"source_column\", cascade=\"all, delete-orphan\")\n\nclass CrosswalkMapping(Base):\n    __tablename__ = \"crosswalk_mappings\"\n    \n    id = Column(Integer, primary_key=True)\n    profile_id = Column(Integer, ForeignKey(\"source_profiles.id\"), nullable=False)\n    source_column_id = Column(Integer, ForeignKey(\"source_columns.id\"), nullable=False)\n    model_table = Column(String, nullable=False)\n    model_column = Column(String, nullable=False)\n    is_custom_field = Column(Boolean, default=False)\n    custom_field_name = Column(String)\n    transform_expression = Column(Text)\n    notes = Column(Text)\n    \n    # Relationships\n    profile = relationship(\"SourceProfile\", back_populates=\"crosswalk_mappings\")\n    source_column = relationship(\"SourceColumn\", back_populates=\"crosswalk_mappings\")\n\nclass RegexRule(Base):\n    __tablename__ = \"regex_rules\"\n    \n    id = Column(Integer, primary_key=True)\n    source_column_id = Column(Integer, ForeignKey(\"source_columns.id\"), nullable=False)\n    rule_name = Column(String)\n    pattern = Column(Text)\n    flags = Column(String)  # e.g., 'i,m'\n    description = Column(Text)\n    \n    # Relationships\n    source_column = relationship(\"SourceColumn\", back_populates=\"regex_rules\")\n\nclass WarehouseConfig(Base):\n    __tablename__ = \"warehouse_configs\"\n    \n    id = Column(Integer, primary_key=True)\n    profile_id = Column(Integer, ForeignKey(\"source_profiles.id\"), nullable=False)\n    engine = Column(String)  # 'snowflake'\n    account = Column(String)\n    user = Column(String)\n    role = Column(String)\n    warehouse = Column(String)\n    database = Column(String)\n    schema = Column(String)\n    private_key_path = Column(String)\n    password_secret = Column(String)\n    stored_procedure_call = Column(Text)  # Template with {RAW_TABLE}\n    enabled = Column(Boolean, default=False)\n    \n    # Relationships\n    profile = relationship(\"SourceProfile\", back_populates=\"warehouse_configs\")\n","size_bytes":4038},"backend/seed_data.py":{"content":"\"\"\"\nSeed data for the Interactive Crosswalk & ETL Helper.\n\"\"\"\n\nfrom sqlalchemy.orm import Session\nfrom database import SessionLocal\nfrom models import DataModelField\n\ndef seed_initial_data():\n    \"\"\"Seed initial data model fields\"\"\"\n    db = SessionLocal()\n    \n    try:\n        # Check if data already exists\n        existing_fields = db.query(DataModelField).first()\n        if existing_fields:\n            return  # Data already seeded\n        \n        # Define seed data\n        seed_fields = [\n            # CLAIM table\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"CLAIM_ID\",\n                \"description\": \"Unique identifier for the claim\",\n                \"data_type\": \"VARCHAR(50)\",\n                \"required\": True,\n                \"unique_key\": True\n            },\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"MEMBER_ID\",\n                \"description\": \"Member/Patient identifier\",\n                \"data_type\": \"VARCHAR(50)\",\n                \"required\": True,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"CLAIM_TYPE\",\n                \"description\": \"Type of claim (MEDICAL, PHARM, etc.)\",\n                \"data_type\": \"VARCHAR(20)\",\n                \"required\": True,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"SERVICE_DATE\",\n                \"description\": \"Date of service\",\n                \"data_type\": \"DATE\",\n                \"required\": True,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"AMOUNT\",\n                \"description\": \"Claim amount\",\n                \"data_type\": \"DECIMAL(10,2)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"PLAN_CODE\",\n                \"description\": \"Insurance plan code\",\n                \"data_type\": \"VARCHAR(20)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            \n            # PROVIDER table\n            {\n                \"model_table\": \"PROVIDER\",\n                \"model_column\": \"NPI\",\n                \"description\": \"National Provider Identifier\",\n                \"data_type\": \"VARCHAR(10)\",\n                \"required\": True,\n                \"unique_key\": True\n            },\n            {\n                \"model_table\": \"PROVIDER\",\n                \"model_column\": \"PROVIDER_NAME\",\n                \"description\": \"Provider name\",\n                \"data_type\": \"VARCHAR(255)\",\n                \"required\": True,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"PROVIDER\",\n                \"model_column\": \"TAXONOMY\",\n                \"description\": \"Provider taxonomy code\",\n                \"data_type\": \"VARCHAR(50)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"PROVIDER\",\n                \"model_column\": \"SPECIALTY\",\n                \"description\": \"Provider specialty\",\n                \"data_type\": \"VARCHAR(100)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"PROVIDER\",\n                \"model_column\": \"ADDRESS_STATE\",\n                \"description\": \"Provider state\",\n                \"data_type\": \"VARCHAR(2)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            \n            # PLAN table\n            {\n                \"model_table\": \"PLAN\",\n                \"model_column\": \"PLAN_CODE\",\n                \"description\": \"Plan identifier code\",\n                \"data_type\": \"VARCHAR(20)\",\n                \"required\": True,\n                \"unique_key\": True\n            },\n            {\n                \"model_table\": \"PLAN\",\n                \"model_column\": \"PLAN_NAME\",\n                \"description\": \"Plan name\",\n                \"data_type\": \"VARCHAR(255)\",\n                \"required\": True,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"PLAN\",\n                \"model_column\": \"PLAN_TYPE\",\n                \"description\": \"Type of plan (HMO, PPO, etc.)\",\n                \"data_type\": \"VARCHAR(20)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"PLAN\",\n                \"model_column\": \"EFFECTIVE_DATE\",\n                \"description\": \"Plan effective date\",\n                \"data_type\": \"DATE\",\n                \"required\": False,\n                \"unique_key\": False\n            }\n        ]\n        \n        # Insert seed data\n        for field_data in seed_fields:\n            field = DataModelField(**field_data)\n            db.add(field)\n        \n        db.commit()\n        print(\"✅ Seed data inserted successfully\")\n        \n    except Exception as e:\n        print(f\"❌ Error seeding data: {e}\")\n        db.rollback()\n    finally:\n        db.close()\n\nif __name__ == \"__main__\":\n    seed_initial_data()\n","size_bytes":5300},"backend/seed_database.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nStandalone database seeding script for the Interactive Crosswalk & ETL Helper.\n\"\"\"\n\nimport os\nimport sys\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\n\n# Add backend directory to path for imports\nbackend_dir = os.path.dirname(os.path.abspath(__file__))\nsys.path.insert(0, backend_dir)\n\nfrom models import Base, DataModelField\n\ndef seed_database():\n    \"\"\"Seed the database with initial data\"\"\"\n    # Get database URL from environment\n    DATABASE_URL = os.getenv(\"DATABASE_URL\")\n    \n    if not DATABASE_URL:\n        print(\"❌ DATABASE_URL environment variable is required\")\n        sys.exit(1)\n    \n    # Create engine and session\n    engine = create_engine(DATABASE_URL)\n    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n    \n    # Create all tables\n    Base.metadata.create_all(bind=engine)\n    \n    # Seed data\n    db = SessionLocal()\n    \n    try:\n        # Check if data already exists\n        existing_fields = db.query(DataModelField).first()\n        if existing_fields:\n            print(\"✅ Seed data already exists, skipping...\")\n            return\n        \n        # Define seed data\n        seed_fields = [\n            # CLAIM table\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"CLAIM_ID\",\n                \"description\": \"Unique identifier for the claim\",\n                \"data_type\": \"VARCHAR(50)\",\n                \"required\": True,\n                \"unique_key\": True\n            },\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"MEMBER_ID\",\n                \"description\": \"Member/Patient identifier\",\n                \"data_type\": \"VARCHAR(50)\",\n                \"required\": True,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"CLAIM_TYPE\",\n                \"description\": \"Type of claim (MEDICAL, PHARM, etc.)\",\n                \"data_type\": \"VARCHAR(20)\",\n                \"required\": True,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"SERVICE_DATE\",\n                \"description\": \"Date of service\",\n                \"data_type\": \"DATE\",\n                \"required\": True,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"AMOUNT\",\n                \"description\": \"Claim amount\",\n                \"data_type\": \"DECIMAL(10,2)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"CLAIM\",\n                \"model_column\": \"PLAN_CODE\",\n                \"description\": \"Insurance plan code\",\n                \"data_type\": \"VARCHAR(20)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            \n            # PROVIDER table\n            {\n                \"model_table\": \"PROVIDER\",\n                \"model_column\": \"NPI\",\n                \"description\": \"National Provider Identifier\",\n                \"data_type\": \"VARCHAR(10)\",\n                \"required\": True,\n                \"unique_key\": True\n            },\n            {\n                \"model_table\": \"PROVIDER\",\n                \"model_column\": \"PROVIDER_NAME\",\n                \"description\": \"Provider name\",\n                \"data_type\": \"VARCHAR(255)\",\n                \"required\": True,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"PROVIDER\",\n                \"model_column\": \"TAXONOMY\",\n                \"description\": \"Provider taxonomy code\",\n                \"data_type\": \"VARCHAR(50)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"PROVIDER\",\n                \"model_column\": \"SPECIALTY\",\n                \"description\": \"Provider specialty\",\n                \"data_type\": \"VARCHAR(100)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"PROVIDER\",\n                \"model_column\": \"ADDRESS_STATE\",\n                \"description\": \"Provider state\",\n                \"data_type\": \"VARCHAR(2)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            \n            # PLAN table\n            {\n                \"model_table\": \"PLAN\",\n                \"model_column\": \"PLAN_CODE\",\n                \"description\": \"Plan identifier code\",\n                \"data_type\": \"VARCHAR(20)\",\n                \"required\": True,\n                \"unique_key\": True\n            },\n            {\n                \"model_table\": \"PLAN\",\n                \"model_column\": \"PLAN_NAME\",\n                \"description\": \"Plan name\",\n                \"data_type\": \"VARCHAR(255)\",\n                \"required\": True,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"PLAN\",\n                \"model_column\": \"PLAN_TYPE\",\n                \"description\": \"Type of plan (HMO, PPO, etc.)\",\n                \"data_type\": \"VARCHAR(20)\",\n                \"required\": False,\n                \"unique_key\": False\n            },\n            {\n                \"model_table\": \"PLAN\",\n                \"model_column\": \"EFFECTIVE_DATE\",\n                \"description\": \"Plan effective date\",\n                \"data_type\": \"DATE\",\n                \"required\": False,\n                \"unique_key\": False\n            }\n        ]\n        \n        # Insert seed data\n        for field_data in seed_fields:\n            field = DataModelField(**field_data)\n            db.add(field)\n        \n        db.commit()\n        print(\"✅ Seed data inserted successfully\")\n        \n    except Exception as e:\n        print(f\"❌ Error seeding data: {e}\")\n        db.rollback()\n        raise\n    finally:\n        db.close()\n\nif __name__ == \"__main__\":\n    seed_database()","size_bytes":6020},"frontend/tailwind.config.js":{"content":"/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {\n      colors: {\n        primary: {\n          50: '#eff6ff',\n          100: '#dbeafe',\n          200: '#bfdbfe',\n          300: '#93c5fd',\n          400: '#60a5fa',\n          500: '#3b82f6',\n          600: '#2563eb',\n          700: '#1d4ed8',\n          800: '#1e40af',\n          900: '#1e3a8a',\n        },\n        gray: {\n          50: '#f9fafb',\n          100: '#f3f4f6',\n          200: '#e5e7eb',\n          300: '#d1d5db',\n          400: '#9ca3af',\n          500: '#6b7280',\n          600: '#4b5563',\n          700: '#374151',\n          800: '#1f2937',\n          900: '#111827',\n        },\n      },\n      fontFamily: {\n        sans: ['Inter', 'system-ui', 'sans-serif'],\n        mono: ['JetBrains Mono', 'Menlo', 'Monaco', 'monospace'],\n      },\n      spacing: {\n        '18': '4.5rem',\n        '88': '22rem',\n        '112': '28rem',\n        '128': '32rem',\n      },\n      maxWidth: {\n        '8xl': '88rem',\n        '9xl': '96rem',\n      },\n      animation: {\n        'fade-in': 'fadeIn 0.5s ease-in-out',\n        'slide-up': 'slideUp 0.3s ease-out',\n        'pulse-slow': 'pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite',\n      },\n      keyframes: {\n        fadeIn: {\n          '0%': { opacity: '0' },\n          '100%': { opacity: '1' },\n        },\n        slideUp: {\n          '0%': { transform: 'translateY(10px)', opacity: '0' },\n          '100%': { transform: 'translateY(0)', opacity: '1' },\n        },\n      },\n      boxShadow: {\n        'soft': '0 2px 15px -3px rgba(0, 0, 0, 0.07), 0 10px 20px -2px rgba(0, 0, 0, 0.04)',\n        'medium': '0 4px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n        'large': '0 10px 50px -12px rgba(0, 0, 0, 0.25)',\n      },\n      borderRadius: {\n        'xl': '0.75rem',\n        '2xl': '1rem',\n        '3xl': '1.5rem',\n      },\n    },\n  },\n  plugins: [\n    require('@tailwindcss/forms'),\n    require('@tailwindcss/typography'),\n  ],\n}\n","size_bytes":2062},"frontend/vite.config.ts":{"content":"import { defineConfig } from 'vite';\nimport react from '@vitejs/plugin-react';\nimport * as path from 'path';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [react()],\n  resolve: {\n    alias: {\n      '@': path.resolve(process.cwd(), './src'),\n    },\n  },\n  server: {\n    port: 5000,\n    host: '0.0.0.0',\n    allowedHosts: [\n      'localhost',\n      '127.0.0.1',\n      '0.0.0.0',\n      '2d407761-82f9-41d4-ba0a-726076ef8463-00-3f4wap61ppvlh.worf.replit.dev',\n      '.replit.dev'\n    ],\n    proxy: {\n      '/api': {\n        target: 'http://0.0.0.0:8000',\n        changeOrigin: true,\n        secure: false,\n      },\n    },\n  },\n  build: {\n    outDir: 'dist',\n    sourcemap: true,\n    rollupOptions: {\n      output: {\n        manualChunks: {\n          vendor: ['react', 'react-dom'],\n          table: ['@tanstack/react-table'],\n        },\n      },\n    },\n  },\n  define: {\n    'process.env.NODE_ENV': JSON.stringify('development'),\n  },\n  optimizeDeps: {\n    include: ['react', 'react-dom', '@tanstack/react-table'],\n  },\n});\n","size_bytes":1045},"backend/routes/crosswalk.py":{"content":"\"\"\"\nFastAPI routes for crosswalk mapping management.\n\"\"\"\n\nfrom fastapi import APIRouter, Depends, HTTPException\nfrom sqlalchemy.orm import Session\nfrom typing import List, Dict, Any\nimport re\nimport json\n\nfrom database import get_db\nfrom models import SourceProfile, SourceColumn, CrosswalkMapping, RegexRule\nfrom services.dsl_engine import DSLEngine\nfrom services.warehouse_service import WarehouseService\n\nrouter = APIRouter()\n\n@router.get(\"/profiles/{profile_id}/crosswalk\")\nasync def get_crosswalk_mappings(profile_id: int, db: Session = Depends(get_db)):\n    \"\"\"Get all crosswalk mappings for a profile\"\"\"\n    profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n    if not profile:\n        raise HTTPException(status_code=404, detail=\"Profile not found\")\n    \n    # Get source columns\n    source_columns = db.query(SourceColumn).filter(SourceColumn.profile_id == profile_id).all()\n    \n    mappings_data = []\n    for col in source_columns:\n        # Get existing mapping\n        mapping = db.query(CrosswalkMapping).filter(\n            CrosswalkMapping.source_column_id == col.id\n        ).first()\n        \n        # Get regex rules\n        regex_rules = db.query(RegexRule).filter(\n            RegexRule.source_column_id == col.id\n        ).all()\n        \n        mappings_data.append({\n            \"source_column_id\": col.id,\n            \"source_column\": col.source_column,\n            \"sample_values\": json.loads(col.sample_values_json or \"[]\"),\n            \"inferred_type\": col.inferred_type,\n            \"model_table\": mapping.model_table if mapping else \"\",\n            \"model_column\": mapping.model_column if mapping else \"\",\n            \"is_custom_field\": mapping.is_custom_field if mapping else False,\n            \"custom_field_name\": mapping.custom_field_name if mapping else \"\",\n            \"transform_expression\": mapping.transform_expression if mapping else \"\",\n            \"notes\": mapping.notes if mapping else \"\",\n            \"is_mapped\": bool(mapping and (mapping.model_column or mapping.custom_field_name)),\n            \"regex_rules\": [{\n                \"id\": rule.id,\n                \"rule_name\": rule.rule_name,\n                \"pattern\": rule.pattern,\n                \"flags\": rule.flags,\n                \"description\": rule.description\n            } for rule in regex_rules]\n        })\n    \n    return mappings_data\n\n@router.put(\"/profiles/{profile_id}/crosswalk\")\nasync def update_crosswalk_mappings(\n    profile_id: int,\n    mappings: List[Dict[str, Any]],\n    db: Session = Depends(get_db)\n):\n    \"\"\"Bulk update crosswalk mappings\"\"\"\n    profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n    if not profile:\n        raise HTTPException(status_code=404, detail=\"Profile not found\")\n    \n    try:\n        for mapping_data in mappings:\n            source_column_id = mapping_data.get(\"source_column_id\")\n            if not source_column_id:\n                continue\n            \n            # Verify source column exists\n            source_column = db.query(SourceColumn).filter(\n                SourceColumn.id == source_column_id,\n                SourceColumn.profile_id == profile_id\n            ).first()\n            \n            if not source_column:\n                continue\n            \n            # Get or create mapping\n            mapping = db.query(CrosswalkMapping).filter(\n                CrosswalkMapping.source_column_id == source_column_id\n            ).first()\n            \n            if not mapping:\n                mapping = CrosswalkMapping(\n                    profile_id=profile_id,\n                    source_column_id=source_column_id,\n                    model_table=\"\",\n                    model_column=\"\"\n                )\n                db.add(mapping)\n            \n            # Update mapping fields\n            mapping.model_table = mapping_data.get(\"model_table\", \"\")\n            mapping.model_column = mapping_data.get(\"model_column\", \"\")\n            mapping.is_custom_field = mapping_data.get(\"is_custom_field\", False)\n            mapping.custom_field_name = mapping_data.get(\"custom_field_name\", \"\")\n            mapping.transform_expression = mapping_data.get(\"transform_expression\", \"\")\n            mapping.notes = mapping_data.get(\"notes\", \"\")\n        \n        db.commit()\n        return {\"message\": \"Mappings updated successfully\"}\n        \n    except Exception as e:\n        db.rollback()\n        raise HTTPException(status_code=400, detail=str(e))\n\n@router.post(\"/source-columns/{source_column_id}/regex\")\nasync def create_regex_rule(\n    source_column_id: int,\n    rule_data: Dict[str, Any],\n    db: Session = Depends(get_db)\n):\n    \"\"\"Create or update a regex rule for a source column\"\"\"\n    source_column = db.query(SourceColumn).filter(SourceColumn.id == source_column_id).first()\n    if not source_column:\n        raise HTTPException(status_code=404, detail=\"Source column not found\")\n    \n    try:\n        # Validate regex pattern\n        pattern = rule_data.get(\"pattern\", \"\")\n        if pattern:\n            re.compile(pattern)  # Test if regex is valid\n        \n        # Create rule\n        rule = RegexRule(\n            source_column_id=source_column_id,\n            rule_name=rule_data.get(\"rule_name\", \"\"),\n            pattern=pattern,\n            flags=rule_data.get(\"flags\", \"\"),\n            description=rule_data.get(\"description\", \"\")\n        )\n        \n        db.add(rule)\n        db.commit()\n        db.refresh(rule)\n        \n        return {\n            \"id\": rule.id,\n            \"rule_name\": rule.rule_name,\n            \"pattern\": rule.pattern,\n            \"flags\": rule.flags,\n            \"description\": rule.description\n        }\n        \n    except re.error as e:\n        raise HTTPException(status_code=400, detail=f\"Invalid regex pattern: {str(e)}\")\n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n@router.delete(\"/regex-rules/{rule_id}\")\nasync def delete_regex_rule(rule_id: int, db: Session = Depends(get_db)):\n    \"\"\"Delete a regex rule\"\"\"\n    rule = db.query(RegexRule).filter(RegexRule.id == rule_id).first()\n    if not rule:\n        raise HTTPException(status_code=404, detail=\"Regex rule not found\")\n    \n    db.delete(rule)\n    db.commit()\n    \n    return {\"message\": \"Regex rule deleted successfully\"}\n\n@router.get(\"/source-columns/{source_column_id}/regex/test\")\nasync def test_regex_rule(\n    source_column_id: int,\n    pattern: str,\n    value: str,\n    flags: str = \"\",\n    db: Session = Depends(get_db)\n):\n    \"\"\"Test a regex pattern against a value\"\"\"\n    source_column = db.query(SourceColumn).filter(SourceColumn.id == source_column_id).first()\n    if not source_column:\n        raise HTTPException(status_code=404, detail=\"Source column not found\")\n    \n    try:\n        # Parse flags\n        regex_flags = 0\n        if 'i' in flags.lower():\n            regex_flags |= re.IGNORECASE\n        if 'm' in flags.lower():\n            regex_flags |= re.MULTILINE\n        if 's' in flags.lower():\n            regex_flags |= re.DOTALL\n        \n        # Test regex\n        compiled_pattern = re.compile(pattern, regex_flags)\n        match = compiled_pattern.search(value)\n        \n        result = {\n            \"matches\": bool(match),\n            \"groups\": [],\n            \"full_match\": \"\"\n        }\n        \n        if match:\n            result[\"groups\"] = list(match.groups())\n            result[\"full_match\"] = match.group(0)\n        \n        return result\n        \n    except re.error as e:\n        raise HTTPException(status_code=400, detail=f\"Invalid regex pattern: {str(e)}\")\n\n@router.get(\"/profiles/{profile_id}/validation-summary\")\nasync def get_validation_summary(profile_id: int, db: Session = Depends(get_db)):\n    \"\"\"Get validation summary for a profile\"\"\"\n    profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n    if not profile:\n        raise HTTPException(status_code=404, detail=\"Profile not found\")\n    \n    # Get source columns\n    source_columns = db.query(SourceColumn).filter(SourceColumn.profile_id == profile_id).all()\n    total_columns = len(source_columns)\n    \n    # Count mapped columns\n    mapped_columns = 0\n    regex_pass_count = 0\n    regex_fail_count = 0\n    \n    for col in source_columns:\n        mapping = db.query(CrosswalkMapping).filter(\n            CrosswalkMapping.source_column_id == col.id\n        ).first()\n        \n        if mapping and (mapping.model_column or mapping.custom_field_name):\n            mapped_columns += 1\n        \n        # Check regex rules\n        regex_rules = db.query(RegexRule).filter(\n            RegexRule.source_column_id == col.id\n        ).all()\n        \n        sample_values = json.loads(col.sample_values_json or \"[]\")\n        \n        for rule in regex_rules:\n            if rule.pattern and sample_values:\n                try:\n                    # Parse flags\n                    regex_flags = 0\n                    if rule.flags:\n                        if 'i' in rule.flags.lower():\n                            regex_flags |= re.IGNORECASE\n                        if 'm' in rule.flags.lower():\n                            regex_flags |= re.MULTILINE\n                        if 's' in rule.flags.lower():\n                            regex_flags |= re.DOTALL\n                    \n                    compiled_pattern = re.compile(rule.pattern, regex_flags)\n                    \n                    for value in sample_values:\n                        if compiled_pattern.search(str(value)):\n                            regex_pass_count += 1\n                        else:\n                            regex_fail_count += 1\n                            \n                except re.error:\n                    regex_fail_count += len(sample_values)\n    \n    mapping_percentage = (mapped_columns / total_columns * 100) if total_columns > 0 else 0\n    \n    return {\n        \"total_columns\": total_columns,\n        \"mapped_columns\": mapped_columns,\n        \"unmapped_columns\": total_columns - mapped_columns,\n        \"mapping_percentage\": round(mapping_percentage, 1),\n        \"regex_pass_count\": regex_pass_count,\n        \"regex_fail_count\": regex_fail_count\n    }\n\n@router.post(\"/profiles/{profile_id}/sample/fetch\")\nasync def fetch_warehouse_sample(profile_id: int, db: Session = Depends(get_db)):\n    \"\"\"Fetch sample data from warehouse\"\"\"\n    try:\n        sample_data = await WarehouseService.fetch_sample_data(db, profile_id)\n        return {\n            \"success\": True,\n            \"row_count\": len(sample_data),\n            \"data\": sample_data\n        }\n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n@router.post(\"/dsl/validate\")\nasync def validate_dsl_expression(expression_data: Dict[str, str]):\n    \"\"\"Validate a DSL transform expression\"\"\"\n    expression = expression_data.get(\"expression\", \"\")\n    result = DSLEngine.validate_expression(expression)\n    return result\n\n@router.post(\"/dsl/translate\")\nasync def translate_dsl_to_sql(translation_data: Dict[str, Any]):\n    \"\"\"Translate DSL expression to SQL\"\"\"\n    expression = translation_data.get(\"expression\", \"\")\n    column_mapping = translation_data.get(\"column_mapping\", {})\n    \n    try:\n        sql_expression = DSLEngine.translate_to_sql(expression, column_mapping)\n        return {\n            \"success\": True,\n            \"sql_expression\": sql_expression\n        }\n    except Exception as e:\n        return {\n            \"success\": False,\n            \"error\": str(e)\n        }\n","size_bytes":11497},"backend/routes/exports.py":{"content":"\"\"\"\nFastAPI routes for export functionality.\n\"\"\"\n\nfrom fastapi import APIRouter, Depends, HTTPException\nfrom fastapi.responses import StreamingResponse\nfrom sqlalchemy.orm import Session\nfrom io import StringIO, BytesIO\nimport json\n\nfrom database import get_db\nfrom services.export_service import ExportService\n\nrouter = APIRouter()\n\n@router.get(\"/profiles/{profile_id}/export/csv\")\nasync def export_crosswalk_csv(profile_id: int, db: Session = Depends(get_db)):\n    \"\"\"Export crosswalk as CSV\"\"\"\n    try:\n        csv_content = ExportService.export_crosswalk_csv(db, profile_id)\n        \n        return StreamingResponse(\n            StringIO(csv_content),\n            media_type=\"text/csv\",\n            headers={\"Content-Disposition\": f\"attachment; filename=crosswalk_{profile_id}.csv\"}\n        )\n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n@router.get(\"/profiles/{profile_id}/export/xlsx\")\nasync def export_crosswalk_excel(profile_id: int, db: Session = Depends(get_db)):\n    \"\"\"Export crosswalk as Excel\"\"\"\n    try:\n        excel_content = ExportService.export_crosswalk_excel(db, profile_id)\n        \n        return StreamingResponse(\n            BytesIO(excel_content),\n            media_type=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n            headers={\"Content-Disposition\": f\"attachment; filename=crosswalk_{profile_id}.xlsx\"}\n        )\n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n@router.get(\"/profiles/{profile_id}/export/json\")\nasync def export_json_config(profile_id: int, db: Session = Depends(get_db)):\n    \"\"\"Export crosswalk as JSON configuration\"\"\"\n    try:\n        json_config = ExportService.export_json_config(db, profile_id)\n        \n        return StreamingResponse(\n            StringIO(json.dumps(json_config, indent=2)),\n            media_type=\"application/json\",\n            headers={\"Content-Disposition\": f\"attachment; filename=crosswalk_{profile_id}.json\"}\n        )\n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n@router.get(\"/profiles/{profile_id}/export/sql\")\nasync def export_sql_script(profile_id: int, db: Session = Depends(get_db)):\n    \"\"\"Export crosswalk as SQL script\"\"\"\n    try:\n        sql_script = ExportService.export_sql_script(db, profile_id)\n        \n        return StreamingResponse(\n            StringIO(sql_script),\n            media_type=\"text/plain\",\n            headers={\"Content-Disposition\": f\"attachment; filename=crosswalk_{profile_id}.sql\"}\n        )\n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n","size_bytes":2653},"backend/routes/profiles.py":{"content":"\"\"\"\nFastAPI routes for profile management.\n\"\"\"\n\nfrom fastapi import APIRouter, Depends, HTTPException, UploadFile, File, Form\nfrom sqlalchemy.orm import Session\nfrom typing import List, Dict, Any\nimport json\n\nfrom database import get_db\nfrom models import SourceProfile, SourceColumn, DataModelField\nfrom services.file_parser import FileParser\n\nrouter = APIRouter()\n\n@router.post(\"/profiles\")\nasync def create_profile(\n    name: str = Form(...),\n    client_id: str = Form(\"\"),\n    db: Session = Depends(get_db)\n):\n    \"\"\"Create a new source profile\"\"\"\n    profile = SourceProfile(\n        name=name,\n        client_id=client_id if client_id else None\n    )\n    db.add(profile)\n    db.commit()\n    db.refresh(profile)\n    return {\"id\": profile.id, \"name\": profile.name, \"client_id\": profile.client_id}\n\n@router.get(\"/profiles\")\nasync def list_profiles(db: Session = Depends(get_db)):\n    \"\"\"List all profiles\"\"\"\n    profiles = db.query(SourceProfile).all()\n    return [{\n        \"id\": p.id,\n        \"name\": p.name,\n        \"client_id\": p.client_id,\n        \"created_at\": p.created_at.isoformat() if p.created_at else None,\n        \"has_physical_file\": p.has_physical_file,\n        \"raw_table_name\": p.raw_table_name\n    } for p in profiles]\n\n@router.get(\"/profiles/{profile_id}\")\nasync def get_profile(profile_id: int, db: Session = Depends(get_db)):\n    \"\"\"Get a specific profile\"\"\"\n    profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n    if not profile:\n        raise HTTPException(status_code=404, detail=\"Profile not found\")\n    \n    return {\n        \"id\": profile.id,\n        \"name\": profile.name,\n        \"client_id\": profile.client_id,\n        \"created_at\": profile.created_at.isoformat() if profile.created_at else None,\n        \"has_physical_file\": profile.has_physical_file,\n        \"raw_table_name\": profile.raw_table_name\n    }\n\n@router.post(\"/profiles/{profile_id}/source/ingest-file\")\nasync def ingest_file(\n    profile_id: int,\n    file: UploadFile = File(...),\n    db: Session = Depends(get_db)\n):\n    \"\"\"Upload and parse a source file (CSV/XLSX)\"\"\"\n    profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n    if not profile:\n        raise HTTPException(status_code=404, detail=\"Profile not found\")\n    \n    try:\n        # Read file content\n        file_content = await file.read()\n        \n        # Parse file\n        column_names, column_data = FileParser.parse_file(file_content, file.filename)\n        \n        # Clear existing source columns\n        db.query(SourceColumn).filter(SourceColumn.profile_id == profile_id).delete()\n        \n        # Create source columns\n        for col_name in column_names:\n            col_info = column_data.get(col_name, {})\n            source_column = SourceColumn(\n                profile_id=profile_id,\n                source_column=col_name,\n                sample_values_json=json.dumps(col_info.get('sample_values', [])),\n                inferred_type=col_info.get('inferred_type', 'string')\n            )\n            db.add(source_column)\n        \n        # Update profile\n        profile.has_physical_file = True\n        \n        db.commit()\n        \n        return {\n            \"message\": \"File ingested successfully\",\n            \"columns_count\": len(column_names),\n            \"columns\": column_names\n        }\n        \n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n@router.post(\"/profiles/{profile_id}/source/ingest-schema\")\nasync def ingest_schema(\n    profile_id: int,\n    schema_data: Dict[str, List[str]],\n    db: Session = Depends(get_db)\n):\n    \"\"\"Ingest schema from column list\"\"\"\n    profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n    if not profile:\n        raise HTTPException(status_code=404, detail=\"Profile not found\")\n    \n    try:\n        column_names = schema_data.get(\"columns\", [])\n        \n        if not column_names:\n            raise ValueError(\"No columns provided\")\n        \n        # Clear existing source columns\n        db.query(SourceColumn).filter(SourceColumn.profile_id == profile_id).delete()\n        \n        # Create source columns (without sample data)\n        for col_name in column_names:\n            source_column = SourceColumn(\n                profile_id=profile_id,\n                source_column=col_name.strip(),\n                sample_values_json=json.dumps([]),\n                inferred_type='string'\n            )\n            db.add(source_column)\n        \n        profile.has_physical_file = False\n        \n        db.commit()\n        \n        return {\n            \"message\": \"Schema ingested successfully\",\n            \"columns_count\": len(column_names),\n            \"columns\": column_names\n        }\n        \n    except Exception as e:\n        raise HTTPException(status_code=400, detail=str(e))\n\n@router.get(\"/profiles/{profile_id}/source-columns\")\nasync def get_source_columns(profile_id: int, db: Session = Depends(get_db)):\n    \"\"\"Get source columns for a profile\"\"\"\n    profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n    if not profile:\n        raise HTTPException(status_code=404, detail=\"Profile not found\")\n    \n    columns = db.query(SourceColumn).filter(SourceColumn.profile_id == profile_id).all()\n    \n    return [{\n        \"id\": col.id,\n        \"source_column\": col.source_column,\n        \"sample_values\": json.loads(col.sample_values_json or \"[]\"),\n        \"inferred_type\": col.inferred_type\n    } for col in columns]\n\n@router.get(\"/data-model-fields\")\nasync def get_data_model_fields(db: Session = Depends(get_db)):\n    \"\"\"Get all data model fields\"\"\"\n    fields = db.query(DataModelField).all()\n    \n    # Group by table\n    tables = {}\n    for field in fields:\n        if field.model_table not in tables:\n            tables[field.model_table] = []\n        tables[field.model_table].append({\n            \"id\": field.id,\n            \"column\": field.model_column,\n            \"description\": field.description,\n            \"data_type\": field.data_type,\n            \"required\": field.required,\n            \"unique_key\": field.unique_key\n        })\n    \n    return tables\n\n@router.put(\"/profiles/{profile_id}/raw-table-name\")\nasync def update_raw_table_name(\n    profile_id: int,\n    table_data: Dict[str, str],\n    db: Session = Depends(get_db)\n):\n    \"\"\"Update the raw table name for warehouse connectivity\"\"\"\n    profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n    if not profile:\n        raise HTTPException(status_code=404, detail=\"Profile not found\")\n    \n    profile.raw_table_name = table_data.get(\"raw_table_name\", \"\").strip()\n    db.commit()\n    \n    return {\"message\": \"Raw table name updated successfully\"}\n","size_bytes":6752},"backend/services/dsl_engine.py":{"content":"\"\"\"\nDSL (Domain Specific Language) engine for transform expressions.\n\"\"\"\n\nimport re\nfrom typing import Any, Dict, List\nfrom dataclasses import dataclass\n\n@dataclass\nclass DSLFunction:\n    name: str\n    args: List[Any]\n\nclass DSLEngine:\n    \"\"\"Simple DSL engine for transform expressions\"\"\"\n    \n    FUNCTION_PATTERNS = {\n        'upper': r'upper\\(([^)]+)\\)',\n        'lower': r'lower\\(([^)]+)\\)',\n        'trim': r'trim\\(([^)]+)\\)',\n        'substr': r'substr\\(([^,]+),\\s*(\\d+),\\s*(\\d+)\\)',\n        'coalesce': r'coalesce\\(([^)]+)\\)',\n        'regex_extract': r'regex_extract\\(([^,]+),\\s*[\\'\"]([^\\'\\\"]+)[\\'\"],\\s*(\\d+)\\)',\n        'regex_replace': r'regex_replace\\(([^,]+),\\s*[\\'\"]([^\\'\\\"]+)[\\'\"],\\s*[\\'\"]([^\\'\\\"]*)[\\'\\\"]\\)',\n        'col': r'col\\([\\'\"]([^\\'\\\"]+)[\\'\"]\\)',\n        'if': r'if\\(([^,]+),\\s*([^,]+),\\s*([^)]+)\\)',\n        'matches': r'matches\\(([^,]+),\\s*[\\'\"]([^\\'\\\"]+)[\\'\\\"]\\)',\n        'is_null': r'is_null\\(([^)]+)\\)'\n    }\n    \n    @classmethod\n    def validate_expression(cls, expression: str) -> Dict[str, Any]:\n        \"\"\"\n        Validate a DSL expression and return validation result.\n        \"\"\"\n        try:\n            # Basic syntax validation\n            if not expression.strip():\n                return {\"valid\": True, \"message\": \"Empty expression\"}\n            \n            # Check for balanced parentheses\n            if not cls._check_balanced_parentheses(expression):\n                return {\"valid\": False, \"message\": \"Unbalanced parentheses\"}\n            \n            # Check for valid function calls\n            functions_found = cls._extract_functions(expression)\n            invalid_functions = []\n            \n            for func_call in functions_found:\n                if not cls._validate_function_call(func_call):\n                    invalid_functions.append(func_call)\n            \n            if invalid_functions:\n                return {\n                    \"valid\": False, \n                    \"message\": f\"Invalid function calls: {', '.join(invalid_functions)}\"\n                }\n            \n            return {\"valid\": True, \"message\": \"Valid expression\"}\n            \n        except Exception as e:\n            return {\"valid\": False, \"message\": f\"Validation error: {str(e)}\"}\n    \n    @classmethod\n    def translate_to_sql(cls, expression: str, column_mapping: Dict[str, str] = None) -> str:\n        \"\"\"\n        Translate DSL expression to SQL.\n        \n        Args:\n            expression: DSL expression to translate\n            column_mapping: Optional mapping of source columns to SQL column references\n        \"\"\"\n        if not expression.strip():\n            return \"NULL\"\n        \n        sql_expr = expression\n        \n        # Replace DSL functions with SQL equivalents\n        replacements = {\n            r'upper\\(([^)]+)\\)': r'UPPER(\\1)',\n            r'lower\\(([^)]+)\\)': r'LOWER(\\1)',\n            r'trim\\(([^)]+)\\)': r'TRIM(\\1)',\n            r'substr\\(([^,]+),\\s*(\\d+),\\s*(\\d+)\\)': r'SUBSTR(\\1, \\2, \\3)',\n            r'coalesce\\(([^)]+)\\)': r'COALESCE(\\1)',\n            r'regex_extract\\(([^,]+),\\s*[\\'\"]([^\\'\\\"]+)[\\'\"],\\s*(\\d+)\\)': r'REGEXP_SUBSTR(\\1, \\'\\2\\')',\n            r'regex_replace\\(([^,]+),\\s*[\\'\"]([^\\'\\\"]+)[\\'\"],\\s*[\\'\"]([^\\'\\\"]*)[\\'\\\"]\\)': r'REGEXP_REPLACE(\\1, \\'\\2\\', \\'\\3\\')',\n            r'if\\(([^,]+),\\s*([^,]+),\\s*([^)]+)\\)': r'CASE WHEN \\1 THEN \\2 ELSE \\3 END',\n            r'matches\\(([^,]+),\\s*[\\'\"]([^\\'\\\"]+)[\\'\\\"]\\)': r'REGEXP_LIKE(\\1, \\'\\2\\')',\n            r'is_null\\(([^)]+)\\)': r'(\\1 IS NULL)',\n        }\n        \n        for pattern, replacement in replacements.items():\n            sql_expr = re.sub(pattern, replacement, sql_expr, flags=re.IGNORECASE)\n        \n        # Replace column references\n        if column_mapping:\n            for source_col, sql_ref in column_mapping.items():\n                col_pattern = rf'col\\([\\'\\\"]{re.escape(source_col)}[\\'\\\"]\\)'\n                sql_expr = re.sub(col_pattern, sql_ref, sql_expr, flags=re.IGNORECASE)\n        else:\n            # Default column reference replacement\n            sql_expr = re.sub(r'col\\([\\'\"]([^\\'\\\"]+)[\\'\"]\\)', r'\\1', sql_expr, flags=re.IGNORECASE)\n        \n        return sql_expr\n    \n    @classmethod\n    def _check_balanced_parentheses(cls, expression: str) -> bool:\n        \"\"\"Check if parentheses are balanced in the expression\"\"\"\n        count = 0\n        for char in expression:\n            if char == '(':\n                count += 1\n            elif char == ')':\n                count -= 1\n                if count < 0:\n                    return False\n        return count == 0\n    \n    @classmethod\n    def _extract_functions(cls, expression: str) -> List[str]:\n        \"\"\"Extract function calls from expression\"\"\"\n        functions = []\n        for func_name, pattern in cls.FUNCTION_PATTERNS.items():\n            matches = re.findall(f'{func_name}\\\\([^)]*\\\\)', expression, re.IGNORECASE)\n            functions.extend(matches)\n        return functions\n    \n    @classmethod\n    def _validate_function_call(cls, func_call: str) -> bool:\n        \"\"\"Validate a specific function call\"\"\"\n        for func_name, pattern in cls.FUNCTION_PATTERNS.items():\n            if func_call.lower().startswith(func_name.lower()):\n                return bool(re.match(pattern, func_call, re.IGNORECASE))\n        return False\n","size_bytes":5285},"backend/services/export_service.py":{"content":"\"\"\"\nExport service for generating various output formats.\n\"\"\"\n\nimport json\nimport csv\nfrom io import StringIO, BytesIO\nfrom typing import List, Dict, Any\nimport pandas as pd\nfrom sqlalchemy.orm import Session\n\nfrom models import SourceProfile, SourceColumn, CrosswalkMapping, RegexRule, DataModelField\nfrom services.dsl_engine import DSLEngine\n\nclass ExportService:\n    \"\"\"Service for exporting crosswalk data in various formats\"\"\"\n    \n    @staticmethod\n    def export_crosswalk_csv(db: Session, profile_id: int) -> str:\n        \"\"\"Export crosswalk as CSV string\"\"\"\n        profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n        if not profile:\n            raise ValueError(\"Profile not found\")\n        \n        # Get all mappings with related data\n        mappings = db.query(CrosswalkMapping).filter(\n            CrosswalkMapping.profile_id == profile_id\n        ).all()\n        \n        # Prepare CSV data\n        csv_data = []\n        for mapping in mappings:\n            source_column = db.query(SourceColumn).filter(\n                SourceColumn.id == mapping.source_column_id\n            ).first()\n            \n            regex_rules = db.query(RegexRule).filter(\n                RegexRule.source_column_id == mapping.source_column_id\n            ).all()\n            \n            csv_data.append({\n                'client_id': profile.client_id or '',\n                'source_column': source_column.source_column if source_column else '',\n                'model_table': mapping.model_table,\n                'model_column': mapping.model_column,\n                'is_custom_field': mapping.is_custom_field,\n                'custom_field_name': mapping.custom_field_name or '',\n                'transform_expression': mapping.transform_expression or '',\n                'regex_rules': json.dumps([{\n                    'name': rule.rule_name,\n                    'pattern': rule.pattern,\n                    'flags': rule.flags,\n                    'description': rule.description\n                } for rule in regex_rules]),\n                'notes': mapping.notes or ''\n            })\n        \n        # Convert to CSV\n        if not csv_data:\n            return \"client_id,source_column,model_table,model_column,is_custom_field,custom_field_name,transform_expression,regex_rules,notes\\n\"\n        \n        output = StringIO()\n        writer = csv.DictWriter(output, fieldnames=csv_data[0].keys())\n        writer.writeheader()\n        writer.writerows(csv_data)\n        return output.getvalue()\n    \n    @staticmethod\n    def export_crosswalk_excel(db: Session, profile_id: int) -> bytes:\n        \"\"\"Export crosswalk as Excel bytes\"\"\"\n        csv_content = ExportService.export_crosswalk_csv(db, profile_id)\n        \n        # Convert CSV to DataFrame and then to Excel\n        df = pd.read_csv(StringIO(csv_content))\n        \n        output = BytesIO()\n        with pd.ExcelWriter(output, engine='openpyxl') as writer:\n            df.to_excel(writer, sheet_name='Crosswalk', index=False)\n        \n        output.seek(0)\n        return output.getvalue()\n    \n    @staticmethod\n    def export_json_config(db: Session, profile_id: int) -> Dict[str, Any]:\n        \"\"\"Export crosswalk as JSON configuration\"\"\"\n        profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n        if not profile:\n            raise ValueError(\"Profile not found\")\n        \n        mappings = db.query(CrosswalkMapping).filter(\n            CrosswalkMapping.profile_id == profile_id\n        ).all()\n        \n        json_mappings = []\n        for mapping in mappings:\n            source_column = db.query(SourceColumn).filter(\n                SourceColumn.id == mapping.source_column_id\n            ).first()\n            \n            regex_rules = db.query(RegexRule).filter(\n                RegexRule.source_column_id == mapping.source_column_id\n            ).all()\n            \n            mapping_data = {\n                \"source_column\": source_column.source_column if source_column else \"\",\n                \"target\": {\n                    \"table\": mapping.model_table,\n                    \"column\": mapping.model_column\n                },\n                \"custom\": mapping.is_custom_field,\n                \"transform\": mapping.transform_expression or \"\",\n                \"regex_rules\": [{\n                    \"name\": rule.rule_name,\n                    \"pattern\": rule.pattern,\n                    \"flags\": rule.flags,\n                    \"description\": rule.description\n                } for rule in regex_rules]\n            }\n            \n            if mapping.is_custom_field:\n                mapping_data[\"custom_field_name\"] = mapping.custom_field_name\n            \n            json_mappings.append(mapping_data)\n        \n        return {\n            \"client_id\": profile.client_id or \"\",\n            \"profile\": profile.name,\n            \"mappings\": json_mappings\n        }\n    \n    @staticmethod\n    def export_sql_script(db: Session, profile_id: int) -> str:\n        \"\"\"Export crosswalk as SQL script\"\"\"\n        profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n        if not profile:\n            raise ValueError(\"Profile not found\")\n        \n        mappings = db.query(CrosswalkMapping).filter(\n            CrosswalkMapping.profile_id == profile_id\n        ).all()\n        \n        sql_lines = []\n        \n        # Create table DDL\n        sql_lines.append(\"-- Crosswalk table creation (idempotent)\")\n        sql_lines.append(\"CREATE TABLE IF NOT EXISTS crosswalk_mappings (\")\n        sql_lines.append(\"    id INTEGER PRIMARY KEY,\")\n        sql_lines.append(\"    client_id VARCHAR(50),\")\n        sql_lines.append(\"    source_column VARCHAR(255),\")\n        sql_lines.append(\"    model_table VARCHAR(100),\")\n        sql_lines.append(\"    model_column VARCHAR(100),\")\n        sql_lines.append(\"    is_custom_field BOOLEAN DEFAULT FALSE,\")\n        sql_lines.append(\"    custom_field_name VARCHAR(255),\")\n        sql_lines.append(\"    transform_expression TEXT,\")\n        sql_lines.append(\"    regex_json TEXT,\")\n        sql_lines.append(\"    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\")\n        sql_lines.append(\"    UNIQUE(client_id, source_column)\")\n        sql_lines.append(\");\")\n        sql_lines.append(\"\")\n        \n        # Insert/Update statements\n        sql_lines.append(\"-- Upsert crosswalk mappings\")\n        \n        for mapping in mappings:\n            source_column = db.query(SourceColumn).filter(\n                SourceColumn.id == mapping.source_column_id\n            ).first()\n            \n            regex_rules = db.query(RegexRule).filter(\n                RegexRule.source_column_id == mapping.source_column_id\n            ).all()\n            \n            regex_json = json.dumps([{\n                'name': rule.rule_name,\n                'pattern': rule.pattern,\n                'flags': rule.flags,\n                'description': rule.description\n            } for rule in regex_rules])\n            \n            client_id = profile.client_id or 'DEFAULT'\n            source_col = source_column.source_column if source_column else ''\n            \n            sql_lines.append(f\"INSERT OR REPLACE INTO crosswalk_mappings (\")\n            sql_lines.append(f\"    client_id, source_column, model_table, model_column,\")\n            sql_lines.append(f\"    is_custom_field, custom_field_name, transform_expression, regex_json\")\n            sql_lines.append(f\") VALUES (\")\n            sql_lines.append(f\"    '{client_id}',\")\n            sql_lines.append(f\"    '{source_col}',\")\n            sql_lines.append(f\"    '{mapping.model_table}',\")\n            sql_lines.append(f\"    '{mapping.model_column}',\")\n            sql_lines.append(f\"    {1 if mapping.is_custom_field else 0},\")\n            sql_lines.append(f\"    '{mapping.custom_field_name or ''}',\")\n            sql_lines.append(f\"    '{mapping.transform_expression or ''}',\")\n            sql_lines.append(f\"    '{regex_json}'\")\n            sql_lines.append(f\");\")\n            sql_lines.append(\"\")\n        \n        # Generate transformation view\n        sql_lines.append(\"-- Example transformation view\")\n        sql_lines.append(f\"CREATE OR REPLACE VIEW {profile.client_id or 'client'}_transformed AS\")\n        sql_lines.append(\"SELECT\")\n        \n        select_clauses = []\n        for mapping in mappings:\n            source_column = db.query(SourceColumn).filter(\n                SourceColumn.id == mapping.source_column_id\n            ).first()\n            \n            if source_column and mapping.transform_expression:\n                # Translate DSL to SQL\n                sql_expr = DSLEngine.translate_to_sql(mapping.transform_expression)\n                target_col = mapping.custom_field_name if mapping.is_custom_field else mapping.model_column\n                select_clauses.append(f\"    {sql_expr} AS {target_col}\")\n            elif source_column:\n                target_col = mapping.custom_field_name if mapping.is_custom_field else mapping.model_column\n                select_clauses.append(f\"    {source_column.source_column} AS {target_col}\")\n        \n        if select_clauses:\n            sql_lines.append(\",\\n\".join(select_clauses))\n        else:\n            sql_lines.append(\"    *\")\n        \n        sql_lines.append(f\"FROM {profile.raw_table_name or 'source_table'};\")\n        \n        return \"\\n\".join(sql_lines)\n","size_bytes":9400},"backend/services/file_parser.py":{"content":"\"\"\"\nFile parsing service for CSV/XLSX files.\n\"\"\"\n\nimport pandas as pd\nimport json\nfrom typing import List, Dict, Any, Tuple\nfrom io import BytesIO\nimport re\n\nclass FileParser:\n    \"\"\"Service for parsing uploaded files and extracting column information\"\"\"\n    \n    @staticmethod\n    def parse_file(file_content: bytes, filename: str) -> Tuple[List[str], Dict[str, Any]]:\n        \"\"\"\n        Parse uploaded file and return column names and sample data.\n        \n        Returns:\n            Tuple of (column_names, column_data) where column_data contains\n            sample values and inferred types for each column.\n        \"\"\"\n        try:\n            # Determine file type\n            if filename.lower().endswith('.csv'):\n                df = pd.read_csv(BytesIO(file_content))\n            elif filename.lower().endswith(('.xlsx', '.xls')):\n                df = pd.read_excel(BytesIO(file_content))\n            else:\n                raise ValueError(f\"Unsupported file type: {filename}\")\n            \n            # Get column names\n            column_names = df.columns.tolist()\n            \n            # Extract sample data and infer types\n            column_data = {}\n            for col in column_names:\n                # Get sample values (limit to 10 non-null values)\n                sample_values = df[col].dropna().head(10).astype(str).tolist()\n                \n                # Infer data type\n                inferred_type = FileParser._infer_column_type(df[col])\n                \n                column_data[col] = {\n                    'sample_values': sample_values,\n                    'inferred_type': inferred_type\n                }\n            \n            return column_names, column_data\n            \n        except Exception as e:\n            raise ValueError(f\"Error parsing file: {str(e)}\")\n    \n    @staticmethod\n    def _infer_column_type(series: pd.Series) -> str:\n        \"\"\"Infer the data type of a pandas Series\"\"\"\n        # Remove null values for type inference\n        non_null_series = series.dropna()\n        \n        if len(non_null_series) == 0:\n            return \"string\"\n        \n        # Check for boolean (common boolean string representations)\n        bool_values = {'true', 'false', 'yes', 'no', '1', '0', 't', 'f', 'y', 'n'}\n        if all(str(val).lower() in bool_values for val in non_null_series.head(20)):\n            return \"boolean\"\n        \n        # Check for numeric\n        try:\n            pd.to_numeric(non_null_series)\n            return \"number\"\n        except:\n            pass\n        \n        # Check for date\n        try:\n            pd.to_datetime(non_null_series)\n            # Additional check for date-like patterns\n            sample_str = str(non_null_series.iloc[0])\n            date_patterns = [\n                r'\\d{4}-\\d{2}-\\d{2}',  # YYYY-MM-DD\n                r'\\d{2}/\\d{2}/\\d{4}',  # MM/DD/YYYY\n                r'\\d{2}-\\d{2}-\\d{4}',  # MM-DD-YYYY\n            ]\n            if any(re.match(pattern, sample_str) for pattern in date_patterns):\n                return \"date\"\n        except:\n            pass\n        \n        # Default to string\n        return \"string\"\n    \n    @staticmethod\n    def parse_schema_list(schema_text: str) -> List[str]:\n        \"\"\"\n        Parse a text list of column names (one per line).\n        \"\"\"\n        lines = [line.strip() for line in schema_text.split('\\n') if line.strip()]\n        return lines\n","size_bytes":3409},"backend/services/warehouse_service.py":{"content":"\"\"\"\nWarehouse service for connecting to data warehouses and fetching sample data.\n\"\"\"\n\nimport os\nfrom typing import List, Dict, Any, Optional\nfrom sqlalchemy.orm import Session\n\nfrom models import WarehouseConfig\n\nclass WarehouseService:\n    \"\"\"Service for warehouse operations\"\"\"\n    \n    @staticmethod\n    def is_warehouse_enabled() -> bool:\n        \"\"\"Check if warehouse connectivity is enabled via environment variables\"\"\"\n        return os.getenv(\"WAREHOUSE_ENABLED\", \"false\").lower() == \"true\"\n    \n    @staticmethod\n    def get_warehouse_config(db: Session, profile_id: int) -> Optional[WarehouseConfig]:\n        \"\"\"Get warehouse configuration for a profile\"\"\"\n        return db.query(WarehouseConfig).filter(\n            WarehouseConfig.profile_id == profile_id,\n            WarehouseConfig.enabled == True\n        ).first()\n    \n    @staticmethod\n    async def fetch_sample_data(db: Session, profile_id: int, limit: int = 50) -> List[Dict[str, Any]]:\n        \"\"\"\n        Fetch sample data from warehouse using stored procedure.\n        \n        Args:\n            db: Database session\n            profile_id: Profile ID\n            limit: Maximum number of rows to fetch\n            \n        Returns:\n            List of dictionaries representing sample rows\n        \"\"\"\n        if not WarehouseService.is_warehouse_enabled():\n            raise ValueError(\"Warehouse connectivity is not enabled\")\n        \n        config = WarehouseService.get_warehouse_config(db, profile_id)\n        if not config:\n            raise ValueError(\"No warehouse configuration found for this profile\")\n        \n        try:\n            # Import snowflake connector only if needed\n            import snowflake.connector\n            \n            # Get connection parameters from environment\n            connection_params = {\n                'account': os.getenv(\"SNOWFLAKE_ACCOUNT\", config.account),\n                'user': os.getenv(\"SNOWFLAKE_USER\", config.user),\n                'password': os.getenv(\"SNOWFLAKE_PASSWORD\"),\n                'role': os.getenv(\"SNOWFLAKE_ROLE\", config.role),\n                'warehouse': os.getenv(\"SNOWFLAKE_WAREHOUSE\", config.warehouse),\n                'database': os.getenv(\"SNOWFLAKE_DATABASE\", config.database),\n                'schema': os.getenv(\"SNOWFLAKE_SCHEMA\", config.schema)\n            }\n            \n            # Remove None values\n            connection_params = {k: v for k, v in connection_params.items() if v is not None}\n            \n            # Connect to Snowflake\n            conn = snowflake.connector.connect(**connection_params)\n            cursor = conn.cursor()\n            \n            # Get the profile to find raw_table_name\n            from models import SourceProfile\n            profile = db.query(SourceProfile).filter(SourceProfile.id == profile_id).first()\n            if not profile or not profile.raw_table_name:\n                raise ValueError(\"No raw table name specified for this profile\")\n            \n            # Prepare stored procedure call\n            sp_template = os.getenv(\"SP_TEMPLATE\", config.stored_procedure_call)\n            if not sp_template:\n                raise ValueError(\"No stored procedure template configured\")\n            \n            # Replace template variables\n            sp_call = sp_template.replace(\"{RAW_TABLE}\", profile.raw_table_name)\n            sp_call = sp_call.replace(\"{LIMIT}\", str(limit))\n            \n            # Execute stored procedure\n            cursor.execute(sp_call)\n            \n            # Fetch results\n            columns = [desc[0] for desc in cursor.description]\n            rows = cursor.fetchall()\n            \n            # Convert to list of dictionaries\n            sample_data = []\n            for row in rows:\n                sample_data.append(dict(zip(columns, row)))\n            \n            cursor.close()\n            conn.close()\n            \n            return sample_data\n            \n        except ImportError:\n            raise ValueError(\"Snowflake connector not available. Install snowflake-connector-python to enable warehouse connectivity.\")\n        except Exception as e:\n            raise ValueError(f\"Error fetching sample data from warehouse: {str(e)}\")\n    \n    @staticmethod\n    def test_warehouse_connection(db: Session, profile_id: int) -> Dict[str, Any]:\n        \"\"\"Test warehouse connection for a profile\"\"\"\n        try:\n            config = WarehouseService.get_warehouse_config(db, profile_id)\n            if not config:\n                return {\"success\": False, \"message\": \"No warehouse configuration found\"}\n            \n            # Try to establish connection (without executing queries)\n            import snowflake.connector\n            \n            connection_params = {\n                'account': os.getenv(\"SNOWFLAKE_ACCOUNT\", config.account),\n                'user': os.getenv(\"SNOWFLAKE_USER\", config.user),\n                'password': os.getenv(\"SNOWFLAKE_PASSWORD\"),\n                'role': os.getenv(\"SNOWFLAKE_ROLE\", config.role),\n                'warehouse': os.getenv(\"SNOWFLAKE_WAREHOUSE\", config.warehouse),\n                'database': os.getenv(\"SNOWFLAKE_DATABASE\", config.database),\n                'schema': os.getenv(\"SNOWFLAKE_SCHEMA\", config.schema)\n            }\n            \n            # Remove None values\n            connection_params = {k: v for k, v in connection_params.items() if v is not None}\n            \n            conn = snowflake.connector.connect(**connection_params)\n            conn.close()\n            \n            return {\"success\": True, \"message\": \"Connection successful\"}\n            \n        except ImportError:\n            return {\"success\": False, \"message\": \"Snowflake connector not available\"}\n        except Exception as e:\n            return {\"success\": False, \"message\": f\"Connection failed: {str(e)}\"}\n","size_bytes":5823},"frontend/src/App.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport UploadScreen from './components/UploadScreen';\nimport CrosswalkTemplateGrid from './components/CrosswalkTemplateGrid';\nimport MCSReviewScreen from './components/MCSReviewScreen';\nimport { crosswalkApi, Client, FileGroup, CrosswalkSummary } from './services/crosswalkApi';\n\nfunction App() {\n  const [clients, setClients] = useState<Client[]>([]);\n  const [fileGroups, setFileGroups] = useState<FileGroup[]>([]);\n  const [selectedClient, setSelectedClient] = useState<string>('');\n  const [selectedFileGroup, setSelectedFileGroup] = useState<string>('');\n  const [selectedVersion, setSelectedVersion] = useState<string>('V00');\n  const [selectedStream, setSelectedStream] = useState<string>('S00');\n  const [summary, setSummary] = useState<CrosswalkSummary | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  // Load initial data\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      try {\n        const [clientsData, fileGroupsData, summaryData] = await Promise.all([\n          crosswalkApi.getClients(),\n          crosswalkApi.getFileGroups(),\n          crosswalkApi.getSummary()\n        ]);\n        \n        setClients(clientsData);\n        setFileGroups(fileGroupsData);\n        setSummary(summaryData);\n        \n        // Auto-select first client if available\n        if (clientsData.length > 0 && !selectedClient) {\n          setSelectedClient(clientsData[0].client_id);\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Update file groups when client changes\n  useEffect(() => {\n    const loadFileGroups = async () => {\n      if (selectedClient) {\n        try {\n          const fileGroupsData = await crosswalkApi.getFileGroups(selectedClient);\n          setFileGroups(fileGroupsData);\n          \n          // Auto-select first file group if available\n          if (fileGroupsData.length > 0) {\n            setSelectedFileGroup(fileGroupsData[0].file_group);\n          }\n        } catch (error) {\n          console.error('Error loading file groups:', error);\n        }\n      } else {\n        const allFileGroups = await crosswalkApi.getFileGroups();\n        setFileGroups(allFileGroups);\n      }\n    };\n\n    loadFileGroups();\n  }, [selectedClient]);\n\n  // Component to wrap crosswalk with filters\n  const CrosswalkWithFilters: React.FC = () => (\n    <div className=\"h-screen bg-gray-900 flex flex-col\">\n      {/* Header */}\n      <div className=\"bg-gray-900 border-b border-gray-700 shadow-sm\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-white\">Crosswalk AI</h1>\n              <p className=\"text-sm text-gray-300 mt-1\">\n                Manage your data mapping templates with ease\n              </p>\n            </div>\n            \n            {summary && (\n              <div className=\"flex items-center space-x-6 text-sm\">\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-semibold text-orange-600\">{summary.total_mappings}</div>\n                  <div className=\"text-gray-300\">Mappings</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-semibold text-green-600\">{summary.total_clients}</div>\n                  <div className=\"text-gray-300\">Clients</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-semibold text-purple-600\">{summary.total_file_groups}</div>\n                  <div className=\"text-gray-300\">File Groups</div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Filters */}\n        <div className=\"px-6 py-3 bg-gray-800 border-t border-gray-700\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-sm font-medium text-white\">Client:</label>\n              <select\n                value={selectedClient}\n                onChange={(e) => setSelectedClient(e.target.value)}\n                className=\"border border-gray-600 rounded-md px-3 py-1 text-sm bg-gray-700 text-white min-w-[150px]\"\n              >\n                <option value=\"\">All Clients</option>\n                {clients.map(client => (\n                  <option key={client.client_id} value={client.client_id}>\n                    {client.client_id} ({client.mapping_count})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-sm font-medium text-white\">File Group:</label>\n              <select\n                value={selectedFileGroup}\n                onChange={(e) => setSelectedFileGroup(e.target.value)}\n                className=\"border border-gray-600 rounded-md px-3 py-1 text-sm bg-gray-700 text-white min-w-[150px]\"\n              >\n                <option value=\"\">All File Groups</option>\n                {fileGroups.map(fg => (\n                  <option key={fg.file_group} value={fg.file_group}>\n                    {fg.file_group} ({fg.mapping_count})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-sm font-medium text-white\">Version:</label>\n              <select\n                value={selectedVersion}\n                onChange={(e) => setSelectedVersion(e.target.value)}\n                className=\"border border-gray-600 rounded-md px-3 py-1 text-sm bg-gray-700 text-white min-w-[100px]\"\n              >\n                <option value=\"V00\">V00</option>\n                <option value=\"V01\">V01</option>\n                <option value=\"V02\">V02</option>\n                <option value=\"V03\">V03</option>\n              </select>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-sm font-medium text-white\">Stream:</label>\n              <select\n                value={selectedStream}\n                onChange={(e) => setSelectedStream(e.target.value)}\n                className=\"border border-gray-600 rounded-md px-3 py-1 text-sm bg-gray-700 text-white min-w-[100px]\"\n              >\n                <option value=\"S00\">S00</option>\n                <option value=\"S02\">S02</option>\n                <option value=\"S03\">S03</option>\n                <option value=\"S04\">S04</option>\n              </select>\n            </div>\n\n            <div className=\"flex-1\"></div>\n            \n            {loading && (\n              <div className=\"flex items-center text-gray-500 text-sm\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-gray-500 mr-2\"></div>\n                Loading...\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 overflow-hidden\">\n        <CrosswalkTemplateGrid\n          clientId={selectedClient || undefined}\n          fileGroup={selectedFileGroup || undefined}\n          version={selectedVersion}\n          stream={selectedStream}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Navigation />} />\n        <Route path=\"/upload\" element={<UploadScreen />} />\n        <Route path=\"/crosswalk\" element={<CrosswalkWithFilters />} />\n        <Route path=\"/mcs-review\" element={<MCSReviewScreen />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;","size_bytes":7966},"frontend/src/main.tsx":{"content":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","size_bytes":214},"frontend/src/components/CrosswalkGrid.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { useReactTable, getCoreRowModel, createColumnHelper, flexRender } from '@tanstack/react-table';\nimport { api } from '../services/api';\n\ninterface CrosswalkGridProps {\n  profileId: number;\n  mappings: any[];\n  loading: boolean;\n  onMappingsUpdate: (mappings: any[]) => void;\n  onRowSelect: (mapping: any) => void;\n  selectedRow: any;\n}\n\nconst CrosswalkGrid: React.FC<CrosswalkGridProps> = ({\n  profileId,\n  mappings,\n  loading,\n  onMappingsUpdate,\n  onRowSelect,\n  selectedRow\n}) => {\n  const [data, setData] = useState<any[]>([]);\n  const [dataModelFields, setDataModelFields] = useState<any>({});\n  const [filter, setFilter] = useState('');\n\n  const columnHelper = createColumnHelper<any>();\n\n  useEffect(() => {\n    setData(mappings);\n  }, [mappings]);\n\n  useEffect(() => {\n    fetchDataModelFields();\n  }, []);\n\n  const fetchDataModelFields = async () => {\n    try {\n      const fields = await api.get('/data-model-fields');\n      setDataModelFields(fields);\n    } catch (error) {\n      console.error('Error fetching data model fields:', error);\n    }\n  };\n\n  const updateMappingField = (rowIndex: number, field: string, value: any) => {\n    const newData = [...data];\n    newData[rowIndex] = { ...newData[rowIndex], [field]: value };\n    \n    // Clear custom field name if not custom\n    if (field === 'is_custom_field' && !value) {\n      newData[rowIndex].custom_field_name = '';\n    }\n    \n    // Clear model fields if custom\n    if (field === 'is_custom_field' && value) {\n      newData[rowIndex].model_table = '';\n      newData[rowIndex].model_column = '';\n    }\n    \n    // Update model columns when table changes\n    if (field === 'model_table') {\n      newData[rowIndex].model_column = '';\n    }\n    \n    setData(newData);\n  };\n\n  const handleSave = async () => {\n    try {\n      await onMappingsUpdate(data);\n    } catch (error) {\n      console.error('Error saving mappings:', error);\n    }\n  };\n\n  const columns = [\n    columnHelper.accessor('source_column', {\n      header: 'Source Column',\n      cell: ({ getValue, row }) => (\n        <div className=\"flex items-center space-x-2\">\n          <span className=\"font-medium text-gray-900\">{getValue()}</span>\n          {row.original.inferred_type && (\n            <span className={`px-1.5 py-0.5 text-xs rounded ${\n              row.original.inferred_type === 'string' ? 'bg-blue-100 text-blue-800' :\n              row.original.inferred_type === 'number' ? 'bg-green-100 text-green-800' :\n              row.original.inferred_type === 'date' ? 'bg-purple-100 text-purple-800' :\n              'bg-gray-100 text-gray-800'\n            }`}>\n              {row.original.inferred_type}\n            </span>\n          )}\n        </div>\n      ),\n    }),\n    \n    columnHelper.accessor('model_table', {\n      header: 'Model Table',\n      cell: ({ getValue, row, table }) => (\n        <select\n          value={getValue() || ''}\n          onChange={(e) => updateMappingField(row.index, 'model_table', e.target.value)}\n          disabled={row.original.is_custom_field}\n          className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 disabled:bg-gray-100\"\n        >\n          <option value=\"\">Select table...</option>\n          {Object.keys(dataModelFields).map(table => (\n            <option key={table} value={table}>{table}</option>\n          ))}\n        </select>\n      ),\n    }),\n    \n    columnHelper.accessor('model_column', {\n      header: 'Model Column',\n      cell: ({ getValue, row }) => (\n        <select\n          value={getValue() || ''}\n          onChange={(e) => updateMappingField(row.index, 'model_column', e.target.value)}\n          disabled={row.original.is_custom_field || !row.original.model_table}\n          className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 disabled:bg-gray-100\"\n        >\n          <option value=\"\">Select column...</option>\n          {row.original.model_table && dataModelFields[row.original.model_table]?.map((field: any) => (\n            <option key={field.column} value={field.column}>\n              {field.column}\n              {field.required && <span className=\"text-red-500\">*</span>}\n            </option>\n          ))}\n        </select>\n      ),\n    }),\n    \n    columnHelper.accessor('is_custom_field', {\n      header: 'Custom?',\n      cell: ({ getValue, row }) => (\n        <input\n          type=\"checkbox\"\n          checked={getValue() || false}\n          onChange={(e) => updateMappingField(row.index, 'is_custom_field', e.target.checked)}\n          className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n        />\n      ),\n    }),\n    \n    columnHelper.accessor('custom_field_name', {\n      header: 'Custom Field Name',\n      cell: ({ getValue, row }) => (\n        <input\n          type=\"text\"\n          value={getValue() || ''}\n          onChange={(e) => updateMappingField(row.index, 'custom_field_name', e.target.value)}\n          disabled={!row.original.is_custom_field}\n          placeholder=\"Custom field name\"\n          className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 disabled:bg-gray-100\"\n        />\n      ),\n    }),\n    \n    columnHelper.accessor('transform_expression', {\n      header: 'Transform (DSL)',\n      cell: ({ getValue, row }) => (\n        <input\n          type=\"text\"\n          value={getValue() || ''}\n          onChange={(e) => updateMappingField(row.index, 'transform_expression', e.target.value)}\n          placeholder=\"e.g., upper(col('SOURCE_COLUMN'))\"\n          className=\"w-full px-2 py-1 border border-gray-300 rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n        />\n      ),\n    }),\n    \n    columnHelper.accessor('regex_rules', {\n      header: 'Regex Rules',\n      cell: ({ getValue, row }) => {\n        const rules = getValue() || [];\n        return (\n          <div className=\"flex flex-wrap gap-1\">\n            {rules.map((rule: any, index: number) => (\n              <span\n                key={index}\n                className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-yellow-100 text-yellow-800\"\n              >\n                {rule.rule_name || 'Rule'}\n              </span>\n            ))}\n            {rules.length === 0 && (\n              <span className=\"text-xs text-gray-400\">No rules</span>\n            )}\n          </div>\n        );\n      },\n    }),\n    \n    columnHelper.accessor('is_mapped', {\n      header: 'Mapped?',\n      cell: ({ getValue, row }) => {\n        const isMapped = row.original.model_column || row.original.custom_field_name;\n        return (\n          <div className=\"flex items-center\">\n            {isMapped ? (\n              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-green-100 text-green-800\">\n                <i className=\"fas fa-check mr-1\"></i>\n                Mapped\n              </span>\n            ) : (\n              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100 text-gray-800\">\n                <i className=\"fas fa-minus mr-1\"></i>\n                Unmapped\n              </span>\n            )}\n          </div>\n        );\n      },\n    }),\n  ];\n\n  const table = useReactTable({\n    data: data.filter(row => \n      !filter || row.source_column.toLowerCase().includes(filter.toLowerCase())\n    ),\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  if (loading) {\n    return (\n      <div className=\"flex-1 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <i className=\"fas fa-spinner fa-spin text-gray-400 text-2xl mb-2\"></i>\n          <p className=\"text-gray-600\">Loading crosswalk data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex-1 flex flex-col\">\n      {/* Toolbar */}\n      <div className=\"bg-white border-b border-gray-200 px-4 py-3\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"relative\">\n              <i className=\"fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Filter columns...\"\n                value={filter}\n                onChange={(e) => setFilter(e.target.value)}\n                className=\"pl-9 pr-4 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n              />\n            </div>\n            \n            <div className=\"text-sm text-gray-600\">\n              {data.length} columns\n            </div>\n          </div>\n          \n          <button\n            onClick={handleSave}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            <i className=\"fas fa-save mr-2\"></i>\n            Save Mappings\n          </button>\n        </div>\n      </div>\n\n      {/* Grid */}\n      <div className=\"flex-1 overflow-auto\">\n        {data.length === 0 ? (\n          <div className=\"flex-1 flex items-center justify-center bg-gray-50\">\n            <div className=\"text-center\">\n              <i className=\"fas fa-table text-gray-400 text-3xl mb-3\"></i>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Data Available</h3>\n              <p className=\"text-gray-600 max-w-sm\">\n                Upload a file or paste a schema to start mapping your columns.\n              </p>\n            </div>\n          </div>\n        ) : (\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              {table.getHeaderGroups().map(headerGroup => (\n                <tr key={headerGroup.id}>\n                  {headerGroup.headers.map(header => (\n                    <th\n                      key={header.id}\n                      className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                    >\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(header.column.columnDef.header, header.getContext())\n                      }\n                    </th>\n                  ))}\n                </tr>\n              ))}\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {table.getRowModel().rows.map(row => (\n                <tr\n                  key={row.id}\n                  onClick={() => onRowSelect(row.original)}\n                  className={`hover:bg-gray-50 cursor-pointer ${\n                    selectedRow?.source_column_id === row.original.source_column_id\n                      ? 'bg-blue-50 border-l-4 border-blue-500'\n                      : ''\n                  }`}\n                >\n                  {row.getVisibleCells().map(cell => (\n                    <td key={cell.id} className=\"px-4 py-3 whitespace-nowrap text-sm\">\n                      {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CrosswalkGrid;\n","size_bytes":11492},"frontend/src/components/DetailPanel.tsx":{"content":"import React, { useState } from 'react';\nimport { Profile } from '../types';\nimport RegexTester from './RegexTester';\nimport { api } from '../services/api';\n\ninterface DetailPanelProps {\n  profile: Profile;\n  selectedColumn: any;\n  validationSummary: any;\n  onRefresh: () => void;\n}\n\nconst DetailPanel: React.FC<DetailPanelProps> = ({\n  profile,\n  selectedColumn,\n  validationSummary,\n  onRefresh\n}) => {\n  const [activeTab, setActiveTab] = useState<'regex' | 'sample' | 'validation' | 'export'>('regex');\n  const [sampleData, setSampleData] = useState<any[]>([]);\n  const [loadingSample, setLoadingSample] = useState(false);\n  const [sampleError, setSampleError] = useState<string | null>(null);\n\n  const fetchWarehouseSample = async () => {\n    setLoadingSample(true);\n    setSampleError(null);\n    \n    try {\n      const response = await api.post(`/profiles/${profile.id}/sample/fetch`);\n      setSampleData(response.data || []);\n    } catch (error: any) {\n      setSampleError(error.response?.data?.detail || 'Failed to fetch sample data');\n    } finally {\n      setLoadingSample(false);\n    }\n  };\n\n  const downloadExport = async (format: 'csv' | 'xlsx' | 'json' | 'sql') => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/profiles/${profile.id}/export/${format}`, {\n        method: 'GET',\n      });\n      \n      if (!response.ok) {\n        throw new Error('Export failed');\n      }\n      \n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = `crosswalk_${profile.id}.${format}`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      console.error('Export error:', error);\n    }\n  };\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Details</h3>\n        \n        {/* Tab Navigation */}\n        <div className=\"mt-4 flex space-x-1 border-b border-gray-200\">\n          {[\n            { id: 'regex', label: 'Regex Tester', icon: 'fa-code' },\n            { id: 'sample', label: 'Sample Data', icon: 'fa-database' },\n            { id: 'validation', label: 'Validation', icon: 'fa-check-circle' },\n            { id: 'export', label: 'Export', icon: 'fa-download' }\n          ].map(tab => (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id as any)}\n              className={`px-3 py-2 text-sm font-medium border-b-2 transition-colors ${\n                activeTab === tab.id\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              <i className={`fas ${tab.icon} mr-1`}></i>\n              {tab.label}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {activeTab === 'regex' && (\n          <div className=\"p-4\">\n            {selectedColumn ? (\n              <RegexTester\n                sourceColumn={selectedColumn}\n                onRuleChange={onRefresh}\n              />\n            ) : (\n              <div className=\"text-center py-8\">\n                <i className=\"fas fa-mouse-pointer text-gray-400 text-2xl mb-2\"></i>\n                <p className=\"text-gray-600\">Select a row to test regex patterns</p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'sample' && (\n          <div className=\"p-4\">\n            <div className=\"space-y-4\">\n              {/* Sample Values from File */}\n              {selectedColumn?.sample_values && selectedColumn.sample_values.length > 0 && (\n                <div>\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\n                    Sample Values (from file)\n                  </h4>\n                  <div className=\"bg-gray-50 rounded-md p-3 max-h-32 overflow-y-auto\">\n                    {selectedColumn.sample_values.map((value: string, index: number) => (\n                      <div key={index} className=\"text-sm text-gray-700 py-1 border-b border-gray-200 last:border-b-0\">\n                        {value}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Warehouse Sample */}\n              <div>\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h4 className=\"text-sm font-medium text-gray-900\">\n                    Warehouse Sample\n                  </h4>\n                  <button\n                    onClick={fetchWarehouseSample}\n                    disabled={loadingSample}\n                    className=\"inline-flex items-center px-3 py-1 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-blue-500 disabled:opacity-50\"\n                  >\n                    {loadingSample ? (\n                      <>\n                        <i className=\"fas fa-spinner fa-spin mr-1\"></i>\n                        Loading...\n                      </>\n                    ) : (\n                      <>\n                        <i className=\"fas fa-download mr-1\"></i>\n                        Fetch Sample\n                      </>\n                    )}\n                  </button>\n                </div>\n\n                {sampleError && (\n                  <div className=\"bg-red-50 border border-red-200 rounded-md p-3 mb-3\">\n                    <div className=\"flex\">\n                      <i className=\"fas fa-exclamation-triangle text-red-400 mt-0.5 mr-2\"></i>\n                      <div>\n                        <h5 className=\"text-sm font-medium text-red-800\">Error</h5>\n                        <p className=\"text-sm text-red-700 mt-1\">{sampleError}</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {sampleData.length > 0 && (\n                  <div className=\"bg-gray-50 rounded-md p-3 max-h-64 overflow-auto\">\n                    <div className=\"text-xs text-gray-600 mb-2\">\n                      {sampleData.length} rows fetched\n                    </div>\n                    <div className=\"space-y-2\">\n                      {sampleData.slice(0, 10).map((row, index) => (\n                        <div key={index} className=\"bg-white rounded p-2 text-sm\">\n                          <pre className=\"text-xs text-gray-700 whitespace-pre-wrap\">\n                            {JSON.stringify(row, null, 2)}\n                          </pre>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {sampleData.length === 0 && !sampleError && !loadingSample && (\n                  <div className=\"text-center py-6 text-gray-500\">\n                    <i className=\"fas fa-database text-2xl mb-2\"></i>\n                    <p className=\"text-sm\">No sample data available</p>\n                    <p className=\"text-xs\">Click \"Fetch Sample\" to retrieve data from warehouse</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'validation' && (\n          <div className=\"p-4\">\n            {validationSummary ? (\n              <div className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"bg-blue-50 rounded-lg p-3\">\n                    <div className=\"text-2xl font-bold text-blue-600\">\n                      {validationSummary.mapped_columns}\n                    </div>\n                    <div className=\"text-sm text-blue-800\">Mapped Columns</div>\n                  </div>\n                  \n                  <div className=\"bg-orange-50 rounded-lg p-3\">\n                    <div className=\"text-2xl font-bold text-orange-600\">\n                      {validationSummary.unmapped_columns}\n                    </div>\n                    <div className=\"text-sm text-orange-800\">Unmapped Columns</div>\n                  </div>\n                  \n                  <div className=\"bg-green-50 rounded-lg p-3\">\n                    <div className=\"text-2xl font-bold text-green-600\">\n                      {validationSummary.regex_pass_count}\n                    </div>\n                    <div className=\"text-sm text-green-800\">Regex Passes</div>\n                  </div>\n                  \n                  <div className=\"bg-red-50 rounded-lg p-3\">\n                    <div className=\"text-2xl font-bold text-red-600\">\n                      {validationSummary.regex_fail_count}\n                    </div>\n                    <div className=\"text-sm text-red-800\">Regex Failures</div>\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">\n                    Mapping Progress\n                  </h4>\n                  <div className=\"w-full bg-gray-200 rounded-full h-3\">\n                    <div \n                      className=\"bg-blue-600 h-3 rounded-full transition-all duration-300\"\n                      style={{ width: `${validationSummary.mapping_percentage}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"text-sm text-gray-600 mt-1\">\n                    {validationSummary.mapping_percentage}% complete\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <i className=\"fas fa-chart-bar text-gray-400 text-2xl mb-2\"></i>\n                <p className=\"text-gray-600\">No validation data available</p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'export' && (\n          <div className=\"p-4\">\n            <div className=\"space-y-4\">\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Export Formats</h4>\n                <div className=\"space-y-2\">\n                  <button\n                    onClick={() => downloadExport('csv')}\n                    className=\"w-full flex items-center justify-between p-3 border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                  >\n                    <div className=\"flex items-center\">\n                      <i className=\"fas fa-file-csv text-green-600 mr-3\"></i>\n                      <div className=\"text-left\">\n                        <div className=\"text-sm font-medium text-gray-900\">CSV Export</div>\n                        <div className=\"text-xs text-gray-600\">Crosswalk mapping table</div>\n                      </div>\n                    </div>\n                    <i className=\"fas fa-download text-gray-400\"></i>\n                  </button>\n\n                  <button\n                    onClick={() => downloadExport('xlsx')}\n                    className=\"w-full flex items-center justify-between p-3 border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                  >\n                    <div className=\"flex items-center\">\n                      <i className=\"fas fa-file-excel text-green-600 mr-3\"></i>\n                      <div className=\"text-left\">\n                        <div className=\"text-sm font-medium text-gray-900\">Excel Export</div>\n                        <div className=\"text-xs text-gray-600\">Spreadsheet format</div>\n                      </div>\n                    </div>\n                    <i className=\"fas fa-download text-gray-400\"></i>\n                  </button>\n\n                  <button\n                    onClick={() => downloadExport('json')}\n                    className=\"w-full flex items-center justify-between p-3 border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                  >\n                    <div className=\"flex items-center\">\n                      <i className=\"fas fa-file-code text-blue-600 mr-3\"></i>\n                      <div className=\"text-left\">\n                        <div className=\"text-sm font-medium text-gray-900\">JSON Config</div>\n                        <div className=\"text-xs text-gray-600\">Pipeline configuration</div>\n                      </div>\n                    </div>\n                    <i className=\"fas fa-download text-gray-400\"></i>\n                  </button>\n\n                  <button\n                    onClick={() => downloadExport('sql')}\n                    className=\"w-full flex items-center justify-between p-3 border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                  >\n                    <div className=\"flex items-center\">\n                      <i className=\"fas fa-database text-purple-600 mr-3\"></i>\n                      <div className=\"text-left\">\n                        <div className=\"text-sm font-medium text-gray-900\">SQL Script</div>\n                        <div className=\"text-xs text-gray-600\">DDL/DML statements</div>\n                      </div>\n                    </div>\n                    <i className=\"fas fa-download text-gray-400\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DetailPanel;\n","size_bytes":13688},"frontend/src/components/FileUpload.tsx":{"content":"import React, { useState, useRef } from 'react';\nimport { api } from '../services/api';\n\ninterface FileUploadProps {\n  profileId: number;\n}\n\nconst FileUpload: React.FC<FileUploadProps> = ({ profileId }) => {\n  const [uploading, setUploading] = useState(false);\n  const [uploadResult, setUploadResult] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    // Validate file type\n    const validTypes = ['.csv', '.xlsx', '.xls'];\n    const fileExtension = file.name.toLowerCase().substring(file.name.lastIndexOf('.'));\n    \n    if (!validTypes.includes(fileExtension)) {\n      setError('Please select a CSV or Excel file (.csv, .xlsx, .xls)');\n      return;\n    }\n\n    // Validate file size (max 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setError('File size must be less than 10MB');\n      return;\n    }\n\n    await uploadFile(file);\n  };\n\n  const uploadFile = async (file: File) => {\n    setUploading(true);\n    setError(null);\n    setUploadResult(null);\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      const response = await api.postFormData(`/profiles/${profileId}/source/ingest-file`, formData);\n      \n      setUploadResult({\n        success: true,\n        message: response.message,\n        columns_count: response.columns_count,\n        columns: response.columns\n      });\n\n      // Clear the file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n\n      // Trigger page refresh or emit event to parent\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n\n    } catch (error: any) {\n      setError(error.response?.data?.detail || 'Failed to upload file');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleDragOver = (event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const handleDrop = (event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      const file = files[0];\n      \n      // Validate file type\n      const validTypes = ['.csv', '.xlsx', '.xls'];\n      const fileExtension = file.name.toLowerCase().substring(file.name.lastIndexOf('.'));\n      \n      if (!validTypes.includes(fileExtension)) {\n        setError('Please select a CSV or Excel file (.csv, .xlsx, .xls)');\n        return;\n      }\n\n      uploadFile(file);\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Upload Area */}\n      <div\n        className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\n          uploading \n            ? 'border-blue-300 bg-blue-50' \n            : 'border-gray-300 hover:border-gray-400 bg-gray-50'\n        }`}\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n      >\n        {uploading ? (\n          <div className=\"space-y-2\">\n            <i className=\"fas fa-spinner fa-spin text-blue-600 text-2xl\"></i>\n            <p className=\"text-sm text-blue-600 font-medium\">Uploading and processing file...</p>\n          </div>\n        ) : (\n          <div className=\"space-y-3\">\n            <i className=\"fas fa-cloud-upload-alt text-gray-400 text-3xl\"></i>\n            <div>\n              <p className=\"text-sm font-medium text-gray-900 mb-1\">\n                Drop your file here or click to browse\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Supports CSV, Excel (.xlsx, .xls) files up to 10MB\n              </p>\n            </div>\n            \n            <button\n              onClick={() => fileInputRef.current?.click()}\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <i className=\"fas fa-folder-open mr-2\"></i>\n              Choose File\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Hidden File Input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\".csv,.xlsx,.xls\"\n        onChange={handleFileSelect}\n        className=\"hidden\"\n      />\n\n      {/* Success Message */}\n      {uploadResult?.success && (\n        <div className=\"bg-green-50 border border-green-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <i className=\"fas fa-check-circle text-green-400 mt-0.5 mr-3\"></i>\n            <div>\n              <h4 className=\"text-sm font-medium text-green-800\">Upload Successful</h4>\n              <div className=\"text-sm text-green-700 mt-1\">\n                <p>{uploadResult.message}</p>\n                <p className=\"mt-1\">\n                  <span className=\"font-medium\">{uploadResult.columns_count}</span> columns detected\n                </p>\n              </div>\n              \n              {uploadResult.columns && uploadResult.columns.length > 0 && (\n                <div className=\"mt-3\">\n                  <p className=\"text-sm font-medium text-green-800 mb-2\">Detected columns:</p>\n                  <div className=\"flex flex-wrap gap-1\">\n                    {uploadResult.columns.slice(0, 8).map((column: string, index: number) => (\n                      <span\n                        key={index}\n                        className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-green-100 text-green-800\"\n                      >\n                        {column}\n                      </span>\n                    ))}\n                    {uploadResult.columns.length > 8 && (\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100 text-gray-600\">\n                        +{uploadResult.columns.length - 8} more\n                      </span>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <i className=\"fas fa-exclamation-triangle text-red-400 mt-0.5 mr-3\"></i>\n            <div>\n              <h4 className=\"text-sm font-medium text-red-800\">Upload Failed</h4>\n              <p className=\"text-sm text-red-700 mt-1\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* File Format Info */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-md p-3\">\n        <div className=\"flex\">\n          <i className=\"fas fa-info-circle text-blue-400 mt-0.5 mr-2\"></i>\n          <div className=\"text-sm\">\n            <p className=\"font-medium text-blue-800 mb-1\">Supported Formats</p>\n            <ul className=\"text-blue-700 space-y-1\">\n              <li>• CSV files with comma, semicolon, or tab delimiters</li>\n              <li>• Excel files (.xlsx, .xls) - first sheet will be used</li>\n              <li>• First row should contain column headers</li>\n              <li>• Maximum file size: 10MB</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n","size_bytes":7410},"frontend/src/components/ProjectSidebar.tsx":{"content":"import React, { useState } from 'react';\nimport { Profile } from '../types';\nimport FileUpload from './FileUpload';\nimport SchemaInput from './SchemaInput';\n\ninterface ProjectSidebarProps {\n  profiles: Profile[];\n  selectedProfile: Profile | null;\n  onProfileSelect: (profile: Profile) => void;\n  onCreateProfile: (name: string, clientId: string) => Promise<void>;\n  loading: boolean;\n}\n\nconst ProjectSidebar: React.FC<ProjectSidebarProps> = ({\n  profiles,\n  selectedProfile,\n  onProfileSelect,\n  onCreateProfile,\n  loading\n}) => {\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [newProfileName, setNewProfileName] = useState('');\n  const [newClientId, setNewClientId] = useState('');\n  const [activeTab, setActiveTab] = useState<'file' | 'schema'>('file');\n\n  const handleCreateProfile = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (newProfileName.trim()) {\n      await onCreateProfile(newProfileName.trim(), newClientId.trim());\n      setNewProfileName('');\n      setNewClientId('');\n      setShowCreateForm(false);\n    }\n  };\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">Projects</h2>\n          <button\n            onClick={() => setShowCreateForm(!showCreateForm)}\n            className=\"inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            <i className=\"fas fa-plus mr-1\"></i>\n            New\n          </button>\n        </div>\n\n        {/* Create Project Form */}\n        {showCreateForm && (\n          <form onSubmit={handleCreateProfile} className=\"space-y-3 mb-4 p-3 bg-gray-50 rounded-md\">\n            <div>\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                Project Name *\n              </label>\n              <input\n                type=\"text\"\n                value={newProfileName}\n                onChange={(e) => setNewProfileName(e.target.value)}\n                className=\"w-full px-2 py-1 border border-gray-300 rounded-sm text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Enter project name\"\n                required\n              />\n            </div>\n            <div>\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                Client ID\n              </label>\n              <input\n                type=\"text\"\n                value={newClientId}\n                onChange={(e) => setNewClientId(e.target.value)}\n                className=\"w-full px-2 py-1 border border-gray-300 rounded-sm text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"e.g., CCA\"\n              />\n            </div>\n            <div className=\"flex space-x-2\">\n              <button\n                type=\"submit\"\n                className=\"flex-1 px-3 py-1.5 text-xs font-medium text-white bg-blue-600 rounded-sm hover:bg-blue-700 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n              >\n                Create\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setShowCreateForm(false)}\n                className=\"flex-1 px-3 py-1.5 text-xs font-medium text-gray-700 bg-white border border-gray-300 rounded-sm hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        )}\n      </div>\n\n      {/* Projects List */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {loading ? (\n          <div className=\"p-4 text-center\">\n            <i className=\"fas fa-spinner fa-spin text-gray-400\"></i>\n            <p className=\"text-sm text-gray-600 mt-2\">Loading projects...</p>\n          </div>\n        ) : profiles.length === 0 ? (\n          <div className=\"p-4 text-center\">\n            <i className=\"fas fa-folder-open text-gray-400 text-2xl mb-2\"></i>\n            <p className=\"text-sm text-gray-600\">No projects yet</p>\n            <p className=\"text-xs text-gray-500 mt-1\">Create your first project above</p>\n          </div>\n        ) : (\n          <div className=\"space-y-1 p-2\">\n            {profiles.map((profile) => (\n              <button\n                key={profile.id}\n                onClick={() => onProfileSelect(profile)}\n                className={`w-full text-left p-3 rounded-md text-sm transition-colors ${\n                  selectedProfile?.id === profile.id\n                    ? 'bg-blue-50 border border-blue-200 text-blue-900'\n                    : 'hover:bg-gray-50 border border-transparent'\n                }`}\n              >\n                <div className=\"font-medium text-gray-900\">{profile.name}</div>\n                {profile.client_id && (\n                  <div className=\"text-xs text-gray-600 mt-1\">\n                    Client: {profile.client_id}\n                  </div>\n                )}\n                <div className=\"flex items-center text-xs text-gray-500 mt-1\">\n                  <i className={`fas ${profile.has_physical_file ? 'fa-file' : 'fa-list'} mr-1`}></i>\n                  {profile.has_physical_file ? 'File uploaded' : 'Schema only'}\n                </div>\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Data Input Section */}\n      {selectedProfile && (\n        <div className=\"border-t border-gray-200 p-4\">\n          <h3 className=\"text-sm font-medium text-gray-900 mb-3\">Data Input</h3>\n          \n          {/* Tab Navigation */}\n          <div className=\"flex border-b border-gray-200 mb-3\">\n            <button\n              onClick={() => setActiveTab('file')}\n              className={`flex-1 py-2 px-1 text-xs font-medium border-b-2 transition-colors ${\n                activeTab === 'file'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              <i className=\"fas fa-upload mr-1\"></i>\n              Upload File\n            </button>\n            <button\n              onClick={() => setActiveTab('schema')}\n              className={`flex-1 py-2 px-1 text-xs font-medium border-b-2 transition-colors ${\n                activeTab === 'schema'\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700'\n              }`}\n            >\n              <i className=\"fas fa-list mr-1\"></i>\n              Schema\n            </button>\n          </div>\n\n          {/* Tab Content */}\n          {activeTab === 'file' ? (\n            <FileUpload profileId={selectedProfile.id} />\n          ) : (\n            <SchemaInput profileId={selectedProfile.id} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectSidebar;\n","size_bytes":7142},"frontend/src/components/RegexTester.tsx":{"content":"import React, { useState } from 'react';\nimport { api } from '../services/api';\n\ninterface RegexTesterProps {\n  sourceColumn: any;\n  onRuleChange: () => void;\n}\n\nconst RegexTester: React.FC<RegexTesterProps> = ({ sourceColumn, onRuleChange }) => {\n  const [newRule, setNewRule] = useState({\n    rule_name: '',\n    pattern: '',\n    flags: '',\n    description: ''\n  });\n  const [testValue, setTestValue] = useState('');\n  const [testResult, setTestResult] = useState<any>(null);\n  const [testing, setTesting] = useState(false);\n\n  const handleCreateRule = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!newRule.pattern.trim()) return;\n    \n    try {\n      await api.post(`/source-columns/${sourceColumn.source_column_id}/regex`, newRule);\n      setNewRule({ rule_name: '', pattern: '', flags: '', description: '' });\n      onRuleChange();\n    } catch (error: any) {\n      alert(error.response?.data?.detail || 'Error creating regex rule');\n    }\n  };\n\n  const handleDeleteRule = async (ruleId: number) => {\n    try {\n      await api.delete(`/regex-rules/${ruleId}`);\n      onRuleChange();\n    } catch (error: any) {\n      alert(error.response?.data?.detail || 'Error deleting regex rule');\n    }\n  };\n\n  const handleTestRegex = async () => {\n    if (!newRule.pattern.trim() || !testValue.trim()) return;\n    \n    setTesting(true);\n    try {\n      const params = new URLSearchParams({\n        pattern: newRule.pattern,\n        value: testValue,\n        flags: newRule.flags\n      });\n      \n      const result = await api.get(`/source-columns/${sourceColumn.source_column_id}/regex/test?${params}`);\n      setTestResult(result);\n    } catch (error: any) {\n      setTestResult({ error: error.response?.data?.detail || 'Test failed' });\n    } finally {\n      setTesting(false);\n    }\n  };\n\n  const testRuleAgainstSamples = async (rule: any) => {\n    const sampleValues = sourceColumn.sample_values || [];\n    if (sampleValues.length === 0) return null;\n    \n    try {\n      const results = await Promise.all(\n        sampleValues.slice(0, 5).map(async (value: string) => {\n          const params = new URLSearchParams({\n            pattern: rule.pattern,\n            value,\n            flags: rule.flags || ''\n          });\n          \n          const result = await api.get(`/source-columns/${sourceColumn.source_column_id}/regex/test?${params}`);\n          return { value, matches: result.matches };\n        })\n      );\n      \n      return results;\n    } catch (error) {\n      return null;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Existing Rules */}\n      <div>\n        <h4 className=\"text-sm font-medium text-gray-900 mb-3\">\n          Existing Rules for \"{sourceColumn.source_column}\"\n        </h4>\n        \n        {sourceColumn.regex_rules && sourceColumn.regex_rules.length > 0 ? (\n          <div className=\"space-y-2\">\n            {sourceColumn.regex_rules.map((rule: any) => (\n              <div key={rule.id} className=\"bg-gray-50 rounded-md p-3\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-2 mb-1\">\n                      <span className=\"font-medium text-sm text-gray-900\">\n                        {rule.rule_name || 'Unnamed Rule'}\n                      </span>\n                      {rule.flags && (\n                        <span className=\"px-1.5 py-0.5 text-xs bg-blue-100 text-blue-800 rounded\">\n                          {rule.flags}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"text-sm text-gray-700 font-mono bg-white rounded px-2 py-1 mb-1\">\n                      {rule.pattern}\n                    </div>\n                    {rule.description && (\n                      <div className=\"text-xs text-gray-600\">{rule.description}</div>\n                    )}\n                  </div>\n                  <button\n                    onClick={() => handleDeleteRule(rule.id)}\n                    className=\"ml-2 text-red-600 hover:text-red-800 focus:outline-none\"\n                  >\n                    <i className=\"fas fa-trash text-sm\"></i>\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-4 text-gray-500 bg-gray-50 rounded-md\">\n            <i className=\"fas fa-code text-xl mb-1\"></i>\n            <p className=\"text-sm\">No regex rules defined</p>\n          </div>\n        )}\n      </div>\n\n      {/* Create New Rule */}\n      <div>\n        <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Create New Rule</h4>\n        \n        <form onSubmit={handleCreateRule} className=\"space-y-3\">\n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n              Rule Name\n            </label>\n            <input\n              type=\"text\"\n              value={newRule.rule_name}\n              onChange={(e) => setNewRule({ ...newRule, rule_name: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"e.g., digits_only\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n              Regex Pattern *\n            </label>\n            <input\n              type=\"text\"\n              value={newRule.pattern}\n              onChange={(e) => setNewRule({ ...newRule, pattern: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm font-mono focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"e.g., ^[0-9]+$\"\n              required\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n              Flags\n            </label>\n            <input\n              type=\"text\"\n              value={newRule.flags}\n              onChange={(e) => setNewRule({ ...newRule, flags: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"e.g., i,m\"\n            />\n            <div className=\"text-xs text-gray-500 mt-1\">\n              Common flags: i (case insensitive), m (multiline), s (dotall)\n            </div>\n          </div>\n          \n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n              Description\n            </label>\n            <textarea\n              value={newRule.description}\n              onChange={(e) => setNewRule({ ...newRule, description: e.target.value })}\n              rows={2}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Describe what this pattern validates...\"\n            />\n          </div>\n          \n          <button\n            type=\"submit\"\n            className=\"w-full inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            <i className=\"fas fa-plus mr-2\"></i>\n            Add Rule\n          </button>\n        </form>\n      </div>\n\n      {/* Test Pattern */}\n      <div>\n        <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Test Pattern</h4>\n        \n        <div className=\"space-y-3\">\n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n              Test Value\n            </label>\n            <div className=\"flex space-x-2\">\n              <input\n                type=\"text\"\n                value={testValue}\n                onChange={(e) => setTestValue(e.target.value)}\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Enter value to test\"\n              />\n              <button\n                onClick={handleTestRegex}\n                disabled={testing || !newRule.pattern.trim() || !testValue.trim()}\n                className=\"px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-blue-500 disabled:opacity-50\"\n              >\n                {testing ? (\n                  <i className=\"fas fa-spinner fa-spin\"></i>\n                ) : (\n                  <i className=\"fas fa-play\"></i>\n                )}\n              </button>\n            </div>\n          </div>\n          \n          {/* Quick Test with Sample Values */}\n          {sourceColumn.sample_values && sourceColumn.sample_values.length > 0 && (\n            <div>\n              <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                Quick Test (sample values)\n              </label>\n              <div className=\"space-y-1\">\n                {sourceColumn.sample_values.slice(0, 3).map((value: string, index: number) => (\n                  <button\n                    key={index}\n                    onClick={() => setTestValue(value)}\n                    className=\"w-full text-left px-2 py-1 text-sm bg-gray-50 hover:bg-gray-100 rounded border text-gray-700\"\n                  >\n                    {value}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {/* Test Result */}\n          {testResult && (\n            <div className=\"border rounded-md p-3\">\n              {testResult.error ? (\n                <div className=\"text-red-600\">\n                  <i className=\"fas fa-exclamation-triangle mr-1\"></i>\n                  Error: {testResult.error}\n                </div>\n              ) : (\n                <div>\n                  <div className={`flex items-center mb-2 ${\n                    testResult.matches ? 'text-green-600' : 'text-red-600'\n                  }`}>\n                    <i className={`fas ${testResult.matches ? 'fa-check-circle' : 'fa-times-circle'} mr-2`}></i>\n                    <span className=\"font-medium\">\n                      {testResult.matches ? 'Match Found' : 'No Match'}\n                    </span>\n                  </div>\n                  \n                  {testResult.matches && (\n                    <div className=\"space-y-1\">\n                      {testResult.full_match && (\n                        <div className=\"text-sm\">\n                          <span className=\"text-gray-600\">Full match:</span>\n                          <span className=\"ml-2 font-mono bg-yellow-100 px-1 rounded\">\n                            {testResult.full_match}\n                          </span>\n                        </div>\n                      )}\n                      \n                      {testResult.groups && testResult.groups.length > 0 && (\n                        <div className=\"text-sm\">\n                          <span className=\"text-gray-600\">Groups:</span>\n                          <div className=\"ml-2 space-y-1\">\n                            {testResult.groups.map((group: string, index: number) => (\n                              <div key={index} className=\"font-mono bg-blue-100 px-1 rounded inline-block mr-1\">\n                                {index + 1}: {group}\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegexTester;\n","size_bytes":12012},"frontend/src/components/SchemaInput.tsx":{"content":"import React, { useState } from 'react';\nimport { api } from '../services/api';\n\ninterface SchemaInputProps {\n  profileId: number;\n}\n\nconst SchemaInput: React.FC<SchemaInputProps> = ({ profileId }) => {\n  const [schemaText, setSchemaText] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [result, setResult] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!schemaText.trim()) {\n      setError('Please enter column names');\n      return;\n    }\n\n    setSubmitting(true);\n    setError(null);\n    setResult(null);\n\n    try {\n      // Parse column names from text (one per line)\n      const columns = schemaText\n        .split('\\n')\n        .map(line => line.trim())\n        .filter(line => line.length > 0);\n\n      if (columns.length === 0) {\n        throw new Error('No valid column names found');\n      }\n\n      const response = await api.post(`/profiles/${profileId}/source/ingest-schema`, {\n        columns: columns\n      });\n      \n      setResult({\n        success: true,\n        message: response.message,\n        columns_count: response.columns_count,\n        columns: response.columns\n      });\n\n      // Clear the input after successful submission\n      setSchemaText('');\n\n      // Trigger page refresh or emit event to parent\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n\n    } catch (error: any) {\n      setError(error.response?.data?.detail || error.message || 'Failed to process schema');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleLoadExample = () => {\n    const exampleSchema = `PATIENT_ID\nCLAIMTYPE\nSVC_DT\nCHARGE\nNPI_NUM\nDR_NAME\nPLAN_CODE`;\n    setSchemaText(exampleSchema);\n  };\n\n  const handleClear = () => {\n    setSchemaText('');\n    setResult(null);\n    setError(null);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        {/* Schema Input */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Column Names\n            <span className=\"text-xs text-gray-500 ml-1\">(one per line)</span>\n          </label>\n          <textarea\n            value={schemaText}\n            onChange={(e) => setSchemaText(e.target.value)}\n            rows={8}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm font-mono focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n            placeholder=\"Enter column names, one per line:&#10;&#10;PATIENT_ID&#10;CLAIM_TYPE&#10;SERVICE_DATE&#10;AMOUNT\"\n          />\n          \n          <div className=\"flex justify-between items-center mt-2\">\n            <div className=\"text-xs text-gray-500\">\n              {schemaText.split('\\n').filter(line => line.trim()).length} columns\n            </div>\n            \n            <div className=\"space-x-2\">\n              <button\n                type=\"button\"\n                onClick={handleLoadExample}\n                className=\"text-xs text-blue-600 hover:text-blue-800 underline\"\n              >\n                Load Example\n              </button>\n              \n              <button\n                type=\"button\"\n                onClick={handleClear}\n                className=\"text-xs text-gray-600 hover:text-gray-800 underline\"\n              >\n                Clear\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Submit Button */}\n        <button\n          type=\"submit\"\n          disabled={submitting || !schemaText.trim()}\n          className=\"w-full inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {submitting ? (\n            <>\n              <i className=\"fas fa-spinner fa-spin mr-2\"></i>\n              Processing Schema...\n            </>\n          ) : (\n            <>\n              <i className=\"fas fa-check mr-2\"></i>\n              Import Schema\n            </>\n          )}\n        </button>\n      </form>\n\n      {/* Success Message */}\n      {result?.success && (\n        <div className=\"bg-green-50 border border-green-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <i className=\"fas fa-check-circle text-green-400 mt-0.5 mr-3\"></i>\n            <div>\n              <h4 className=\"text-sm font-medium text-green-800\">Schema Imported</h4>\n              <div className=\"text-sm text-green-700 mt-1\">\n                <p>{result.message}</p>\n                <p className=\"mt-1\">\n                  <span className=\"font-medium\">{result.columns_count}</span> columns imported\n                </p>\n              </div>\n              \n              {result.columns && result.columns.length > 0 && (\n                <div className=\"mt-3\">\n                  <p className=\"text-sm font-medium text-green-800 mb-2\">Imported columns:</p>\n                  <div className=\"flex flex-wrap gap-1\">\n                    {result.columns.slice(0, 8).map((column: string, index: number) => (\n                      <span\n                        key={index}\n                        className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-green-100 text-green-800\"\n                      >\n                        {column}\n                      </span>\n                    ))}\n                    {result.columns.length > 8 && (\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100 text-gray-600\">\n                        +{result.columns.length - 8} more\n                      </span>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div className=\"flex\">\n            <i className=\"fas fa-exclamation-triangle text-red-400 mt-0.5 mr-3\"></i>\n            <div>\n              <h4 className=\"text-sm font-medium text-red-800\">Import Failed</h4>\n              <p className=\"text-sm text-red-700 mt-1\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Instructions */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-md p-3\">\n        <div className=\"flex\">\n          <i className=\"fas fa-info-circle text-blue-400 mt-0.5 mr-2\"></i>\n          <div className=\"text-sm\">\n            <p className=\"font-medium text-blue-800 mb-1\">Schema-Only Mode</p>\n            <ul className=\"text-blue-700 space-y-1\">\n              <li>• Enter column names one per line</li>\n              <li>• No sample data will be available until you upload a file</li>\n              <li>• You can still create mappings and regex rules</li>\n              <li>• Useful when you know the schema but don't have the file yet</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchemaInput;\n","size_bytes":7217},"frontend/src/hooks/useCrosswalk.ts":{"content":"import { useState, useCallback } from 'react';\nimport { CrosswalkMapping, ValidationSummary, UseCrosswalkReturn } from '../types';\nimport { api } from '../services/api';\n\nexport const useCrosswalk = (profileId?: number): UseCrosswalkReturn => {\n  const [mappings, setMappings] = useState<CrosswalkMapping[]>([]);\n  const [validationSummary, setValidationSummary] = useState<ValidationSummary | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const refreshMappings = useCallback(async () => {\n    if (!profileId) {\n      setMappings([]);\n      setValidationSummary(null);\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Fetch mappings and validation summary in parallel\n      const [mappingsData, summaryData] = await Promise.all([\n        api.getCrosswalkMappings(profileId),\n        api.getValidationSummary(profileId)\n      ]);\n\n      setMappings(mappingsData);\n      setValidationSummary(summaryData);\n    } catch (err: any) {\n      setError(err.message || 'Failed to fetch crosswalk data');\n      console.error('Error fetching crosswalk data:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [profileId]);\n\n  const updateMappings = useCallback(async (updatedMappings: CrosswalkMapping[]) => {\n    if (!profileId) {\n      throw new Error('No profile selected');\n    }\n\n    setError(null);\n\n    try {\n      await api.updateCrosswalkMappings(profileId, updatedMappings);\n      \n      // Update local state\n      setMappings(updatedMappings);\n      \n      // Refresh validation summary\n      const summaryData = await api.getValidationSummary(profileId);\n      setValidationSummary(summaryData);\n    } catch (err: any) {\n      setError(err.message || 'Failed to update mappings');\n      console.error('Error updating mappings:', err);\n      throw err; // Re-throw to let the component handle it\n    }\n  }, [profileId]);\n\n  return {\n    mappings,\n    validationSummary,\n    loading,\n    error,\n    updateMappings,\n    refreshMappings,\n  };\n};\n","size_bytes":2064},"frontend/src/hooks/useProfiles.ts":{"content":"import { useState, useCallback } from 'react';\nimport { Profile, UseProfilesReturn } from '../types';\nimport { api } from '../services/api';\n\nexport const useProfiles = (): UseProfilesReturn => {\n  const [profiles, setProfiles] = useState<Profile[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const refreshProfiles = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await api.getProfiles();\n      setProfiles(data);\n    } catch (err: any) {\n      setError(err.message || 'Failed to fetch profiles');\n      console.error('Error fetching profiles:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const createProfile = useCallback(async (name: string, clientId: string) => {\n    setError(null);\n\n    try {\n      await api.createProfile(name, clientId);\n      // Refresh the profiles list\n      await refreshProfiles();\n    } catch (err: any) {\n      setError(err.message || 'Failed to create profile');\n      console.error('Error creating profile:', err);\n      throw err; // Re-throw to let the component handle it\n    }\n  }, [refreshProfiles]);\n\n  return {\n    profiles,\n    loading,\n    error,\n    createProfile,\n    refreshProfiles,\n  };\n};\n","size_bytes":1284},"frontend/src/services/api.ts":{"content":"import { ApiError } from '../types';\n\nconst API_BASE_URL = '/api';\n\nclass ApiService {\n  private async handleResponse(response: Response) {\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({\n        detail: `HTTP ${response.status}: ${response.statusText}`\n      }));\n      throw new Error(errorData.detail || 'An error occurred');\n    }\n\n    // Handle empty responses (like 204 No Content)\n    if (response.status === 204 || response.headers.get('content-length') === '0') {\n      return {};\n    }\n\n    return response.json();\n  }\n\n  async get(endpoint: string, params?: Record<string, string>) {\n    const url = new URL(`${API_BASE_URL}${endpoint}`);\n    \n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        url.searchParams.append(key, value);\n      });\n    }\n\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return this.handleResponse(response);\n  }\n\n  async post(endpoint: string, data?: any) {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: data ? JSON.stringify(data) : undefined,\n    });\n\n    return this.handleResponse(response);\n  }\n\n  async postFormData(endpoint: string, formData: FormData) {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      method: 'POST',\n      body: formData, // Don't set Content-Type header for FormData\n    });\n\n    return this.handleResponse(response);\n  }\n\n  async put(endpoint: string, data?: any) {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: data ? JSON.stringify(data) : undefined,\n    });\n\n    return this.handleResponse(response);\n  }\n\n  async delete(endpoint: string) {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return this.handleResponse(response);\n  }\n\n  // Profiles\n  async createProfile(name: string, clientId: string) {\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('client_id', clientId);\n    \n    return this.postFormData('/profiles', formData);\n  }\n\n  async getProfiles() {\n    return this.get('/profiles');\n  }\n\n  async getProfile(profileId: number) {\n    return this.get(`/profiles/${profileId}`);\n  }\n\n  async uploadFile(profileId: number, file: File) {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    return this.postFormData(`/profiles/${profileId}/source/ingest-file`, formData);\n  }\n\n  async importSchema(profileId: number, columns: string[]) {\n    return this.post(`/profiles/${profileId}/source/ingest-schema`, { columns });\n  }\n\n  async getSourceColumns(profileId: number) {\n    return this.get(`/profiles/${profileId}/source-columns`);\n  }\n\n  async updateRawTableName(profileId: number, tableName: string) {\n    return this.put(`/profiles/${profileId}/raw-table-name`, { \n      raw_table_name: tableName \n    });\n  }\n\n  // Data Model\n  async getDataModelFields() {\n    return this.get('/data-model-fields');\n  }\n\n  // Crosswalk\n  async getCrosswalkMappings(profileId: number) {\n    return this.get(`/profiles/${profileId}/crosswalk`);\n  }\n\n  async updateCrosswalkMappings(profileId: number, mappings: any[]) {\n    return this.put(`/profiles/${profileId}/crosswalk`, mappings);\n  }\n\n  async getValidationSummary(profileId: number) {\n    return this.get(`/profiles/${profileId}/validation-summary`);\n  }\n\n  // Regex\n  async createRegexRule(sourceColumnId: number, ruleData: any) {\n    return this.post(`/source-columns/${sourceColumnId}/regex`, ruleData);\n  }\n\n  async deleteRegexRule(ruleId: number) {\n    return this.delete(`/regex-rules/${ruleId}`);\n  }\n\n  async testRegex(sourceColumnId: number, pattern: string, value: string, flags?: string) {\n    const params: Record<string, string> = {\n      pattern,\n      value,\n    };\n    \n    if (flags) {\n      params.flags = flags;\n    }\n\n    return this.get(`/source-columns/${sourceColumnId}/regex/test`, params);\n  }\n\n  // DSL\n  async validateDSL(expression: string) {\n    return this.post('/dsl/validate', { expression });\n  }\n\n  async translateDSL(expression: string, columnMapping?: Record<string, string>) {\n    return this.post('/dsl/translate', { expression, column_mapping: columnMapping });\n  }\n\n  // Warehouse\n  async fetchWarehouseSample(profileId: number) {\n    return this.post(`/profiles/${profileId}/sample/fetch`);\n  }\n\n  // Export\n  async exportCSV(profileId: number): Promise<Blob> {\n    const response = await fetch(`${API_BASE_URL}/profiles/${profileId}/export/csv`);\n    if (!response.ok) {\n      throw new Error('Export failed');\n    }\n    return response.blob();\n  }\n\n  async exportExcel(profileId: number): Promise<Blob> {\n    const response = await fetch(`${API_BASE_URL}/profiles/${profileId}/export/xlsx`);\n    if (!response.ok) {\n      throw new Error('Export failed');\n    }\n    return response.blob();\n  }\n\n  async exportJSON(profileId: number): Promise<Blob> {\n    const response = await fetch(`${API_BASE_URL}/profiles/${profileId}/export/json`);\n    if (!response.ok) {\n      throw new Error('Export failed');\n    }\n    return response.blob();\n  }\n\n  async exportSQL(profileId: number): Promise<Blob> {\n    const response = await fetch(`${API_BASE_URL}/profiles/${profileId}/export/sql`);\n    if (!response.ok) {\n      throw new Error('Export failed');\n    }\n    return response.blob();\n  }\n\n  // Health check\n  async healthCheck() {\n    return this.get('/health');\n  }\n}\n\nexport const api = new ApiService();\n","size_bytes":5803},"frontend/src/types/index.ts":{"content":"export interface Profile {\n  id: number;\n  name: string;\n  client_id: string | null;\n  created_at: string | null;\n  has_physical_file: boolean;\n  raw_table_name: string | null;\n}\n\nexport interface DataModelField {\n  id: number;\n  column: string;\n  description: string | null;\n  data_type: string | null;\n  required: boolean;\n  unique_key: boolean;\n}\n\nexport interface DataModelTable {\n  [tableName: string]: DataModelField[];\n}\n\nexport interface SourceColumn {\n  id: number;\n  source_column: string;\n  sample_values: string[];\n  inferred_type: string;\n}\n\nexport interface RegexRule {\n  id: number;\n  rule_name: string | null;\n  pattern: string;\n  flags: string | null;\n  description: string | null;\n}\n\nexport interface CrosswalkMapping {\n  source_column_id: number;\n  source_column: string;\n  sample_values: string[];\n  inferred_type: string;\n  model_table: string;\n  model_column: string;\n  is_custom_field: boolean;\n  custom_field_name: string | null;\n  transform_expression: string | null;\n  notes: string | null;\n  is_mapped: boolean;\n  regex_rules: RegexRule[];\n}\n\nexport interface ValidationSummary {\n  total_columns: number;\n  mapped_columns: number;\n  unmapped_columns: number;\n  mapping_percentage: number;\n  regex_pass_count: number;\n  regex_fail_count: number;\n}\n\nexport interface RegexTestResult {\n  matches: boolean;\n  groups: string[];\n  full_match: string;\n  error?: string;\n}\n\nexport interface DSLValidationResult {\n  valid: boolean;\n  message: string;\n}\n\nexport interface DSLTranslationResult {\n  success: boolean;\n  sql_expression?: string;\n  error?: string;\n}\n\nexport interface WarehouseSampleResult {\n  success: boolean;\n  row_count: number;\n  data: Record<string, any>[];\n}\n\nexport interface ExportFormat {\n  id: 'csv' | 'xlsx' | 'json' | 'sql';\n  name: string;\n  description: string;\n  icon: string;\n  color: string;\n}\n\nexport interface ApiError {\n  detail: string;\n}\n\nexport interface FileUploadResult {\n  message: string;\n  columns_count: number;\n  columns: string[];\n}\n\nexport interface SchemaImportResult {\n  message: string;\n  columns_count: number;\n  columns: string[];\n}\n\nexport interface JSONExportConfig {\n  client_id: string;\n  profile: string;\n  mappings: {\n    source_column: string;\n    target: {\n      table: string;\n      column: string;\n    };\n    custom: boolean;\n    custom_field_name?: string;\n    transform: string;\n    regex_rules: {\n      name: string;\n      pattern: string;\n      flags?: string;\n      description?: string;\n    }[];\n  }[];\n}\n\n// Form types\nexport interface CreateProfileForm {\n  name: string;\n  client_id: string;\n}\n\nexport interface RegexRuleForm {\n  rule_name: string;\n  pattern: string;\n  flags: string;\n  description: string;\n}\n\n// Hook return types\nexport interface UseProfilesReturn {\n  profiles: Profile[];\n  loading: boolean;\n  error: string | null;\n  createProfile: (name: string, clientId: string) => Promise<void>;\n  refreshProfiles: () => Promise<void>;\n}\n\nexport interface UseCrosswalkReturn {\n  mappings: CrosswalkMapping[];\n  loading: boolean;\n  error: string | null;\n  validationSummary: ValidationSummary | null;\n  updateMappings: (mappings: CrosswalkMapping[]) => Promise<void>;\n  refreshMappings: () => Promise<void>;\n}\n\n// API response types\nexport interface ApiResponse<T = any> {\n  data: T;\n  status: number;\n  statusText: string;\n}\n\nexport interface PaginatedResponse<T> {\n  data: T[];\n  total: number;\n  page: number;\n  per_page: number;\n  pages: number;\n}\n","size_bytes":3444},"analyze_crosswalk.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nAnalyze the crosswalk Excel template to understand structure and formulas\n\"\"\"\n\nimport pandas as pd\nimport openpyxl\nfrom openpyxl.formula import Tokenizer\nimport json\n\ndef analyze_crosswalk_template(file_path):\n    \"\"\"Analyze the crosswalk Excel template\"\"\"\n    print(f\"Analyzing crosswalk template: {file_path}\")\n    \n    # Load with openpyxl to get formulas\n    wb = openpyxl.load_workbook(file_path, data_only=False)\n    \n    # Print all sheet names\n    print(f\"Available sheets: {wb.sheetnames}\")\n    \n    # Focus on Medical sheet if it exists\n    if 'Medical' in wb.sheetnames:\n        sheet = wb['Medical']\n        print(f\"\\n=== MEDICAL SHEET ANALYSIS ===\")\n        print(f\"Sheet dimensions: {sheet.max_row} rows x {sheet.max_column} columns\")\n        \n        # Get column headers and formulas in top rows\n        print(f\"\\n=== COLUMN STRUCTURE ===\")\n        headers = []\n        formulas = []\n        \n        for col in range(1, sheet.max_column + 1):\n            header_cell = sheet.cell(row=1, column=col)\n            formula_cells = []\n            \n            # Check first few rows for formulas\n            for row in range(1, min(6, sheet.max_row + 1)):  # Check first 5 rows\n                cell = sheet.cell(row=row, column=col)\n                if cell.value and str(cell.value).startswith('='):\n                    formula_cells.append({\n                        'row': row,\n                        'formula': str(cell.value),\n                        'display_value': cell.displayed_value if hasattr(cell, 'displayed_value') else None\n                    })\n            \n            headers.append({\n                'column': col,\n                'header': str(header_cell.value) if header_cell.value else f\"Column_{col}\",\n                'formulas': formula_cells\n            })\n        \n        # Display column info\n        for h in headers[:15]:  # Show first 15 columns to avoid too much output\n            print(f\"Column {h['column']}: {h['header']}\")\n            if h['formulas']:\n                for f in h['formulas']:\n                    print(f\"  Row {f['row']}: {f['formula']}\")\n            print()\n    \n    # Also load with pandas to see data\n    try:\n        print(f\"\\n=== PANDAS DATA PREVIEW ===\")\n        df = pd.read_excel(file_path, sheet_name='Medical' if 'Medical' in wb.sheetnames else 0, nrows=10)\n        print(f\"Data shape: {df.shape}\")\n        print(\"\\nColumn names:\")\n        for i, col in enumerate(df.columns):\n            print(f\"{i+1}: {col}\")\n        \n        print(f\"\\nFirst few rows:\")\n        print(df.head(3).to_string())\n        \n    except Exception as e:\n        print(f\"Error reading with pandas: {e}\")\n\nif __name__ == \"__main__\":\n    analyze_crosswalk_template(\"attached_assets/CLIENT_GDP_Crosswalk_1755826997501.xlsx\")","size_bytes":2802},"extract_datamodel_sheet.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nExtract the Data Model sheet from the Excel crosswalk template\n\"\"\"\n\nimport pandas as pd\nimport os\nimport sys\n\ndef extract_datamodel_sheet():\n    \"\"\"Extract and analyze the Data Model sheet from Excel\"\"\"\n    \n    # Look for the Excel file\n    excel_files = []\n    for root, dirs, files in os.walk('.'):\n        for file in files:\n            if file.endswith('.xlsx') and 'crosswalk' in file.lower():\n                excel_files.append(os.path.join(root, file))\n    \n    if not excel_files:\n        print(\"❌ No Excel crosswalk file found\")\n        return\n    \n    excel_file = excel_files[0]\n    print(f\"📁 Found Excel file: {excel_file}\")\n    \n    try:\n        # Load the Excel file and check sheet names\n        excel_file_obj = pd.ExcelFile(excel_file)\n        sheet_names = excel_file_obj.sheet_names\n        print(f\"📊 Available sheets: {', '.join(sheet_names)}\")\n        \n        # Look for Data Model sheet\n        data_model_sheet = None\n        for sheet in sheet_names:\n            if 'data' in sheet.lower() and 'model' in sheet.lower():\n                data_model_sheet = sheet\n                break\n        \n        if not data_model_sheet:\n            print(\"❌ No 'Data Model' sheet found\")\n            print(f\"Available sheets: {sheet_names}\")\n            return\n        \n        print(f\"✅ Found Data Model sheet: '{data_model_sheet}'\")\n        \n        # Read the data model sheet\n        df = pd.read_excel(excel_file, sheet_name=data_model_sheet)\n        print(f\"📋 Data Model sheet has {len(df)} rows and {len(df.columns)} columns\")\n        \n        # Display column names\n        print(f\"📝 Columns: {list(df.columns)}\")\n        \n        # Display first few rows\n        print(f\"\\n📊 First 10 rows of Data Model:\")\n        print(df.head(10).to_string())\n        \n        # Save to CSV for analysis\n        output_file = \"data_model_from_excel.csv\"\n        df.to_csv(output_file, index=False)\n        print(f\"\\n💾 Saved data model to: {output_file}\")\n        \n        # Analyze the structure\n        print(f\"\\n🔍 Data Model Analysis:\")\n        print(f\"Total fields: {len(df)}\")\n        \n        # Check for common columns\n        common_cols = ['column_name', 'table_name', 'data_type', 'description', 'schema']\n        for col in common_cols:\n            matches = [c for c in df.columns if col.lower() in c.lower()]\n            if matches:\n                print(f\"  {col}: Found column '{matches[0]}'\")\n        \n        # Show unique values for key columns\n        for col in df.columns[:5]:  # First 5 columns\n            unique_vals = df[col].dropna().unique()\n            if len(unique_vals) <= 20:  # Only show if reasonable number\n                print(f\"  {col} values: {list(unique_vals)[:10]}\")  # First 10 values\n            else:\n                print(f\"  {col}: {len(unique_vals)} unique values\")\n        \n        return df\n        \n    except Exception as e:\n        print(f\"❌ Error reading Excel file: {e}\")\n        return None\n\nif __name__ == \"__main__\":\n    extract_datamodel_sheet()","size_bytes":3067},"extract_powerpoint.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nExtract content from PowerPoint presentation about the data model\n\"\"\"\n\ntry:\n    from pptx import Presentation\n    from pptx.util import Inches\n    import os\n    \n    def extract_powerpoint_content(file_path):\n        \"\"\"Extract text content from PowerPoint presentation\"\"\"\n        print(f\"Extracting content from: {file_path}\")\n        \n        # Load the presentation\n        prs = Presentation(file_path)\n        \n        print(f\"Total slides: {len(prs.slides)}\")\n        \n        all_content = []\n        \n        for slide_num, slide in enumerate(prs.slides, 1):\n            print(f\"\\n=== SLIDE {slide_num} ===\")\n            slide_content = []\n            \n            # Extract text from all text boxes and shapes\n            for shape in slide.shapes:\n                if hasattr(shape, 'text') and shape.text.strip():\n                    text = shape.text.strip()\n                    print(f\"Text: {text}\")\n                    slide_content.append(text)\n                \n                # Check for tables\n                if hasattr(shape, 'table'):\n                    print(\"Found table:\")\n                    table = shape.table\n                    for row_idx, row in enumerate(table.rows):\n                        row_data = []\n                        for cell in row.cells:\n                            if cell.text.strip():\n                                row_data.append(cell.text.strip())\n                        if row_data:\n                            print(f\"  Row {row_idx}: {' | '.join(row_data)}\")\n                            slide_content.append(' | '.join(row_data))\n            \n            all_content.append({\n                'slide': slide_num,\n                'content': slide_content\n            })\n        \n        return all_content\n    \n    # Extract the PowerPoint content\n    ppt_file = \"attached_assets/New_Data_Model_Training_20240313v1_1755827391509.pptx\"\n    \n    if os.path.exists(ppt_file):\n        content = extract_powerpoint_content(ppt_file)\n        \n        # Save extracted content to text file for analysis\n        with open(\"data_model_content.txt\", \"w\", encoding=\"utf-8\") as f:\n            f.write(\"EXTRACTED DATA MODEL TRAINING CONTENT\\n\")\n            f.write(\"=\" * 50 + \"\\n\\n\")\n            \n            for slide_info in content:\n                f.write(f\"SLIDE {slide_info['slide']}:\\n\")\n                for text in slide_info['content']:\n                    f.write(f\"  {text}\\n\")\n                f.write(\"\\n\")\n        \n        print(f\"\\n✅ Content extracted and saved to data_model_content.txt\")\n        print(f\"Found {len(content)} slides with content\")\n        \n    else:\n        print(f\"❌ File not found: {ppt_file}\")\n        \nexcept ImportError:\n    print(\"Installing python-pptx library...\")\n    import subprocess\n    import sys\n    \n    try:\n        subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", \"python-pptx\"])\n        print(\"✅ Installed python-pptx, please run the script again\")\n    except Exception as e:\n        print(f\"❌ Failed to install python-pptx: {e}\")\n        \nexcept Exception as e:\n    print(f\"❌ Error extracting PowerPoint content: {e}\")","size_bytes":3164},"backend/de_identify_data.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nDe-identify data by changing client to TEST and replacing real data with dummy data\n\"\"\"\n\nimport os\nimport sys\nfrom sqlalchemy import create_engine, text\nfrom sqlalchemy.orm import sessionmaker\nimport random\n\ndef de_identify_data():\n    \"\"\"Replace real client data with de-identified dummy data\"\"\"\n    \n    DATABASE_URL = os.getenv(\"DATABASE_URL\")\n    if not DATABASE_URL:\n        print(\"❌ DATABASE_URL environment variable is required\")\n        sys.exit(1)\n    \n    engine = create_engine(DATABASE_URL)\n    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n    db = SessionLocal()\n    \n    try:\n        print(\"🛡️  De-identifying data - replacing with dummy data...\")\n        \n        # Change client from UPHP to TEST\n        print(\"1️⃣ Changing client ID to TEST...\")\n        db.execute(text(\"UPDATE crosswalk_template SET client_id = 'TEST' WHERE client_id = 'UPHP'\"))\n        \n        # Get all current records to update with dummy data\n        mappings = db.execute(text(\"SELECT id, source_column_name FROM crosswalk_template\")).fetchall()\n        \n        print(\"2️⃣ Replacing real data profiles with dummy data...\")\n        \n        # Sample dummy data profiles for different types of fields\n        dummy_profiles = [\n            \"Sample text data: ABC123, DEF456, GHI789\",\n            \"Numeric values: 100, 200, 300, 400, 500\",\n            \"Date examples: 2024-01-15, 2024-02-20, 2024-03-10\",\n            \"Boolean flags: Y, N, Y, Y, N\",\n            \"ID patterns: 12345, 67890, 11111, 22222\",\n            \"Amount data: $1000.00, $2500.50, $750.25\",\n            \"Code values: A1B2, C3D4, E5F6, G7H8\",\n            \"Status flags: ACTIVE, PENDING, CLOSED\",\n            \"Category data: TYPE1, TYPE2, TYPE3\",\n            \"Reference numbers: REF001, REF002, REF003\"\n        ]\n        \n        # Additional dummy profile columns\n        dummy_columns = [\n            \"Sample additional field A\",\n            \"Sample additional field B\", \n            \"Sample additional field C\",\n            \"Sample additional field D\",\n            \"Sample additional field E\",\n            \"Sample additional field F\"\n        ]\n        \n        # Dummy source column names for different file groups\n        claim_columns = [\n            \"claim_id\", \"claim_number\", \"patient_id\", \"provider_id\", \"claim_date\",\n            \"service_date\", \"diagnosis_code\", \"procedure_code\", \"claim_amount\",\n            \"copay_amount\", \"deductible\", \"claim_status\", \"auth_number\",\n            \"member_id\", \"group_number\", \"plan_code\", \"service_type\",\n            \"place_of_service\", \"rendering_provider\", \"billing_provider\"\n        ]\n        \n        member_columns = [\n            \"member_id\", \"first_name\", \"last_name\", \"date_of_birth\", \"gender\",\n            \"address_line1\", \"city\", \"state\", \"zip_code\", \"phone_number\",\n            \"email\", \"enrollment_date\", \"termination_date\", \"plan_id\",\n            \"group_id\", \"employer_id\", \"relationship_code\"\n        ]\n        \n        provider_columns = [\n            \"provider_id\", \"provider_name\", \"npi_number\", \"tax_id\", \"specialty\",\n            \"address_line1\", \"city\", \"state\", \"zip_code\", \"phone_number\",\n            \"contract_date\", \"provider_type\", \"status\", \"network_indicator\"\n        ]\n        \n        # Update each mapping with dummy data\n        for i, (mapping_id, current_source_col) in enumerate(mappings):\n            # Determine file group and pick appropriate dummy column name\n            if i < 280:  # Most records are claims\n                new_source_col = random.choice(claim_columns) + f\"_{i%20 + 1}\"\n                file_group = \"CLAIM\"\n            elif i < 300:  # Some member records\n                new_source_col = random.choice(member_columns) + f\"_{i%10 + 1}\" \n                file_group = \"MEMBER\"\n            else:  # Provider records\n                new_source_col = random.choice(provider_columns) + f\"_{i%10 + 1}\"\n                file_group = \"PROVIDER\"\n            \n            # Pick random dummy profile data\n            dummy_profile = random.choice(dummy_profiles)\n            dummy_col_2 = random.choice(dummy_columns)\n            dummy_col_3 = random.choice(dummy_columns)\n            dummy_col_4 = random.choice(dummy_columns)\n            dummy_col_5 = random.choice(dummy_columns)\n            dummy_col_6 = random.choice(dummy_columns)\n            \n            # Update the record with dummy data\n            db.execute(text(\"\"\"\n                UPDATE crosswalk_template \n                SET \n                    source_column_name = :new_source_col,\n                    file_group_name = :file_group,\n                    data_profile_info = :dummy_profile,\n                    profile_column_2 = :dummy_col_2,\n                    profile_column_3 = :dummy_col_3,\n                    profile_column_4 = :dummy_col_4,\n                    profile_column_5 = :dummy_col_5,\n                    profile_column_6 = :dummy_col_6\n                WHERE id = :mapping_id\n            \"\"\"), {\n                'new_source_col': new_source_col,\n                'file_group': file_group,\n                'dummy_profile': dummy_profile,\n                'dummy_col_2': dummy_col_2,\n                'dummy_col_3': dummy_col_3,\n                'dummy_col_4': dummy_col_4,\n                'dummy_col_5': dummy_col_5,\n                'dummy_col_6': dummy_col_6,\n                'mapping_id': mapping_id\n            })\n        \n        print(\"3️⃣ Updating additional fields with dummy data...\")\n        \n        # Update additional fields with generic dummy values\n        dummy_additional_fields = [\n            \"Sample field 1\", \"Sample field 2\", \"Sample field 3\", \n            \"Sample field 4\", \"Sample field 5\", \"Sample field 6\",\n            \"Sample field 7\", \"Sample field 8\"\n        ]\n        \n        for i in range(8):\n            field_name = f\"additional_field_{i+1}\"\n            dummy_value = dummy_additional_fields[i]\n            \n            db.execute(text(f\"\"\"\n                UPDATE crosswalk_template \n                SET {field_name} = :dummy_value \n                WHERE {field_name} IS NOT NULL\n            \"\"\"), {'dummy_value': dummy_value})\n        \n        print(\"4️⃣ Clearing any remaining sensitive data...\")\n        \n        # Clear any potentially sensitive formatting or custom fields\n        db.execute(text(\"\"\"\n            UPDATE crosswalk_template \n            SET \n                source_column_formatting = CASE \n                    WHEN source_column_formatting IS NOT NULL THEN 'TRIM(UPPER({source_column}))'\n                    ELSE NULL \n                END,\n                custom_field_type = CASE \n                    WHEN custom_field_type IS NOT NULL THEN 'CUSTOM_TYPE'\n                    ELSE NULL \n                END,\n                provider_file_group = CASE \n                    WHEN provider_file_group IS NOT NULL THEN 'BILLING'\n                    ELSE NULL \n                END,\n                version_notes = CASE \n                    WHEN version_notes IS NOT NULL THEN 'Sample version notes'\n                    ELSE NULL \n                END,\n                mcs_review_notes = CASE \n                    WHEN mcs_review_notes IS NOT NULL THEN 'Sample MCS review notes'\n                    ELSE NULL \n                END\n        \"\"\"))\n        \n        db.commit()\n        \n        # Show summary\n        total_updated = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_template WHERE client_id = 'TEST'\")).scalar()\n        claim_count = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_template WHERE client_id = 'TEST' AND file_group_name = 'CLAIM'\")).scalar()\n        member_count = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_template WHERE client_id = 'TEST' AND file_group_name = 'MEMBER'\")).scalar()\n        provider_count = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_template WHERE client_id = 'TEST' AND file_group_name = 'PROVIDER'\")).scalar()\n        \n        print(f\"\\n✅ Data de-identification complete!\")\n        print(f\"🛡️  Client changed from UPHP → TEST\")\n        print(f\"📊 Total records updated: {total_updated}\")\n        print(f\"📋 File group breakdown:\")\n        print(f\"   • CLAIM: {claim_count} records\")\n        print(f\"   • MEMBER: {member_count} records\") \n        print(f\"   • PROVIDER: {provider_count} records\")\n        print(f\"🔒 All real data profiles replaced with dummy data\")\n        print(f\"🎯 System ready for demo with de-identified data\")\n        \n    except Exception as e:\n        print(f\"❌ Error de-identifying data: {e}\")\n        db.rollback()\n        raise\n    finally:\n        db.close()\n\nif __name__ == \"__main__\":\n    de_identify_data()","size_bytes":8679},"backend/enhance_crosswalk_features.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nEnhance crosswalk with the 8 real-world features requested\n\"\"\"\n\nimport os\nimport sys\nfrom sqlalchemy import create_engine, text\nfrom sqlalchemy.orm import sessionmaker\n\ndef enhance_crosswalk_features():\n    \"\"\"Add all the requested features to the crosswalk system\"\"\"\n    \n    DATABASE_URL = os.getenv(\"DATABASE_URL\")\n    if not DATABASE_URL:\n        print(\"❌ DATABASE_URL environment variable is required\")\n        sys.exit(1)\n    \n    engine = create_engine(DATABASE_URL)\n    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n    db = SessionLocal()\n    \n    try:\n        print(\"🚀 Enhancing crosswalk with 8 real-world features...\")\n        \n        # Feature 1 & 2: Multi-table assignment and FILE_GROUP for providers\n        print(\"1️⃣ Adding multi-table support and FILE_GROUP...\")\n        db.execute(text(\"\"\"\n            ALTER TABLE crosswalk_template \n            ADD COLUMN IF NOT EXISTS target_tables TEXT, -- JSON array for multiple tables\n            ADD COLUMN IF NOT EXISTS provider_file_group VARCHAR(50), -- BILLING, RENDERING, etc.\n            ADD COLUMN IF NOT EXISTS is_multi_table BOOLEAN DEFAULT FALSE\n        \"\"\"))\n        \n        # Feature 3: Version control and reuse\n        print(\"3️⃣ Adding version control and reuse functionality...\")\n        db.execute(text(\"\"\"\n            ALTER TABLE crosswalk_template \n            ADD COLUMN IF NOT EXISTS crosswalk_version VARCHAR(20) DEFAULT '1.0',\n            ADD COLUMN IF NOT EXISTS parent_mapping_id INTEGER, -- Reference to original mapping\n            ADD COLUMN IF NOT EXISTS reuse_from_client VARCHAR(50), -- Reuse from another client\n            ADD COLUMN IF NOT EXISTS version_notes TEXT\n        \"\"\"))\n        \n        # Feature 4: Data type inference\n        print(\"4️⃣ Adding data type inference...\")\n        db.execute(text(\"\"\"\n            ALTER TABLE crosswalk_template \n            ADD COLUMN IF NOT EXISTS inferred_data_type VARCHAR(100), -- From data model\n            ADD COLUMN IF NOT EXISTS custom_data_type VARCHAR(100), -- Manual override\n            ADD COLUMN IF NOT EXISTS data_type_source VARCHAR(20) DEFAULT 'INFERRED' -- INFERRED, MANUAL, UNKNOWN\n        \"\"\"))\n        \n        # Feature 5: Multiple file joins\n        print(\"5️⃣ Adding multi-file join support...\")\n        db.execute(text(\"\"\"\n            ALTER TABLE crosswalk_template \n            ADD COLUMN IF NOT EXISTS source_file_name VARCHAR(255), -- Which source file this comes from\n            ADD COLUMN IF NOT EXISTS join_key_column VARCHAR(255), -- _SID column for joining\n            ADD COLUMN IF NOT EXISTS join_table VARCHAR(100), -- Table to join to\n            ADD COLUMN IF NOT EXISTS join_type VARCHAR(20) DEFAULT 'INNER' -- INNER, LEFT, etc.\n        \"\"\"))\n        \n        # Feature 7: MCS review flags\n        print(\"7️⃣ Adding MCS review flags...\")\n        db.execute(text(\"\"\"\n            ALTER TABLE crosswalk_template \n            ADD COLUMN IF NOT EXISTS mcs_review_required BOOLEAN DEFAULT FALSE,\n            ADD COLUMN IF NOT EXISTS mcs_review_notes TEXT,\n            ADD COLUMN IF NOT EXISTS mcs_review_status VARCHAR(20) DEFAULT 'PENDING', -- PENDING, IN_REVIEW, APPROVED, REJECTED\n            ADD COLUMN IF NOT EXISTS mcs_reviewer VARCHAR(100),\n            ADD COLUMN IF NOT EXISTS mcs_review_date TIMESTAMP\n        \"\"\"))\n        \n        # Additional tracking fields\n        print(\"📊 Adding enhanced tracking...\")\n        db.execute(text(\"\"\"\n            ALTER TABLE crosswalk_template \n            ADD COLUMN IF NOT EXISTS complexity_score INTEGER DEFAULT 1, -- 1-5 complexity rating\n            ADD COLUMN IF NOT EXISTS business_priority VARCHAR(20) DEFAULT 'MEDIUM', -- HIGH, MEDIUM, LOW\n            ADD COLUMN IF NOT EXISTS completion_status VARCHAR(20) DEFAULT 'DRAFT' -- DRAFT, READY, VALIDATED, DEPLOYED\n        \"\"\"))\n        \n        # Feature 6: Create table for Snowflake SQL generation tracking\n        print(\"6️⃣ Creating Snowflake SQL generation tracking...\")\n        db.execute(text(\"\"\"\n            CREATE TABLE IF NOT EXISTS snowflake_sql_exports (\n                id SERIAL PRIMARY KEY,\n                client_id VARCHAR(50) NOT NULL,\n                file_group VARCHAR(100),\n                export_type VARCHAR(20) NOT NULL, -- CREATE_TABLE, INSERT_MAPPING, FULL_ETL\n                sql_content TEXT,\n                table_name VARCHAR(100),\n                created_by VARCHAR(100),\n                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                is_deployed BOOLEAN DEFAULT FALSE,\n                deployment_notes TEXT\n            )\n        \"\"\"))\n        \n        # Create indexes for better performance\n        print(\"⚡ Creating performance indexes...\")\n        try:\n            db.execute(text(\"CREATE INDEX IF NOT EXISTS idx_crosswalk_completion_status ON crosswalk_template(completion_status)\"))\n            db.execute(text(\"CREATE INDEX IF NOT EXISTS idx_crosswalk_mcs_review ON crosswalk_template(mcs_review_required, mcs_review_status)\"))\n            db.execute(text(\"CREATE INDEX IF NOT EXISTS idx_crosswalk_version ON crosswalk_template(crosswalk_version, client_id)\"))\n            db.execute(text(\"CREATE INDEX IF NOT EXISTS idx_crosswalk_multi_table ON crosswalk_template(is_multi_table)\"))\n        except:\n            pass  # Indexes might already exist\n        \n        # Update existing records with smart defaults\n        print(\"🔄 Updating existing records with smart defaults...\")\n        \n        # Infer data types from data model\n        db.execute(text(\"\"\"\n            UPDATE crosswalk_template ct\n            SET inferred_data_type = dm.data_type,\n                data_type_source = 'INFERRED'\n            FROM pi20_data_model dm\n            WHERE ct.mcdm_column_name = dm.column_name\n            AND ct.inferred_data_type IS NULL\n        \"\"\"))\n        \n        # Set completion status based on current state\n        db.execute(text(\"\"\"\n            UPDATE crosswalk_template \n            SET completion_status = CASE \n                WHEN skipped_flag = TRUE THEN 'SKIPPED'\n                WHEN in_model = 'Y' AND mcdm_column_name IS NOT NULL AND mcdm_column_name != '' THEN 'READY'\n                WHEN in_model = 'Y' AND (mcdm_column_name IS NULL OR mcdm_column_name = '') THEN 'DRAFT'\n                WHEN in_model = 'N' THEN 'CUSTOM'\n                ELSE 'DRAFT'\n            END\n            WHERE completion_status = 'DRAFT'\n        \"\"\"))\n        \n        # Flag complex provider fields for MCS review\n        db.execute(text(\"\"\"\n            UPDATE crosswalk_template \n            SET mcs_review_required = TRUE,\n                mcs_review_notes = 'Provider field - needs FILE_GROUP specification'\n            WHERE file_group_name = 'PROVIDER' \n            AND provider_file_group IS NULL\n        \"\"\"))\n        \n        # Flag multi-table scenarios for MCS review  \n        db.execute(text(\"\"\"\n            UPDATE crosswalk_template \n            SET mcs_review_required = TRUE,\n                mcs_review_notes = 'Potential multi-table field - verify target tables',\n                is_multi_table = TRUE\n            WHERE (source_column_name ILIKE '%claim%' OR source_column_name ILIKE '%header%' OR source_column_name ILIKE '%line%')\n            AND file_group_name IN ('CLAIM', 'CLAIM_LINE')\n        \"\"\"))\n        \n        db.commit()\n        \n        # Show summary of enhancements\n        total_mappings = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_template\")).scalar()\n        mcs_review_count = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_template WHERE mcs_review_required = TRUE\")).scalar()\n        multi_table_count = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_template WHERE is_multi_table = TRUE\")).scalar()\n        inferred_types = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_template WHERE data_type_source = 'INFERRED'\")).scalar()\n        \n        print(f\"\\n✅ Enhanced crosswalk system with 8 real-world features!\")\n        print(f\"📊 Total mappings: {total_mappings}\")\n        print(f\"🔍 MCS review required: {mcs_review_count}\")\n        print(f\"🔗 Multi-table fields: {multi_table_count}\")\n        print(f\"🎯 Data types inferred: {inferred_types}\")\n        print(f\"\")\n        print(f\"🚀 Features implemented:\")\n        print(f\"  1️⃣ Multi-table assignment (claim_line + claim_header)\")\n        print(f\"  2️⃣ Provider FILE_GROUP flags\")\n        print(f\"  3️⃣ Version control and reuse\")\n        print(f\"  4️⃣ Data type inference from data model\")\n        print(f\"  5️⃣ Multi-file join support (_SID columns)\")\n        print(f\"  6️⃣ Snowflake SQL generation tracking\")\n        print(f\"  7️⃣ MCS team review flags\")\n        print(f\"  8️⃣ Enhanced filtering capabilities\")\n        \n    except Exception as e:\n        print(f\"❌ Error enhancing crosswalk: {e}\")\n        db.rollback()\n        raise\n    finally:\n        db.close()\n\nif __name__ == \"__main__\":\n    enhance_crosswalk_features()","size_bytes":8994},"backend/enhance_with_datamodel.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nEnhance the database with data model intelligence from the PowerPoint training\n\"\"\"\n\nimport os\nimport sys\nfrom sqlalchemy import create_engine, text\nfrom sqlalchemy.orm import sessionmaker\n\n# Add backend directory to path for imports\nbackend_dir = os.path.dirname(os.path.abspath(__file__))\nsys.path.insert(0, backend_dir)\n\ndef enhance_with_datamodel():\n    \"\"\"Enhance database with data model structure and validation\"\"\"\n    \n    DATABASE_URL = os.getenv(\"DATABASE_URL\")\n    if not DATABASE_URL:\n        print(\"❌ DATABASE_URL environment variable is required\")\n        sys.exit(1)\n    \n    engine = create_engine(DATABASE_URL)\n    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n    db = SessionLocal()\n    \n    try:\n        print(\"🏗️  Enhancing database with data model intelligence...\")\n        \n        # Create PI20 data model reference table\n        print(\"Creating PI20 data model reference...\")\n        db.execute(text(\"\"\"\n            CREATE TABLE IF NOT EXISTS pi20_data_model (\n                id SERIAL PRIMARY KEY,\n                schema_layer VARCHAR(20) NOT NULL, -- RAW, CLEANSE, CURATED\n                table_name VARCHAR(100) NOT NULL,\n                column_name VARCHAR(255) NOT NULL,\n                data_type VARCHAR(100),\n                description TEXT,\n                is_standard_field BOOLEAN DEFAULT TRUE, -- FALSE for custom fields\n                is_case_sensitive BOOLEAN DEFAULT FALSE, -- VARCHAR fields needing UPPER/LOWER\n                source_layer VARCHAR(20), -- Which layer this field originates from\n                join_logic TEXT, -- How to join to this table\n                validation_rules TEXT,\n                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                UNIQUE(schema_layer, table_name, column_name)\n            );\n        \"\"\"))\n        \n        # Insert PI20 data model structure based on PowerPoint\n        print(\"Loading PI20 data model structure...\")\n        \n        # CLAIM_HEADER table (CLEANSE and CURATED)\n        claim_header_fields = [\n            # Standard audit fields (all tables have these)\n            ('BOTH', 'CLAIM_HEADER', 'DP_CREATE_TIMESTAMP', 'TIMESTAMP', 'Data pipeline create timestamp', True, False),\n            ('BOTH', 'CLAIM_HEADER', 'DP_UPDATE_TIMESTAMP', 'TIMESTAMP', 'Data pipeline update timestamp', True, False),\n            ('BOTH', 'CLAIM_HEADER', 'DP_RUN_ID', 'VARCHAR(50)', 'Data pipeline run identifier', True, False),\n            \n            # Core claim header fields\n            ('BOTH', 'CLAIM_HEADER', 'CLAIM_HEADER_SID', 'BIGINT', 'Claim header surrogate key', True, False),\n            ('BOTH', 'CLAIM_HEADER', 'CLAIM_ID', 'VARCHAR(50)', 'Unique claim identifier', True, True),\n            ('BOTH', 'CLAIM_HEADER', 'MEMBER_SID', 'BIGINT', 'Member SID from claim file data', True, False),\n            ('BOTH', 'CLAIM_HEADER', 'MEMBER_MBR_FILE_SID', 'BIGINT', 'Member SID from member file data', True, False),\n            \n            # Provider SIDs (multiple roles)\n            ('BOTH', 'CLAIM_HEADER', 'PROVIDER_ATTENDING_SID', 'BIGINT', 'Attending provider SID from claim file', True, False),\n            ('BOTH', 'CLAIM_HEADER', 'PROVIDER_ATTENDING_PROV_FILE_SID', 'BIGINT', 'Attending provider SID from provider file', True, False),\n            ('BOTH', 'CLAIM_HEADER', 'PROVIDER_BILLING_SID', 'BIGINT', 'Billing provider SID from claim file', True, False),\n            ('BOTH', 'CLAIM_HEADER', 'PROVIDER_BILLING_PROV_FILE_SID', 'BIGINT', 'Billing provider SID from provider file', True, False),\n            \n            # Diagnosis and procedure codes (now at header level)\n            ('BOTH', 'CLAIM_HEADER', 'DIAGNOSIS_1', 'VARCHAR(20)', 'Primary diagnosis code', True, True),\n            ('BOTH', 'CLAIM_HEADER', 'DIAGNOSIS_2', 'VARCHAR(20)', 'Secondary diagnosis code', True, True),\n            ('BOTH', 'CLAIM_HEADER', 'PROCEDURE_1', 'VARCHAR(20)', 'Primary procedure code', True, True),\n            ('BOTH', 'CLAIM_HEADER', 'PROCEDURE_2', 'VARCHAR(20)', 'Secondary procedure code', True, True),\n            \n            # Common claim fields\n            ('BOTH', 'CLAIM_HEADER', 'SERVICE_FROM_DT', 'DATE', 'Service from date', True, False),\n            ('BOTH', 'CLAIM_HEADER', 'SERVICE_TO_DT', 'DATE', 'Service to date', True, False),\n            ('BOTH', 'CLAIM_HEADER', 'CLAIM_TYPE', 'VARCHAR(20)', 'Type of claim (MEDICAL, etc.)', True, True),\n            ('BOTH', 'CLAIM_HEADER', 'CLAIM_STATUS', 'VARCHAR(20)', 'Claim processing status', True, True),\n            \n            # Custom field example (only in CLEANSE)\n            ('CLEANSE', 'CLAIM_HEADER', 'STATEMENT_DT', 'DATE', 'Custom statement date field', False, False),\n        ]\n        \n        # CLAIM_LINE table\n        claim_line_fields = [\n            ('BOTH', 'CLAIM_LINE', 'DP_CREATE_TIMESTAMP', 'TIMESTAMP', 'Data pipeline create timestamp', True, False),\n            ('BOTH', 'CLAIM_LINE', 'DP_UPDATE_TIMESTAMP', 'TIMESTAMP', 'Data pipeline update timestamp', True, False),\n            ('BOTH', 'CLAIM_LINE', 'DP_RUN_ID', 'VARCHAR(50)', 'Data pipeline run identifier', True, False),\n            ('BOTH', 'CLAIM_LINE', 'CLAIM_LINE_SID', 'BIGINT', 'Claim line surrogate key', True, False),\n            ('BOTH', 'CLAIM_LINE', 'CLAIM_HEADER_SID', 'BIGINT', 'Foreign key to claim header', True, False),\n            ('BOTH', 'CLAIM_LINE', 'PROVIDER_RENDERING_SID', 'BIGINT', 'Rendering provider SID', True, False),\n            ('BOTH', 'CLAIM_LINE', 'LINE_NUMBER', 'INTEGER', 'Claim line number', True, False),\n            ('BOTH', 'CLAIM_LINE', 'PROCEDURE_CODE', 'VARCHAR(20)', 'Line-level procedure code', True, True),\n            ('BOTH', 'CLAIM_LINE', 'ALLOWED_AMOUNT', 'DECIMAL(10,2)', 'Allowed amount', True, False),\n            ('BOTH', 'CLAIM_LINE', 'PAID_AMOUNT', 'DECIMAL(10,2)', 'Paid amount', True, False),\n            \n            # CLAIM_LINE_AARETE only in CURATED\n            ('CURATED', 'CLAIM_LINE_AARETE', 'CLAIM_LINE_SID', 'BIGINT', 'Join key to CLAIM_LINE table', True, False),\n        ]\n        \n        # MEMBER table\n        member_fields = [\n            ('BOTH', 'MEMBER', 'DP_CREATE_TIMESTAMP', 'TIMESTAMP', 'Data pipeline create timestamp', True, False),\n            ('BOTH', 'MEMBER', 'DP_UPDATE_TIMESTAMP', 'TIMESTAMP', 'Data pipeline update timestamp', True, False),\n            ('BOTH', 'MEMBER', 'DP_RUN_ID', 'VARCHAR(50)', 'Data pipeline run identifier', True, False),\n            ('BOTH', 'MEMBER', 'MEMBER_SID', 'BIGINT', 'Member surrogate key', True, False),\n            ('BOTH', 'MEMBER', 'MEMBER_ID', 'VARCHAR(50)', 'Member identifier', True, True),\n            ('BOTH', 'MEMBER', 'MBR_PRODUCT_LINE_OF_BUSINESS', 'VARCHAR(50)', 'Member line of business (case sensitive!)', True, True),\n            ('BOTH', 'MEMBER', 'FIRST_NAME', 'VARCHAR(100)', 'Member first name', True, True),\n            ('BOTH', 'MEMBER', 'LAST_NAME', 'VARCHAR(100)', 'Member last name', True, True),\n            ('BOTH', 'MEMBER', 'DATE_OF_BIRTH', 'DATE', 'Member date of birth', True, False),\n            ('BOTH', 'MEMBER', 'GENDER', 'VARCHAR(1)', 'Member gender', True, True),\n        ]\n        \n        # PROVIDER table\n        provider_fields = [\n            ('BOTH', 'PROVIDER', 'DP_CREATE_TIMESTAMP', 'TIMESTAMP', 'Data pipeline create timestamp', True, False),\n            ('BOTH', 'PROVIDER', 'DP_UPDATE_TIMESTAMP', 'TIMESTAMP', 'Data pipeline update timestamp', True, False),\n            ('BOTH', 'PROVIDER', 'DP_RUN_ID', 'VARCHAR(50)', 'Data pipeline run identifier', True, False),\n            ('BOTH', 'PROVIDER', 'PROVIDER_SID', 'BIGINT', 'Provider surrogate key', True, False),\n            ('BOTH', 'PROVIDER', 'NPI', 'VARCHAR(10)', 'National Provider Identifier', True, False),\n            ('BOTH', 'PROVIDER', 'PROVIDER_NAME', 'VARCHAR(255)', 'Provider name', True, True),\n            ('BOTH', 'PROVIDER', 'TAXONOMY', 'VARCHAR(50)', 'Provider taxonomy code', True, True),\n            ('BOTH', 'PROVIDER', 'SPECIALTY', 'VARCHAR(100)', 'Provider specialty', True, True),\n        ]\n        \n        # Insert all data model fields\n        all_fields = claim_header_fields + claim_line_fields + member_fields + provider_fields\n        \n        for layer, table, column, dtype, desc, is_standard, is_case_sensitive in all_fields:\n            if layer == 'BOTH':\n                # Insert for both CLEANSE and CURATED\n                for schema_layer in ['CLEANSE', 'CURATED']:\n                    try:\n                        db.execute(text(\"\"\"\n                            INSERT INTO pi20_data_model \n                            (schema_layer, table_name, column_name, data_type, description, is_standard_field, is_case_sensitive)\n                            VALUES (:schema_layer, :table_name, :column_name, :data_type, :description, :is_standard_field, :is_case_sensitive)\n                            ON CONFLICT (schema_layer, table_name, column_name) DO NOTHING\n                        \"\"\"), {\n                            'schema_layer': schema_layer,\n                            'table_name': table,\n                            'column_name': column,\n                            'data_type': dtype,\n                            'description': desc,\n                            'is_standard_field': is_standard,\n                            'is_case_sensitive': is_case_sensitive\n                        })\n                    except Exception as e:\n                        print(f\"Warning: Could not insert {schema_layer}.{table}.{column}: {e}\")\n            else:\n                # Insert for specific layer only\n                try:\n                    db.execute(text(\"\"\"\n                        INSERT INTO pi20_data_model \n                        (schema_layer, table_name, column_name, data_type, description, is_standard_field, is_case_sensitive)\n                        VALUES (:schema_layer, :table_name, :column_name, :data_type, :description, :is_standard_field, :is_case_sensitive)\n                        ON CONFLICT (schema_layer, table_name, column_name) DO NOTHING\n                    \"\"\"), {\n                        'schema_layer': layer,\n                        'table_name': table,\n                        'column_name': column,\n                        'data_type': dtype,\n                        'description': desc,\n                        'is_standard_field': is_standard,\n                        'is_case_sensitive': is_case_sensitive\n                    })\n                except Exception as e:\n                    print(f\"Warning: Could not insert {layer}.{table}.{column}: {e}\")\n        \n        # Create validation rules table\n        print(\"Creating validation rules...\")\n        db.execute(text(\"\"\"\n            CREATE TABLE IF NOT EXISTS crosswalk_validation_rules (\n                id SERIAL PRIMARY KEY,\n                rule_name VARCHAR(100) NOT NULL,\n                rule_type VARCHAR(50) NOT NULL, -- 'IN_MODEL_VALIDATION', 'VARCHAR_CASE_CHECK', 'DATA_TYPE_VALIDATION'\n                rule_logic TEXT NOT NULL,\n                error_message TEXT,\n                is_active BOOLEAN DEFAULT TRUE,\n                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n            );\n        \"\"\"))\n        \n        # Insert common validation rules\n        validation_rules = [\n            ('IN_MODEL_Y_REQUIRES_MCDM_COLUMN', 'IN_MODEL_VALIDATION', \n             \"in_model = 'Y' AND (mcdm_column_name IS NULL OR mcdm_column_name = '')\", \n             'Fields with IN_MODEL=Y must have an MCDM column name specified'),\n            \n            ('VARCHAR_FIELDS_CASE_SENSITIVITY', 'VARCHAR_CASE_CHECK',\n             \"source_column_formatting IS NULL AND mcdm_column_name IN (SELECT column_name FROM pi20_data_model WHERE is_case_sensitive = TRUE)\",\n             'VARCHAR fields require UPPER() or LOWER() function in source formatting'),\n            \n            ('CUSTOM_FIELD_TYPE_VALIDATION', 'DATA_TYPE_VALIDATION',\n             \"in_model = 'N' AND custom_field_type IS NULL\",\n             'Custom fields (IN_MODEL=N) must specify a custom field type'),\n             \n            ('SKIPPED_FIELD_LOGIC', 'IN_MODEL_VALIDATION',\n             \"skipped_flag = TRUE AND in_model != 'N/A'\",\n             'Skipped fields should have IN_MODEL set to N/A'),\n        ]\n        \n        for rule_name, rule_type, logic, message in validation_rules:\n            try:\n                db.execute(text(\"\"\"\n                    INSERT INTO crosswalk_validation_rules (rule_name, rule_type, rule_logic, error_message)\n                    VALUES (:rule_name, :rule_type, :rule_logic, :error_message)\n                    ON CONFLICT DO NOTHING\n                \"\"\"), {\n                    'rule_name': rule_name,\n                    'rule_type': rule_type,\n                    'rule_logic': logic,\n                    'error_message': message\n                })\n            except Exception as e:\n                print(f\"Warning: Could not insert validation rule {rule_name}: {e}\")\n        \n        db.commit()\n        \n        # Show summary\n        pi20_count = db.execute(text(\"SELECT COUNT(*) FROM pi20_data_model\")).scalar()\n        validation_count = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_validation_rules\")).scalar()\n        \n        print(f\"✅ Enhanced database with PI20 data model intelligence!\")\n        print(f\"📊 Added {pi20_count} data model fields\")\n        print(f\"🔍 Added {validation_count} validation rules\")\n        print(f\"🏗️  Data model structure: RAW → CLEANSE → CURATED layers\")\n        print(f\"⚡ Ready for intelligent crosswalk validation and assistance!\")\n        \n    except Exception as e:\n        print(f\"❌ Error enhancing database: {e}\")\n        db.rollback()\n        raise\n    finally:\n        db.close()\n\nif __name__ == \"__main__\":\n    enhance_with_datamodel()","size_bytes":13803},"backend/load_real_datamodel.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nLoad the real data model from Excel into the database\n\"\"\"\n\nimport pandas as pd\nimport os\nimport sys\nfrom sqlalchemy import create_engine, text\nfrom sqlalchemy.orm import sessionmaker\n\ndef load_real_datamodel():\n    \"\"\"Load the actual data model from Excel into database\"\"\"\n    \n    DATABASE_URL = os.getenv(\"DATABASE_URL\")\n    if not DATABASE_URL:\n        print(\"❌ DATABASE_URL environment variable is required\")\n        sys.exit(1)\n    \n    engine = create_engine(DATABASE_URL)\n    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n    db = SessionLocal()\n    \n    try:\n        # Read the extracted data model\n        if not os.path.exists(\"data_model_from_excel.csv\"):\n            print(\"❌ data_model_from_excel.csv not found. Run extract_datamodel_sheet.py first\")\n            return\n        \n        df = pd.read_csv(\"data_model_from_excel.csv\")\n        print(f\"📊 Loading {len(df)} fields from Excel data model\")\n        \n        # Clear existing data model\n        print(\"🗑️  Clearing existing PI20 data model...\")\n        db.execute(text(\"DELETE FROM pi20_data_model\"))\n        \n        # Insert real data model\n        print(\"📥 Loading real data model...\")\n        inserted_count = 0\n        \n        for _, row in df.iterrows():\n            table_name = str(row['TABLE_NAME']).strip()\n            column_name = str(row['COLUMN_NAME']).strip()\n            column_type = str(row['COLUMN_TYPE']).strip() if pd.notna(row['COLUMN_TYPE']) else 'VARCHAR'\n            column_comment = str(row['COLUMN_COMMENT']).strip() if pd.notna(row['COLUMN_COMMENT']) else ''\n            in_crosswalk = str(row['IN_CROSSWALK']).strip().upper() if pd.notna(row['IN_CROSSWALK']) else 'N'\n            is_mandatory = bool(row['IS_MANDATORY']) if pd.notna(row['IS_MANDATORY']) else False\n            \n            # Skip empty rows\n            if not table_name or table_name == 'nan' or not column_name or column_name == 'nan':\n                continue\n            \n            # Determine schema layer (default to CURATED, but some might be CLEANSE-specific)\n            schema_layer = 'CURATED'  # Most fields are in CURATED\n            \n            # Check if it's case sensitive (VARCHAR fields are usually case sensitive)\n            is_case_sensitive = 'VARCHAR' in column_type.upper()\n            \n            # Determine if it's a standard field (most are standard)\n            is_standard_field = in_crosswalk != 'Y'  # Fields not in crosswalk are typically standard/technical\n            \n            try:\n                db.execute(text(\"\"\"\n                    INSERT INTO pi20_data_model \n                    (schema_layer, table_name, column_name, data_type, description, \n                     is_standard_field, is_case_sensitive, source_layer, validation_rules)\n                    VALUES (:schema_layer, :table_name, :column_name, :data_type, :description,\n                            :is_standard_field, :is_case_sensitive, :source_layer, :validation_rules)\n                \"\"\"), {\n                    'schema_layer': schema_layer,\n                    'table_name': table_name,\n                    'column_name': column_name,\n                    'data_type': column_type,\n                    'description': column_comment,\n                    'is_standard_field': is_standard_field,\n                    'is_case_sensitive': is_case_sensitive,\n                    'source_layer': 'EXCEL_DATA_MODEL',\n                    'validation_rules': f\"MANDATORY: {is_mandatory}, IN_CROSSWALK: {in_crosswalk}\"\n                })\n                inserted_count += 1\n                \n            except Exception as e:\n                print(f\"Warning: Could not insert {table_name}.{column_name}: {e}\")\n        \n        # Also add CLEANSE layer for custom fields (duplicating key tables)\n        print(\"📥 Adding CLEANSE layer for custom fields...\")\n        cleanse_tables = ['CLAIM_HEADER', 'CLAIM_LINE', 'MEMBER', 'PROVIDER']\n        \n        for table in cleanse_tables:\n            # Get all fields for this table from CURATED\n            curated_fields = db.execute(text(\"\"\"\n                SELECT column_name, data_type, description, is_case_sensitive\n                FROM pi20_data_model \n                WHERE table_name = :table AND schema_layer = 'CURATED'\n            \"\"\"), {'table': table}).fetchall()\n            \n            for field in curated_fields:\n                try:\n                    db.execute(text(\"\"\"\n                        INSERT INTO pi20_data_model \n                        (schema_layer, table_name, column_name, data_type, description, \n                         is_standard_field, is_case_sensitive, source_layer)\n                        VALUES (:schema_layer, :table_name, :column_name, :data_type, :description,\n                                :is_standard_field, :is_case_sensitive, :source_layer)\n                    \"\"\"), {\n                        'schema_layer': 'CLEANSE',\n                        'table_name': table,\n                        'column_name': field[0],\n                        'data_type': field[1],\n                        'description': f\"{field[2]} (CLEANSE layer - supports custom fields)\",\n                        'is_standard_field': True,\n                        'is_case_sensitive': field[3],\n                        'source_layer': 'EXCEL_DATA_MODEL_CLEANSE'\n                    })\n                except:\n                    pass  # Skip duplicates\n        \n        db.commit()\n        \n        # Show summary\n        total_count = db.execute(text(\"SELECT COUNT(*) FROM pi20_data_model\")).scalar()\n        table_count = db.execute(text(\"SELECT COUNT(DISTINCT table_name) FROM pi20_data_model\")).scalar()\n        \n        print(f\"✅ Loaded real data model!\")\n        print(f\"📊 Inserted {inserted_count} fields from Excel\")\n        print(f\"📊 Total fields in database: {total_count}\")\n        print(f\"🏢 Tables covered: {table_count}\")\n        print(f\"🏗️  Schema layers: CURATED (from Excel) + CLEANSE (with custom fields)\")\n        \n        # Show table breakdown\n        print(f\"\\n📋 Table breakdown:\")\n        table_counts = db.execute(text(\"\"\"\n            SELECT table_name, COUNT(*) as field_count\n            FROM pi20_data_model \n            WHERE schema_layer = 'CURATED'\n            GROUP BY table_name \n            ORDER BY field_count DESC\n        \"\"\")).fetchall()\n        \n        for table_name, count in table_counts:\n            print(f\"  {table_name}: {count} fields\")\n        \n    except Exception as e:\n        print(f\"❌ Error loading data model: {e}\")\n        db.rollback()\n        raise\n    finally:\n        db.close()\n\nif __name__ == \"__main__\":\n    load_real_datamodel()","size_bytes":6727},"backend/load_template_data.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nLoad data from the Excel crosswalk template into the database\n\"\"\"\n\nimport os\nimport sys\nimport pandas as pd\nfrom sqlalchemy import create_engine, text\nfrom sqlalchemy.orm import sessionmaker\nimport json\n\n# Add backend directory to path for imports\nbackend_dir = os.path.dirname(os.path.abspath(__file__))\nsys.path.insert(0, backend_dir)\n\ndef load_template_data():\n    \"\"\"Load data from the crosswalk template Excel file\"\"\"\n    \n    DATABASE_URL = os.getenv(\"DATABASE_URL\")\n    if not DATABASE_URL:\n        print(\"❌ DATABASE_URL environment variable is required\")\n        sys.exit(1)\n    \n    engine = create_engine(DATABASE_URL)\n    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n    db = SessionLocal()\n    \n    try:\n        print(\"📊 Loading data from crosswalk template...\")\n        \n        # Load the Medical sheet\n        excel_file = \"../attached_assets/CLIENT_GDP_Crosswalk_1755826997501.xlsx\"\n        print(f\"Reading Excel file: {excel_file}\")\n        \n        df = pd.read_excel(excel_file, sheet_name='Medical', header=0)\n        print(f\"Loaded {len(df)} rows from Medical sheet\")\n        \n        # Clean up the data and prepare for insertion\n        successful_inserts = 0\n        \n        for index, row in df.iterrows():\n            if index < 2:  # Skip first 2 rows (headers and formulas)\n                continue\n                \n            # Skip empty rows\n            if pd.isna(row.iloc[0]) or str(row.iloc[0]).strip() == '':\n                continue\n                \n            try:\n                # Map Excel columns to database fields\n                client_id = str(row.iloc[0]).strip() if pd.notna(row.iloc[0]) else ''\n                source_column_order = int(row.iloc[1]) if pd.notna(row.iloc[1]) and str(row.iloc[1]).isdigit() else None\n                source_column_name = str(row.iloc[2]).strip() if pd.notna(row.iloc[2]) else ''\n                file_group_name = str(row.iloc[3]).strip() if pd.notna(row.iloc[3]) else ''\n                mcdm_column_name = str(row.iloc[4]).strip() if pd.notna(row.iloc[4]) else ''\n                \n                in_model = str(row.iloc[5]).strip() if pd.notna(row.iloc[5]) else 'Y'\n                mcdm_table = str(row.iloc[6]).strip() if pd.notna(row.iloc[6]) else ''\n                custom_field_type = str(row.iloc[7]).strip() if pd.notna(row.iloc[7]) else ''\n                \n                # Profile data columns (9-14)\n                data_profile_info = str(row.iloc[8]).strip() if pd.notna(row.iloc[8]) else ''\n                profile_col_2 = str(row.iloc[9]).strip() if pd.notna(row.iloc[9]) else ''\n                profile_col_3 = str(row.iloc[10]).strip() if pd.notna(row.iloc[10]) else ''\n                profile_col_4 = str(row.iloc[11]).strip() if pd.notna(row.iloc[11]) else ''\n                profile_col_5 = str(row.iloc[12]).strip() if pd.notna(row.iloc[12]) else ''\n                profile_col_6 = str(row.iloc[13]).strip() if pd.notna(row.iloc[13]) else ''\n                \n                source_column_formatting = str(row.iloc[14]).strip() if pd.notna(row.iloc[14]) else ''\n                skipped_flag = str(row.iloc[15]).strip().upper() == 'TRUE' if pd.notna(row.iloc[15]) else False\n                \n                # Additional fields for remaining columns\n                additional_fields = []\n                for i in range(16, min(len(row), 24)):  # Columns 17-24\n                    additional_fields.append(str(row.iloc[i]).strip() if pd.notna(row.iloc[i]) else '')\n                \n                # Skip if essential fields are missing\n                if not client_id or not source_column_name or not file_group_name:\n                    continue\n                \n                # Insert into database\n                insert_sql = text(\"\"\"\n                    INSERT INTO crosswalk_template (\n                        client_id, source_column_order, source_column_name, file_group_name, mcdm_column_name,\n                        in_model, mcdm_table, custom_field_type, data_profile_info,\n                        profile_column_2, profile_column_3, profile_column_4, profile_column_5, profile_column_6,\n                        source_column_formatting, skipped_flag,\n                        additional_field_1, additional_field_2, additional_field_3, additional_field_4,\n                        additional_field_5, additional_field_6, additional_field_7, additional_field_8\n                    ) VALUES (\n                        :client_id, :source_column_order, :source_column_name, :file_group_name, :mcdm_column_name,\n                        :in_model, :mcdm_table, :custom_field_type, :data_profile_info,\n                        :profile_column_2, :profile_column_3, :profile_column_4, :profile_column_5, :profile_column_6,\n                        :source_column_formatting, :skipped_flag,\n                        :additional_field_1, :additional_field_2, :additional_field_3, :additional_field_4,\n                        :additional_field_5, :additional_field_6, :additional_field_7, :additional_field_8\n                    )\n                \"\"\")\n                \n                db.execute(insert_sql, {\n                    'client_id': client_id,\n                    'source_column_order': source_column_order,\n                    'source_column_name': source_column_name,\n                    'file_group_name': file_group_name,\n                    'mcdm_column_name': mcdm_column_name,\n                    'in_model': in_model,\n                    'mcdm_table': mcdm_table,\n                    'custom_field_type': custom_field_type,\n                    'data_profile_info': data_profile_info,\n                    'profile_column_2': profile_col_2,\n                    'profile_column_3': profile_col_3,\n                    'profile_column_4': profile_col_4,\n                    'profile_column_5': profile_col_5,\n                    'profile_column_6': profile_col_6,\n                    'source_column_formatting': source_column_formatting,\n                    'skipped_flag': skipped_flag,\n                    'additional_field_1': additional_fields[0] if len(additional_fields) > 0 else '',\n                    'additional_field_2': additional_fields[1] if len(additional_fields) > 1 else '',\n                    'additional_field_3': additional_fields[2] if len(additional_fields) > 2 else '',\n                    'additional_field_4': additional_fields[3] if len(additional_fields) > 3 else '',\n                    'additional_field_5': additional_fields[4] if len(additional_fields) > 4 else '',\n                    'additional_field_6': additional_fields[5] if len(additional_fields) > 5 else '',\n                    'additional_field_7': additional_fields[6] if len(additional_fields) > 6 else '',\n                    'additional_field_8': additional_fields[7] if len(additional_fields) > 7 else ''\n                })\n                successful_inserts += 1\n                \n            except Exception as e:\n                print(f\"Error processing row {index}: {e}\")\n                continue\n        \n        # Create a sample client profile\n        print(\"Creating sample client profiles...\")\n        \n        # Get unique client/file_group combinations\n        client_profiles = db.execute(text(\"\"\"\n            SELECT DISTINCT client_id, file_group_name \n            FROM crosswalk_template \n            WHERE client_id IS NOT NULL AND file_group_name IS NOT NULL\n        \"\"\")).fetchall()\n        \n        for profile in client_profiles:\n            client_id, file_group = profile\n            try:\n                db.execute(text(\"\"\"\n                    INSERT INTO client_profiles (client_id, client_name, file_group_name, version, description)\n                    VALUES (:client_id, :client_name, :file_group_name, 'V00', 'Loaded from Excel template')\n                    ON CONFLICT (client_id, file_group_name, version) DO NOTHING\n                \"\"\"), {\n                    'client_id': client_id,\n                    'client_name': f'{client_id} Client',\n                    'file_group_name': file_group\n                })\n            except Exception as e:\n                print(f\"Error creating profile for {client_id}-{file_group}: {e}\")\n        \n        db.commit()\n        print(f\"✅ Successfully loaded {successful_inserts} crosswalk mappings!\")\n        \n        # Show summary\n        total_mappings = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_template\")).scalar()\n        total_profiles = db.execute(text(\"SELECT COUNT(*) FROM client_profiles\")).scalar()\n        \n        print(f\"📊 Database Summary:\")\n        print(f\"   - Total crosswalk mappings: {total_mappings}\")\n        print(f\"   - Total client profiles: {total_profiles}\")\n        \n    except Exception as e:\n        print(f\"❌ Error loading template data: {e}\")\n        db.rollback()\n        raise\n    finally:\n        db.close()\n\nif __name__ == \"__main__\":\n    load_template_data()","size_bytes":8959},"backend/models_new.py":{"content":"\"\"\"\nUpdated models to match the crosswalk template structure\n\"\"\"\n\nfrom sqlalchemy import Boolean, Column, Integer, String, Text, DateTime, UniqueConstraint\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.sql import func\nfrom datetime import datetime\n\nBase = declarative_base()\n\nclass CrosswalkTemplate(Base):\n    \"\"\"Main crosswalk mapping table - matches your Excel template structure\"\"\"\n    __tablename__ = \"crosswalk_template\"\n    \n    id = Column(Integer, primary_key=True, index=True)\n    \n    # Core identification fields (columns 1-5 from Excel)\n    client_id = Column(String(100), nullable=False, index=True)\n    source_column_order = Column(Integer)\n    source_column_name = Column(String(255), nullable=False, index=True)\n    file_group_name = Column(String(100), nullable=False, index=True)  # CLAIM, CLAIM_LINE, MEMBER, PROVIDER\n    mcdm_column_name = Column(String(255))\n    \n    # Data flow control (columns 6-8)\n    in_model = Column(String(10), default='Y')  # Y, N, U, N/A\n    mcdm_table = Column(String(100))\n    custom_field_type = Column(String(50))\n    \n    # Data profiling fields (columns 9-14 from Excel - calculated from Profile sheet)\n    data_profile_info = Column(Text)  # Main profile info\n    profile_column_2 = Column(Text)\n    profile_column_3 = Column(Text)\n    profile_column_4 = Column(Text)\n    profile_column_5 = Column(Text)\n    profile_column_6 = Column(Text)\n    \n    # Transformation and control (columns 15-16)\n    source_column_formatting = Column(Text)  # Formula for data transformation\n    skipped_flag = Column(Boolean, default=False)  # TRUE to skip field\n    \n    # Additional fields for remaining columns\n    additional_field_1 = Column(Text)\n    additional_field_2 = Column(Text)\n    additional_field_3 = Column(Text)\n    additional_field_4 = Column(Text)\n    additional_field_5 = Column(Text)\n    additional_field_6 = Column(Text)\n    additional_field_7 = Column(Text)\n    additional_field_8 = Column(Text)\n    \n    # Tracking\n    created_at = Column(DateTime, default=func.now())\n    updated_at = Column(DateTime, default=func.now(), onupdate=func.now())\n\nclass ClientProfile(Base):\n    \"\"\"Client profile configurations\"\"\"\n    __tablename__ = \"client_profiles\"\n    \n    id = Column(Integer, primary_key=True, index=True)\n    client_id = Column(String(100), nullable=False)\n    client_name = Column(String(255), nullable=False)\n    file_group_name = Column(String(100), nullable=False)\n    version = Column(String(50), default='V00')\n    description = Column(Text)\n    created_at = Column(DateTime, default=func.now())\n    updated_at = Column(DateTime, default=func.now(), onupdate=func.now())\n    \n    __table_args__ = (UniqueConstraint('client_id', 'file_group_name', 'version'),)\n\nclass DataModelReference(Base):\n    \"\"\"Reference data model (from your Data Model sheet)\"\"\"\n    __tablename__ = \"data_model_reference\"\n    \n    id = Column(Integer, primary_key=True, index=True)\n    table_name = Column(String(100), nullable=False)\n    column_name = Column(String(255), nullable=False)\n    data_type = Column(String(100))\n    description = Column(Text)\n    is_required = Column(Boolean, default=False)\n    is_unique_key = Column(Boolean, default=False)\n    default_value = Column(Text)\n    validation_rules = Column(Text)\n    created_at = Column(DateTime, default=func.now())\n    \n    __table_args__ = (UniqueConstraint('table_name', 'column_name'),)\n\nclass ProfileData(Base):\n    \"\"\"Profile data for formula lookups (matches your Profile sheet)\"\"\"\n    __tablename__ = \"profile_data\"\n    \n    id = Column(Integer, primary_key=True, index=True)\n    lookup_key = Column(String(500), nullable=False, unique=True, index=True)  # CLIENT_ID-FILE_GROUP_NAME-VERSION-COLUMN_NAME\n    client_id = Column(String(100), nullable=False)\n    file_group_name = Column(String(100), nullable=False)\n    version = Column(String(50), nullable=False)\n    column_name = Column(String(255), nullable=False)\n    data_profile = Column(Text)\n    profile_value_1 = Column(Text)\n    profile_value_2 = Column(Text)\n    profile_value_3 = Column(Text)\n    profile_value_4 = Column(Text)\n    profile_value_5 = Column(Text)\n    sample_values = Column(Text)  # JSON array of sample values\n    created_at = Column(DateTime, default=func.now())","size_bytes":4283},"backend/update_schema.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nUpdate database schema to match the actual crosswalk template structure\n\"\"\"\n\nimport os\nimport sys\nfrom sqlalchemy import create_engine, text\nfrom sqlalchemy.orm import sessionmaker\n\n# Add backend directory to path for imports\nbackend_dir = os.path.dirname(os.path.abspath(__file__))\nsys.path.insert(0, backend_dir)\n\ndef update_schema():\n    \"\"\"Update the database schema to match the crosswalk template\"\"\"\n    \n    DATABASE_URL = os.getenv(\"DATABASE_URL\")\n    if not DATABASE_URL:\n        print(\"❌ DATABASE_URL environment variable is required\")\n        sys.exit(1)\n    \n    engine = create_engine(DATABASE_URL)\n    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n    db = SessionLocal()\n    \n    try:\n        print(\"🔄 Updating database schema to match crosswalk template...\")\n        \n        # Drop existing tables to start fresh\n        print(\"Dropping existing tables...\")\n        db.execute(text(\"\"\"\n            DROP TABLE IF EXISTS crosswalk_mappings CASCADE;\n            DROP TABLE IF EXISTS source_columns CASCADE;\n            DROP TABLE IF EXISTS source_profiles CASCADE;\n            DROP TABLE IF EXISTS data_model_fields CASCADE;\n            DROP TABLE IF EXISTS regex_rules CASCADE;\n            DROP TABLE IF EXISTS warehouse_configs CASCADE;\n        \"\"\"))\n        \n        # Create crosswalk_template table matching the Excel structure\n        print(\"Creating crosswalk_template table...\")\n        db.execute(text(\"\"\"\n            CREATE TABLE crosswalk_template (\n                id SERIAL PRIMARY KEY,\n                \n                -- Core identification fields\n                client_id VARCHAR(100) NOT NULL,\n                source_column_order INTEGER,\n                source_column_name VARCHAR(255) NOT NULL,\n                file_group_name VARCHAR(100) NOT NULL, -- CLAIM, CLAIM_LINE, MEMBER, PROVIDER\n                mcdm_column_name VARCHAR(255),\n                \n                -- Data flow control\n                in_model VARCHAR(10) DEFAULT 'Y', -- Y, N, U, N/A\n                mcdm_table VARCHAR(100),\n                custom_field_type VARCHAR(50),\n                \n                -- Data profiling (calculated fields from Profile sheet)\n                data_profile_info TEXT,\n                profile_column_2 TEXT,\n                profile_column_3 TEXT,\n                profile_column_4 TEXT,\n                profile_column_5 TEXT,\n                profile_column_6 TEXT,\n                \n                -- Transformation and formatting\n                source_column_formatting TEXT,\n                skipped_flag BOOLEAN DEFAULT FALSE,\n                \n                -- Additional metadata fields from remaining columns\n                additional_field_1 TEXT,\n                additional_field_2 TEXT,\n                additional_field_3 TEXT,\n                additional_field_4 TEXT,\n                additional_field_5 TEXT,\n                additional_field_6 TEXT,\n                additional_field_7 TEXT,\n                additional_field_8 TEXT,\n                \n                -- Tracking\n                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n            );\n        \"\"\"))\n        \n        # Create profiles table for client configurations\n        print(\"Creating client_profiles table...\")\n        db.execute(text(\"\"\"\n            CREATE TABLE client_profiles (\n                id SERIAL PRIMARY KEY,\n                client_id VARCHAR(100) NOT NULL,\n                client_name VARCHAR(255) NOT NULL,\n                file_group_name VARCHAR(100) NOT NULL,\n                version VARCHAR(50) DEFAULT 'V00',\n                description TEXT,\n                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                UNIQUE(client_id, file_group_name, version)\n            );\n        \"\"\"))\n        \n        # Create data_model_reference table (from your Data Model sheet)\n        print(\"Creating data_model_reference table...\")\n        db.execute(text(\"\"\"\n            CREATE TABLE data_model_reference (\n                id SERIAL PRIMARY KEY,\n                table_name VARCHAR(100) NOT NULL,\n                column_name VARCHAR(255) NOT NULL,\n                data_type VARCHAR(100),\n                description TEXT,\n                is_required BOOLEAN DEFAULT FALSE,\n                is_unique_key BOOLEAN DEFAULT FALSE,\n                default_value TEXT,\n                validation_rules TEXT,\n                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                UNIQUE(table_name, column_name)\n            );\n        \"\"\"))\n        \n        # Create profile_data table (matches your Profile sheet lookups)\n        print(\"Creating profile_data table...\")\n        db.execute(text(\"\"\"\n            CREATE TABLE profile_data (\n                id SERIAL PRIMARY KEY,\n                lookup_key VARCHAR(500) NOT NULL, -- Format: CLIENT_ID-FILE_GROUP_NAME-VERSION-COLUMN_NAME\n                client_id VARCHAR(100) NOT NULL,\n                file_group_name VARCHAR(100) NOT NULL,\n                version VARCHAR(50) NOT NULL,\n                column_name VARCHAR(255) NOT NULL,\n                data_profile TEXT,\n                profile_value_1 TEXT,\n                profile_value_2 TEXT,\n                profile_value_3 TEXT,\n                profile_value_4 TEXT,\n                profile_value_5 TEXT,\n                sample_values TEXT, -- JSON array of sample values\n                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n                UNIQUE(lookup_key)\n            );\n        \"\"\"))\n        \n        # Add indexes for performance\n        print(\"Creating indexes...\")\n        db.execute(text(\"\"\"\n            CREATE INDEX idx_crosswalk_client_id ON crosswalk_template(client_id);\n            CREATE INDEX idx_crosswalk_file_group ON crosswalk_template(file_group_name);\n            CREATE INDEX idx_crosswalk_source_name ON crosswalk_template(source_column_name);\n            CREATE INDEX idx_profile_lookup ON profile_data(lookup_key);\n            CREATE INDEX idx_data_model_lookup ON data_model_reference(table_name, column_name);\n        \"\"\"))\n        \n        db.commit()\n        print(\"✅ Database schema updated successfully!\")\n        \n    except Exception as e:\n        print(f\"❌ Error updating schema: {e}\")\n        db.rollback()\n        raise\n    finally:\n        db.close()\n\nif __name__ == \"__main__\":\n    update_schema()","size_bytes":6494},"backend/routes/crosswalk_new.py":{"content":"\"\"\"\nUpdated API routes for crosswalk template functionality\n\"\"\"\n\nfrom fastapi import APIRouter, Depends, HTTPException, Query\nfrom sqlalchemy.orm import Session\nfrom sqlalchemy import text, func\nfrom typing import List, Dict, Any, Optional\nimport json\n\nfrom database import get_db\n\nrouter = APIRouter()\n\n@router.get(\"/crosswalk\")\nasync def get_crosswalk_data(\n    client_id: Optional[str] = Query(None),\n    file_group: Optional[str] = Query(None),\n    limit: int = Query(100, le=1000),\n    offset: int = Query(0),\n    db: Session = Depends(get_db)\n):\n    \"\"\"Get crosswalk template data with filtering\"\"\"\n    \n    # Build base query\n    query = \"\"\"\n        SELECT \n            id, client_id, source_column_order, source_column_name, file_group_name,\n            mcdm_column_name, in_model, mcdm_table, custom_field_type,\n            data_profile_info, profile_column_2, profile_column_3, profile_column_4,\n            profile_column_5, profile_column_6, source_column_formatting, skipped_flag,\n            additional_field_1, additional_field_2, additional_field_3, additional_field_4,\n            additional_field_5, additional_field_6, additional_field_7, additional_field_8,\n            created_at, updated_at\n        FROM crosswalk_template\n        WHERE 1=1\n    \"\"\"\n    params = {}\n    \n    if client_id:\n        query += \" AND client_id = :client_id\"\n        params['client_id'] = client_id\n    \n    if file_group:\n        query += \" AND file_group_name = :file_group\"\n        params['file_group'] = file_group\n    \n    query += \" ORDER BY source_column_order, source_column_name\"\n    query += \" LIMIT :limit OFFSET :offset\"\n    params['limit'] = limit\n    params['offset'] = offset\n    \n    result = db.execute(text(query), params).fetchall()\n    \n    # Convert to list of dictionaries\n    columns = [\n        'id', 'client_id', 'source_column_order', 'source_column_name', 'file_group_name',\n        'mcdm_column_name', 'in_model', 'mcdm_table', 'custom_field_type',\n        'data_profile_info', 'profile_column_2', 'profile_column_3', 'profile_column_4',\n        'profile_column_5', 'profile_column_6', 'source_column_formatting', 'skipped_flag',\n        'additional_field_1', 'additional_field_2', 'additional_field_3', 'additional_field_4',\n        'additional_field_5', 'additional_field_6', 'additional_field_7', 'additional_field_8',\n        'created_at', 'updated_at'\n    ]\n    \n    data = []\n    for row in result:\n        row_dict = {}\n        for i, col in enumerate(columns):\n            row_dict[col] = row[i]\n        data.append(row_dict)\n    \n    return {\n        \"data\": data,\n        \"total\": len(data),\n        \"offset\": offset,\n        \"limit\": limit\n    }\n\n@router.post(\"/crosswalk/{mapping_id}/duplicate\")\nasync def duplicate_crosswalk_mapping(\n    mapping_id: int,\n    data: Dict[str, Any],\n    db: Session = Depends(get_db)\n):\n    \"\"\"Duplicate a crosswalk mapping with new table assignment\"\"\"\n    \n    try:\n        # Get the original mapping using the same query structure as other endpoints\n        original_query = \"\"\"\n            SELECT \n                client_id, source_column_order, source_column_name, file_group_name,\n                mcdm_column_name, in_model, mcdm_table, custom_field_type,\n                data_profile_info, profile_column_2, profile_column_3, profile_column_4,\n                profile_column_5, profile_column_6, source_column_formatting, skipped_flag,\n                additional_field_1, additional_field_2, additional_field_3, additional_field_4,\n                additional_field_5, additional_field_6, additional_field_7, additional_field_8\n            FROM crosswalk_template \n            WHERE id = :id\n        \"\"\"\n        \n        original = db.execute(text(original_query), {'id': mapping_id}).fetchone()\n        \n        if not original:\n            raise HTTPException(status_code=404, detail=\"Original mapping not found\")\n        \n        # Create new mapping with duplicated data\n        new_table = data.get('mcdm_table', original[6])  # mcdm_table is index 6\n        \n        insert_query = \"\"\"\n            INSERT INTO crosswalk_template (\n                client_id, source_column_order, source_column_name, file_group_name,\n                mcdm_column_name, in_model, mcdm_table, custom_field_type,\n                data_profile_info, profile_column_2, profile_column_3, profile_column_4,\n                profile_column_5, profile_column_6, source_column_formatting, skipped_flag,\n                additional_field_1, additional_field_2, additional_field_3, additional_field_4,\n                additional_field_5, additional_field_6, additional_field_7, additional_field_8,\n                created_at, updated_at\n            ) VALUES (\n                :client_id, :source_column_order, :source_column_name, :file_group_name,\n                :mcdm_column_name, :in_model, :mcdm_table, :custom_field_type,\n                :data_profile_info, :profile_column_2, :profile_column_3, :profile_column_4,\n                :profile_column_5, :profile_column_6, :source_column_formatting, :skipped_flag,\n                :additional_field_1, :additional_field_2, :additional_field_3, :additional_field_4,\n                :additional_field_5, :additional_field_6, :additional_field_7, :additional_field_8,\n                CURRENT_TIMESTAMP, CURRENT_TIMESTAMP\n            )\n        \"\"\"\n        \n        # Prepare data for new mapping\n        new_mapping_data = {\n            'client_id': original[0],\n            'source_column_order': original[1],\n            'source_column_name': original[2],\n            'file_group_name': original[3],\n            'mcdm_column_name': original[4],\n            'in_model': original[5],\n            'mcdm_table': new_table,\n            'custom_field_type': original[7],\n            'data_profile_info': original[8],\n            'profile_column_2': original[9],\n            'profile_column_3': original[10],\n            'profile_column_4': original[11],\n            'profile_column_5': original[12],\n            'profile_column_6': original[13],\n            'source_column_formatting': original[14],\n            'skipped_flag': original[15],\n            'additional_field_1': original[16],\n            'additional_field_2': original[17],\n            'additional_field_3': original[18],\n            'additional_field_4': original[19],\n            'additional_field_5': original[20],\n            'additional_field_6': original[21],\n            'additional_field_7': original[22],\n            'additional_field_8': original[23]\n        }\n        \n        db.execute(text(insert_query), new_mapping_data)\n        db.commit()\n        \n        # Get the new ID by finding the most recent insertion\n        new_record = db.execute(\n            text(\"SELECT id FROM crosswalk_template WHERE client_id = :client_id AND source_column_name = :source_column_name AND mcdm_table = :mcdm_table ORDER BY created_at DESC LIMIT 1\"),\n            {'client_id': original[0], 'source_column_name': original[2], 'mcdm_table': new_table}\n        ).fetchone()\n        \n        new_id = new_record[0] if new_record else None\n        \n        return {\"success\": True, \"message\": \"Mapping duplicated successfully\", \"new_id\": new_id}\n        \n    except Exception as e:\n        db.rollback()\n        raise HTTPException(status_code=500, detail=f\"Failed to duplicate mapping: {str(e)}\")\n\n@router.put(\"/crosswalk/{mapping_id}\")\nasync def update_crosswalk_mapping(\n    mapping_id: int,\n    data: Dict[str, Any],\n    db: Session = Depends(get_db)\n):\n    \"\"\"Update a crosswalk mapping\"\"\"\n    \n    # Check if mapping exists\n    existing = db.execute(\n        text(\"SELECT id FROM crosswalk_template WHERE id = :id\"),\n        {'id': mapping_id}\n    ).fetchone()\n    \n    if not existing:\n        raise HTTPException(status_code=404, detail=\"Mapping not found\")\n    \n    # Build update query dynamically based on provided fields\n    allowed_fields = [\n        'client_id', 'source_column_order', 'source_column_name', 'file_group_name',\n        'mcdm_column_name', 'in_model', 'mcdm_table', 'custom_field_type',\n        'data_profile_info', 'profile_column_2', 'profile_column_3', 'profile_column_4',\n        'profile_column_5', 'profile_column_6', 'source_column_formatting', 'skipped_flag',\n        'additional_field_1', 'additional_field_2', 'additional_field_3', 'additional_field_4',\n        'additional_field_5', 'additional_field_6', 'additional_field_7', 'additional_field_8'\n    ]\n    \n    updates = []\n    params = {'id': mapping_id}\n    \n    for field, value in data.items():\n        if field in allowed_fields:\n            updates.append(f\"{field} = :{field}\")\n            params[field] = value\n    \n    if not updates:\n        raise HTTPException(status_code=400, detail=\"No valid fields to update\")\n    \n    # Add updated_at\n    updates.append(\"updated_at = CURRENT_TIMESTAMP\")\n    \n    update_query = f\"\"\"\n        UPDATE crosswalk_template \n        SET {', '.join(updates)}\n        WHERE id = :id\n    \"\"\"\n    \n    db.execute(text(update_query), params)\n    db.commit()\n    \n    return {\"success\": True, \"message\": \"Mapping updated successfully\"}\n\n@router.get(\"/crosswalk/clients\")\nasync def get_clients(db: Session = Depends(get_db)):\n    \"\"\"Get list of unique clients\"\"\"\n    result = db.execute(text(\"\"\"\n        SELECT DISTINCT client_id, COUNT(*) as mapping_count\n        FROM crosswalk_template \n        WHERE client_id IS NOT NULL AND client_id != ''\n        GROUP BY client_id\n        ORDER BY client_id\n    \"\"\")).fetchall()\n    \n    return [{\"client_id\": row[0], \"mapping_count\": row[1]} for row in result]\n\n@router.get(\"/crosswalk/file-groups\")\nasync def get_file_groups(\n    client_id: Optional[str] = Query(None),\n    db: Session = Depends(get_db)\n):\n    \"\"\"Get list of file groups, optionally filtered by client\"\"\"\n    query = \"\"\"\n        SELECT DISTINCT file_group_name, COUNT(*) as mapping_count\n        FROM crosswalk_template \n        WHERE file_group_name IS NOT NULL AND file_group_name != ''\n    \"\"\"\n    params = {}\n    \n    if client_id:\n        query += \" AND client_id = :client_id\"\n        params['client_id'] = client_id\n    \n    query += \" GROUP BY file_group_name ORDER BY file_group_name\"\n    \n    result = db.execute(text(query), params).fetchall()\n    \n    return [{\"file_group\": row[0], \"mapping_count\": row[1]} for row in result]\n\n@router.get(\"/crosswalk/summary\")\nasync def get_crosswalk_summary(db: Session = Depends(get_db)):\n    \"\"\"Get summary statistics for the crosswalk data\"\"\"\n    \n    # Get basic counts\n    total_mappings = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_template\")).scalar()\n    total_clients = db.execute(text(\"SELECT COUNT(DISTINCT client_id) FROM crosswalk_template WHERE client_id IS NOT NULL\")).scalar()\n    total_file_groups = db.execute(text(\"SELECT COUNT(DISTINCT file_group_name) FROM crosswalk_template WHERE file_group_name IS NOT NULL\")).scalar()\n    \n    # Get in_model distribution\n    in_model_stats = db.execute(text(\"\"\"\n        SELECT in_model, COUNT(*) as count\n        FROM crosswalk_template \n        GROUP BY in_model\n        ORDER BY count DESC\n    \"\"\")).fetchall()\n    \n    # Get skipped fields count\n    skipped_count = db.execute(text(\"SELECT COUNT(*) FROM crosswalk_template WHERE skipped_flag = true\")).scalar()\n    \n    # Get file group distribution\n    file_group_stats = db.execute(text(\"\"\"\n        SELECT file_group_name, COUNT(*) as count\n        FROM crosswalk_template \n        GROUP BY file_group_name\n        ORDER BY count DESC\n        LIMIT 10\n    \"\"\")).fetchall()\n    \n    return {\n        \"total_mappings\": total_mappings,\n        \"total_clients\": total_clients,\n        \"total_file_groups\": total_file_groups,\n        \"skipped_fields\": skipped_count,\n        \"in_model_distribution\": [{\"in_model\": row[0], \"count\": row[1]} for row in in_model_stats],\n        \"file_group_distribution\": [{\"file_group\": row[0], \"count\": row[1]} for row in file_group_stats]\n    }\n\n@router.post(\"/crosswalk/search\")\nasync def search_crosswalk(\n    search_data: Dict[str, Any],\n    db: Session = Depends(get_db)\n):\n    \"\"\"Advanced search in crosswalk data\"\"\"\n    \n    search_term = search_data.get('term', '').strip()\n    search_fields = search_data.get('fields', ['source_column_name', 'mcdm_column_name'])\n    \n    if not search_term:\n        return {\"data\": [], \"total\": 0}\n    \n    # Build search query\n    conditions = []\n    params = {}\n    \n    for i, field in enumerate(search_fields):\n        if field in ['source_column_name', 'mcdm_column_name', 'data_profile_info', 'source_column_formatting']:\n            param_name = f'search_term_{i}'\n            conditions.append(f\"{field} ILIKE :%{param_name}%\")\n            params[param_name] = f\"%{search_term}%\"\n    \n    if not conditions:\n        return {\"data\": [], \"total\": 0}\n    \n    query = f\"\"\"\n        SELECT \n            id, client_id, source_column_order, source_column_name, file_group_name,\n            mcdm_column_name, in_model, mcdm_table, data_profile_info\n        FROM crosswalk_template\n        WHERE ({' OR '.join(conditions)})\n        ORDER BY source_column_order, source_column_name\n        LIMIT 50\n    \"\"\"\n    \n    result = db.execute(text(query), params).fetchall()\n    \n    data = []\n    for row in result:\n        data.append({\n            'id': row[0],\n            'client_id': row[1],\n            'source_column_order': row[2],\n            'source_column_name': row[3],\n            'file_group_name': row[4],\n            'mcdm_column_name': row[5],\n            'in_model': row[6],\n            'mcdm_table': row[7],\n            'data_profile_info': row[8]\n        })\n    \n    return {\n        \"data\": data,\n        \"total\": len(data)\n    }","size_bytes":13669},"backend/routes/datamodel.py":{"content":"\"\"\"\nData Model Intelligence API - provides PI20 data model assistance and validation\n\"\"\"\n\nfrom fastapi import APIRouter, Depends, HTTPException\nfrom sqlalchemy.orm import Session\nfrom sqlalchemy import text\nfrom typing import List, Dict, Any, Optional\nfrom pydantic import BaseModel\n\n# Import database dependency (assuming it exists in parent directory)\nimport sys\nimport os\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\ntry:\n    from database import get_db\nexcept ImportError:\n    # Fallback database connection\n    from sqlalchemy import create_engine\n    from sqlalchemy.orm import sessionmaker\n    \n    DATABASE_URL = os.getenv(\"DATABASE_URL\")\n    if not DATABASE_URL:\n        raise Exception(\"DATABASE_URL environment variable required\")\n    \n    engine = create_engine(DATABASE_URL)\n    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n    \n    def get_db():\n        db = SessionLocal()\n        try:\n            yield db\n        finally:\n            db.close()\n\nrouter = APIRouter(prefix=\"/api/datamodel\", tags=[\"datamodel\"])\n\n# Response models\nclass DataModelField(BaseModel):\n    schema_layer: str\n    table_name: str\n    column_name: str\n    data_type: str\n    description: str\n    is_standard_field: bool\n    is_case_sensitive: bool\n\nclass ValidationResult(BaseModel):\n    is_valid: bool\n    rule_violations: List[Dict[str, Any]]\n    suggestions: List[str]\n\nclass FieldSuggestion(BaseModel):\n    column_name: str\n    table_name: str\n    schema_layer: str\n    confidence_score: float\n    reason: str\n\n@router.get(\"/fields\", response_model=List[DataModelField])\nasync def get_data_model_fields(\n    schema_layer: Optional[str] = None,\n    table_name: Optional[str] = None,\n    search: Optional[str] = None,\n    db: Session = Depends(get_db)\n):\n    \"\"\"Get PI20 data model fields with optional filtering\"\"\"\n    \n    query = \"\"\"\n        SELECT schema_layer, table_name, column_name, data_type, \n               description, is_standard_field, is_case_sensitive\n        FROM pi20_data_model\n        WHERE 1=1\n    \"\"\"\n    params = {}\n    \n    if schema_layer:\n        query += \" AND schema_layer = :schema_layer\"\n        params[\"schema_layer\"] = schema_layer\n    \n    if table_name:\n        query += \" AND table_name = :table_name\"\n        params[\"table_name\"] = table_name\n    \n    if search:\n        query += \" AND (column_name ILIKE :search OR description ILIKE :search)\"\n        params[\"search\"] = f\"%{search}%\"\n    \n    query += \" ORDER BY schema_layer, table_name, column_name\"\n    \n    result = db.execute(text(query), params)\n    \n    return [\n        DataModelField(\n            schema_layer=row[0],\n            table_name=row[1],\n            column_name=row[2],\n            data_type=row[3],\n            description=row[4],\n            is_standard_field=row[5],\n            is_case_sensitive=row[6]\n        )\n        for row in result\n    ]\n\n@router.get(\"/suggest-mapping\")\nasync def suggest_mapping(\n    source_column: str,\n    file_group: Optional[str] = None,\n    db: Session = Depends(get_db)\n) -> List[FieldSuggestion]:\n    \"\"\"Suggest PI20 data model fields for a source column\"\"\"\n    \n    suggestions = []\n    \n    # Exact name match\n    exact_match = db.execute(\n        text(\"SELECT schema_layer, table_name, column_name FROM pi20_data_model WHERE column_name ILIKE :column\"),\n        {\"column\": source_column}\n    ).fetchall()\n    \n    for row in exact_match:\n        suggestions.append(FieldSuggestion(\n            column_name=row[2],\n            table_name=row[1],\n            schema_layer=row[0],\n            confidence_score=1.0,\n            reason=\"Exact column name match\"\n        ))\n    \n    # Partial matches and common patterns\n    source_lower = source_column.lower()\n    \n    # Common patterns for healthcare data\n    patterns = {\n        'member': ['member_id', 'member_sid'],\n        'claim': ['claim_id', 'claim_header_sid'],\n        'provider': ['provider_sid', 'npi'],\n        'date': ['service_from_dt', 'service_to_dt'],\n        'diagnosis': ['diagnosis_1', 'diagnosis_2'],\n        'procedure': ['procedure_1', 'procedure_2', 'procedure_code'],\n        'amount': ['allowed_amount', 'paid_amount'],\n    }\n    \n    for category, fields in patterns.items():\n        if category in source_lower:\n            for field in fields:\n                field_info = db.execute(\n                    text(\"SELECT schema_layer, table_name FROM pi20_data_model WHERE column_name = :field LIMIT 1\"),\n                    {\"field\": field}\n                ).fetchone()\n                \n                if field_info and not any(s.column_name == field for s in suggestions):\n                    suggestions.append(FieldSuggestion(\n                        column_name=field,\n                        table_name=field_info[1],\n                        schema_layer=field_info[0],\n                        confidence_score=0.8,\n                        reason=f\"Common pattern for {category} fields\"\n                    ))\n    \n    # Sort by confidence score\n    suggestions.sort(key=lambda x: x.confidence_score, reverse=True)\n    \n    return suggestions[:10]  # Return top 10 suggestions\n\n@router.post(\"/validate-mapping\")\nasync def validate_mapping(\n    mapping_data: Dict[str, Any],\n    db: Session = Depends(get_db)\n) -> ValidationResult:\n    \"\"\"Validate a crosswalk mapping against PI20 data model rules\"\"\"\n    \n    violations = []\n    suggestions = []\n    \n    in_model = mapping_data.get('in_model', '').upper()\n    mcdm_column_name = mapping_data.get('mcdm_column_name', '').strip()\n    source_column_formatting = mapping_data.get('source_column_formatting', '').strip()\n    custom_field_type = mapping_data.get('custom_field_type', '').strip()\n    skipped_flag = mapping_data.get('skipped_flag', False)\n    \n    # Rule 1: IN_MODEL=Y requires MCDM column name\n    if in_model == 'Y' and not mcdm_column_name:\n        violations.append({\n            'rule': 'IN_MODEL_Y_REQUIRES_MCDM_COLUMN',\n            'message': 'Fields with IN_MODEL=Y must have an MCDM column name specified',\n            'field': 'mcdm_column_name'\n        })\n    \n    # Rule 2: Check if MCDM column requires case sensitivity handling\n    if mcdm_column_name:\n        case_sensitive_check = db.execute(\n            text(\"SELECT is_case_sensitive FROM pi20_data_model WHERE column_name = :column LIMIT 1\"),\n            {\"column\": mcdm_column_name}\n        ).fetchone()\n        \n        if case_sensitive_check and case_sensitive_check[0] and not source_column_formatting:\n            violations.append({\n                'rule': 'VARCHAR_FIELDS_CASE_SENSITIVITY',\n                'message': f'{mcdm_column_name} is case-sensitive and requires UPPER() or LOWER() function',\n                'field': 'source_column_formatting'\n            })\n            suggestions.append(f\"Try: UPPER({mapping_data.get('source_column_name', 'column_name')})\")\n    \n    # Rule 3: Custom fields validation\n    if in_model == 'N' and not custom_field_type:\n        violations.append({\n            'rule': 'CUSTOM_FIELD_TYPE_VALIDATION',\n            'message': 'Custom fields (IN_MODEL=N) must specify a custom field type',\n            'field': 'custom_field_type'\n        })\n    \n    # Rule 4: Skipped field logic\n    if skipped_flag and in_model != 'N/A':\n        violations.append({\n            'rule': 'SKIPPED_FIELD_LOGIC',\n            'message': 'Skipped fields should have IN_MODEL set to N/A',\n            'field': 'in_model'\n        })\n        suggestions.append(\"Set IN_MODEL to 'N/A' for skipped fields\")\n    \n    # Additional suggestions based on data model\n    if mcdm_column_name and in_model == 'Y':\n        field_info = db.execute(\n            text(\"\"\"\n                SELECT schema_layer, table_name, data_type, description \n                FROM pi20_data_model \n                WHERE column_name = :column\n            \"\"\"),\n            {\"column\": mcdm_column_name}\n        ).fetchone()\n        \n        if field_info:\n            schema_layer, table_name, data_type, description = field_info\n            if not source_column_formatting and 'VARCHAR' in data_type:\n                suggestions.append(f\"Consider data type formatting for {data_type}\")\n            \n            suggestions.append(f\"Target: {schema_layer}.{table_name}.{mcdm_column_name} - {description}\")\n    \n    is_valid = len(violations) == 0\n    \n    return ValidationResult(\n        is_valid=is_valid,\n        rule_violations=violations,\n        suggestions=suggestions\n    )\n\n@router.get(\"/schema-layers\")\nasync def get_schema_layers(db: Session = Depends(get_db)):\n    \"\"\"Get available schema layers (RAW, CLEANSE, CURATED)\"\"\"\n    \n    result = db.execute(\n        text(\"SELECT DISTINCT schema_layer FROM pi20_data_model ORDER BY schema_layer\")\n    )\n    \n    return [row[0] for row in result]\n\n@router.get(\"/tables\")\nasync def get_tables(\n    schema_layer: Optional[str] = None,\n    db: Session = Depends(get_db)\n):\n    \"\"\"Get available tables in the data model\"\"\"\n    \n    query = \"SELECT DISTINCT table_name FROM pi20_data_model\"\n    params = {}\n    \n    if schema_layer:\n        query += \" WHERE schema_layer = :schema_layer\"\n        params[\"schema_layer\"] = schema_layer\n    \n    query += \" ORDER BY table_name\"\n    \n    result = db.execute(text(query), params)\n    \n    return [row[0] for row in result]\n\n@router.get(\"/field-info/{column_name}\")\nasync def get_field_info(\n    column_name: str,\n    db: Session = Depends(get_db)\n):\n    \"\"\"Get detailed information about a specific field\"\"\"\n    \n    result = db.execute(\n        text(\"\"\"\n            SELECT schema_layer, table_name, column_name, data_type, description,\n                   is_standard_field, is_case_sensitive\n            FROM pi20_data_model \n            WHERE column_name ILIKE :column\n            ORDER BY schema_layer, table_name\n        \"\"\"),\n        {\"column\": column_name}\n    ).fetchall()\n    \n    if not result:\n        raise HTTPException(status_code=404, detail=f\"Field {column_name} not found in data model\")\n    \n    return [\n        {\n            \"schema_layer\": row[0],\n            \"table_name\": row[1],\n            \"column_name\": row[2],\n            \"data_type\": row[3],\n            \"description\": row[4],\n            \"is_standard_field\": row[5],\n            \"is_case_sensitive\": row[6]\n        }\n        for row in result\n    ]","size_bytes":10333},"backend/routes/snowflake_export.py":{"content":"\"\"\"\nSnowflake SQL Export API - Generate CREATE TABLE and INSERT statements\n\"\"\"\n\nfrom fastapi import APIRouter, Depends, HTTPException, Query\nfrom sqlalchemy.orm import Session\nfrom sqlalchemy import text\nfrom typing import List, Dict, Any, Optional\nfrom pydantic import BaseModel\nimport json\nfrom datetime import datetime\n\n# Import database dependency\nimport sys\nimport os\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\ntry:\n    from database import get_db\nexcept ImportError:\n    from sqlalchemy import create_engine\n    from sqlalchemy.orm import sessionmaker\n    \n    DATABASE_URL = os.getenv(\"DATABASE_URL\")\n    if not DATABASE_URL:\n        raise Exception(\"DATABASE_URL environment variable required\")\n    \n    engine = create_engine(DATABASE_URL)\n    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n    \n    def get_db():\n        db = SessionLocal()\n        try:\n            yield db\n        finally:\n            db.close()\n\nrouter = APIRouter(prefix=\"/api/snowflake\", tags=[\"snowflake\"])\n\nclass SnowflakeExport(BaseModel):\n    client_id: str\n    file_group: Optional[str] = None\n    export_type: str  # CREATE_TABLE, INSERT_MAPPING, FULL_ETL\n    table_name: str\n    created_by: Optional[str] = None\n\n@router.post(\"/generate-sql\")\nasync def generate_snowflake_sql(\n    export_request: SnowflakeExport,\n    db: Session = Depends(get_db)\n):\n    \"\"\"Generate Snowflake SQL based on crosswalk mappings\"\"\"\n    \n    try:\n        # Get crosswalk mappings\n        query = \"\"\"\n            SELECT ct.*, dm.data_type as model_data_type\n            FROM crosswalk_template ct\n            LEFT JOIN pi20_data_model dm ON ct.mcdm_column_name = dm.column_name\n            WHERE ct.client_id = :client_id\n        \"\"\"\n        params = {'client_id': export_request.client_id}\n        \n        if export_request.file_group:\n            query += \" AND ct.file_group_name = :file_group\"\n            params['file_group'] = export_request.file_group\n        \n        query += \" AND ct.completion_status IN ('READY', 'VALIDATED') ORDER BY ct.source_column_order\"\n        \n        mappings = db.execute(text(query), params).fetchall()\n        \n        if not mappings:\n            raise HTTPException(status_code=404, detail=\"No ready mappings found\")\n        \n        # Generate SQL based on export type\n        if export_request.export_type == \"CREATE_TABLE\":\n            sql_content = generate_create_table_sql(mappings, export_request.table_name)\n        elif export_request.export_type == \"INSERT_MAPPING\":\n            sql_content = generate_insert_mapping_sql(mappings, export_request.table_name)\n        elif export_request.export_type == \"FULL_ETL\":\n            sql_content = generate_full_etl_sql(mappings, export_request.table_name, export_request.client_id)\n        else:\n            raise HTTPException(status_code=400, detail=\"Invalid export type\")\n        \n        # Save export to database\n        db.execute(text(\"\"\"\n            INSERT INTO snowflake_sql_exports \n            (client_id, file_group, export_type, sql_content, table_name, created_by)\n            VALUES (:client_id, :file_group, :export_type, :sql_content, :table_name, :created_by)\n        \"\"\"), {\n            'client_id': export_request.client_id,\n            'file_group': export_request.file_group,\n            'export_type': export_request.export_type,\n            'sql_content': sql_content,\n            'table_name': export_request.table_name,\n            'created_by': export_request.created_by or 'SYSTEM'\n        })\n        \n        db.commit()\n        \n        return {\n            'sql_content': sql_content,\n            'table_name': export_request.table_name,\n            'export_type': export_request.export_type,\n            'mapping_count': len(mappings)\n        }\n        \n    except Exception as e:\n        raise HTTPException(status_code=500, detail=str(e))\n\ndef generate_create_table_sql(mappings, table_name):\n    \"\"\"Generate CREATE TABLE SQL for Snowflake\"\"\"\n    \n    sql_lines = [\n        f\"-- Snowflake CREATE TABLE generated from crosswalk mappings\",\n        f\"-- Generated at: {datetime.now().isoformat()}\",\n        f\"\",\n        f\"CREATE OR REPLACE TABLE {table_name} (\",\n    ]\n    \n    column_definitions = []\n    \n    for mapping in mappings:\n        if not mapping.mcdm_column_name or mapping.skipped_flag:\n            continue\n            \n        # Determine data type\n        data_type = mapping.custom_data_type or mapping.inferred_data_type or mapping.model_data_type or \"VARCHAR(255)\"\n        \n        # Map to Snowflake types\n        if \"VARCHAR\" in data_type.upper():\n            snowflake_type = \"STRING\"\n        elif \"NUMBER\" in data_type.upper():\n            if \",\" in data_type:\n                snowflake_type = data_type.replace(\"NUMBER\", \"NUMBER\")\n            else:\n                snowflake_type = \"NUMBER(38,0)\"\n        elif \"DATE\" in data_type.upper():\n            snowflake_type = \"DATE\"\n        elif \"TIMESTAMP\" in data_type.upper():\n            snowflake_type = \"TIMESTAMP_NTZ\"\n        elif \"BOOLEAN\" in data_type.upper():\n            snowflake_type = \"BOOLEAN\"\n        else:\n            snowflake_type = \"STRING\"\n        \n        # Add column definition\n        column_def = f\"    {mapping.mcdm_column_name} {snowflake_type}\"\n        \n        # Add comment if available\n        if mapping.data_profile_info:\n            comment = mapping.data_profile_info.replace(\"'\", \"''\")[:255]  # Escape quotes and limit length\n            column_def += f\" COMMENT '{comment}'\"\n        \n        column_definitions.append(column_def)\n    \n    # Join columns with commas\n    sql_lines.extend([\",\\n\".join(column_definitions)])\n    sql_lines.append(\");\")\n    \n    # Add table comment\n    sql_lines.extend([\n        \"\",\n        f\"COMMENT ON TABLE {table_name} IS 'Auto-generated from crosswalk mappings - Client: {mappings[0].client_id}';\",\n        \"\"\n    ])\n    \n    return \"\\n\".join(sql_lines)\n\ndef generate_insert_mapping_sql(mappings, table_name):\n    \"\"\"Generate INSERT VALUES exactly matching the Excel formula logic for crosswalk configuration\"\"\"\n    \n    sql_lines = [\n        f\"-- Crosswalk INSERT VALUES - Exact Excel Formula Logic\",\n        f\"-- Generated at: {datetime.now().isoformat()}\",\n        f\"-- This matches your Excel =IF(A3=...) formula for 'Output DML for Crosswalk'\",\n        f\"\",\n        f\"INSERT INTO {table_name} VALUES\"\n    ]\n    \n    value_clauses = []\n    \n    for mapping in mappings:\n        # Excel formula: IF(A3=\"\",\"\", ...)\n        A3 = mapping.source_column_name or \"\"  # Source column name\n        if A3 == \"\":\n            continue  # Skip empty rows like Excel\n        \n        # Map database fields to Excel columns based on your formula\n        B3 = mapping.source_column_order if mapping.source_column_order is not None else \"NULL\"  # Source column order (number)\n        C3 = mapping.data_profile_info or \"\"  # Description (gets double quoted)\n        D3 = mapping.client_id or \"\"  # Client ID\n        E3 = mapping.in_model or \"\"  # MCDM table or status\n        F3 = mapping.in_model or \"\"  # in_model flag\n        G3 = mapping.mcdm_column_name or \"\"  # MCDM column name\n        H3 = mapping.custom_field_type or \"\"  # Custom field type\n        N3 = \"NULL\"  # Some numeric field (placeholder)\n        O3 = mapping.mcs_review_required or False  # Boolean field\n        P3 = mapping.mcs_review_required or False  # Boolean field (reusing for now)\n        R3 = mapping.source_column_formatting or \"\"  # Additional field\n        S3 = mapping.provider_file_group or \"\"  # Additional field\n        T3 = mapping.version_notes or \"\"  # Additional field\n        \n        # Excel logic: IF(E3=\"NOT USED\", [first format], [second format])\n        if E3 == \"NOT USED\":\n            # First format: (A3, D3, B3, C3, NULL,NULL,NULL,NULL,NULL, P3, O3, S3, T3)\n            s3_val = \"NULL\" if S3 == \"\" else f\"'{S3}'\"\n            t3_val = \"NULL\" if T3 == \"\" else f\"'{T3}'\"\n            value_clause = f\"('{A3}','{D3}',{B3},\\\"\\\"\\\"{C3}\\\"\\\"\\\",NULL,NULL,NULL,NULL,NULL,\"\n            value_clause += f\"{'TRUE' if P3 else 'NULL'},\"\n            value_clause += f\"{'TRUE' if O3 else 'NULL'},\"\n            value_clause += f\"{s3_val},\"\n            value_clause += f\"{t3_val})\"\n        else:\n            # Main format matching your Excel formula exactly\n            value_clause = f\"('{A3}',\"\n            \n            # IF(ISBLANK(D3),\"NULL\",\"'\"&D3&\"'\")\n            d3_val = \"NULL\" if D3 == \"\" else f\"'{D3}'\"\n            value_clause += f\"{d3_val},\"\n            \n            # IF(ISBLANK(B3),\"NULL\",B3)  \n            value_clause += f\"{'NULL' if B3 == 'NULL' else B3},\"\n            \n            # IF(ISBLANK(C3),\"NULL\",\"'\"\"\"&C3&\"\"\"'\")\n            c3_val = \"NULL\" if C3 == \"\" else f'\"\"\"{C3}\"\"\"'\n            value_clause += f\"{c3_val},\"\n            \n            # G3 (MCDM column)\n            value_clause += f\"'{G3}',\"\n            \n            # E3 (MCDM table/status)\n            value_clause += f\"'{E3}',\"\n            \n            # IF(N3=\"\",\"NULL\",N3)\n            value_clause += f\"{N3},\"\n            \n            # IF(F3=\"Y\",\"NULL\",\"'\"&H3&\"'\")\n            h3_val = \"NULL\" if F3 == \"Y\" else f\"'{H3}'\"\n            value_clause += f\"{h3_val},\"\n            \n            # IF(R3=\"\",\"NULL\",\"'\"&R3&\"'\")\n            r3_val = \"NULL\" if R3 == \"\" else f\"'{R3}'\"\n            value_clause += f\"{r3_val},\"\n            \n            # IF(P3=TRUE,\"TRUE\",\"NULL\")\n            value_clause += f\"{'TRUE' if P3 else 'NULL'},\"\n            \n            # IF(O3=TRUE,\"TRUE\",\"NULL\")  \n            value_clause += f\"{'TRUE' if O3 else 'NULL'},\"\n            \n            # IF(S3=\"\",\"NULL\",\"'\"&S3&\"'\")\n            s3_val = \"NULL\" if S3 == \"\" else f\"'{S3}'\"\n            value_clause += f\"{s3_val},\"\n            \n            # IF(T3=\"\",\"NULL\",\"'\"&T3&\"'\")\n            t3_val = \"NULL\" if T3 == \"\" else f\"'{T3}'\"\n            value_clause += f\"{t3_val})\"\n        \n        value_clauses.append(value_clause)\n    \n    # Join all VALUE clauses with commas (like dragging down Excel formula)\n    if value_clauses:\n        sql_lines.extend([\",\\n\".join(value_clauses)])\n        sql_lines.append(\";\")\n        sql_lines.append(\"\")\n        sql_lines.append(f\"-- {len(value_clauses)} crosswalk mappings generated\")\n        sql_lines.append(\"-- Each row matches your Excel formula: =IF(A3=\\\"\\\",...)\")\n    else:\n        sql_lines.append(\"-- No valid mappings found\")\n    \n    return \"\\n\".join(sql_lines)\n\ndef generate_full_etl_sql(mappings, table_name, client_id):\n    \"\"\"Generate complete ETL SQL with joins and transformations\"\"\"\n    \n    # Group mappings by source file/table\n    file_groups = {}\n    for mapping in mappings:\n        if mapping.skipped_flag:\n            continue\n        fg = mapping.file_group_name or 'DEFAULT'\n        if fg not in file_groups:\n            file_groups[fg] = []\n        file_groups[fg].append(mapping)\n    \n    sql_lines = [\n        f\"-- Complete ETL SQL generated from crosswalk mappings\",\n        f\"-- Client: {client_id}\",\n        f\"-- Generated at: {datetime.now().isoformat()}\",\n        f\"\",\n        f\"CREATE OR REPLACE VIEW {table_name}_ETL AS\",\n        f\"WITH\"\n    ]\n    \n    # Build CTEs for each file group\n    cte_lines = []\n    for i, (fg, group_mappings) in enumerate(file_groups.items()):\n        cte_name = f\"{fg.lower()}_data\"\n        cte_lines.append(f\"{cte_name} AS (\")\n        cte_lines.append(\"  SELECT\")\n        \n        select_items = []\n        for mapping in group_mappings:\n            if not mapping.mcdm_column_name:\n                continue\n                \n            source_col = mapping.source_column_name\n            if mapping.source_column_formatting:\n                expr = mapping.source_column_formatting\n            else:\n                expr = source_col\n            \n            select_items.append(f\"    {expr} AS {mapping.mcdm_column_name}\")\n        \n        cte_lines.extend([\",\\n\".join(select_items)])\n        cte_lines.append(f\"  FROM raw.{fg.lower()}_table\")  # Placeholder table name\n        cte_lines.append(\")\")\n        \n        if i < len(file_groups) - 1:\n            cte_lines.append(\",\")\n    \n    sql_lines.extend(cte_lines)\n    \n    # Main SELECT with joins\n    sql_lines.extend([\n        \"\",\n        \"SELECT\",\n        \"  -- Add your final SELECT columns here based on target table\",\n        \"  *\",\n        f\"FROM {list(file_groups.keys())[0].lower()}_data\"\n    ])\n    \n    # Add joins if multiple file groups\n    if len(file_groups) > 1:\n        for fg in list(file_groups.keys())[1:]:\n            sql_lines.append(f\"LEFT JOIN {fg.lower()}_data ON {list(file_groups.keys())[0].lower()}_data.some_sid = {fg.lower()}_data.some_sid\")\n    \n    sql_lines.append(\";\")\n    \n    return \"\\n\".join(sql_lines)\n\n@router.get(\"/exports\")\nasync def get_exports(\n    client_id: Optional[str] = Query(None),\n    export_type: Optional[str] = Query(None),\n    db: Session = Depends(get_db)\n):\n    \"\"\"Get list of Snowflake SQL exports\"\"\"\n    \n    query = \"SELECT * FROM snowflake_sql_exports WHERE 1=1\"\n    params = {}\n    \n    if client_id:\n        query += \" AND client_id = :client_id\"\n        params['client_id'] = client_id\n        \n    if export_type:\n        query += \" AND export_type = :export_type\"\n        params['export_type'] = export_type\n    \n    query += \" ORDER BY created_at DESC\"\n    \n    exports = db.execute(text(query), params).fetchall()\n    \n    return [\n        {\n            'id': exp[0],\n            'client_id': exp[1],\n            'file_group': exp[2],\n            'export_type': exp[3],\n            'table_name': exp[5],\n            'created_by': exp[6],\n            'created_at': exp[7],\n            'is_deployed': exp[8]\n        }\n        for exp in exports\n    ]\n\n@router.get(\"/exports/{export_id}/sql\")\nasync def get_export_sql(export_id: int, db: Session = Depends(get_db)):\n    \"\"\"Get SQL content for a specific export\"\"\"\n    \n    result = db.execute(\n        text(\"SELECT sql_content FROM snowflake_sql_exports WHERE id = :id\"),\n        {'id': export_id}\n    ).fetchone()\n    \n    if not result:\n        raise HTTPException(status_code=404, detail=\"Export not found\")\n    \n    return {'sql_content': result[0]}","size_bytes":14144},"frontend/src/components/CrosswalkTemplateGrid.tsx":{"content":"import React, { useState, useEffect, useMemo } from 'react';\nimport {\n  useReactTable,\n  getCoreRowModel,\n  flexRender,\n  ColumnDef,\n  getSortedRowModel,\n  SortingState,\n  getFilteredRowModel,\n  ColumnFiltersState,\n} from '@tanstack/react-table';\nimport { crosswalkApi, CrosswalkMapping } from '../services/crosswalkApi';\nimport { dataModelApi, ValidationResult, FieldSuggestion } from '../services/dataModelApi';\nimport SnowflakeExportModal from './SnowflakeExportModal';\nimport CrosswalkDetailPanel from './CrosswalkDetailPanel';\n\ninterface CrosswalkTemplateGridProps {\n  clientId?: string;\n  fileGroup?: string;\n  version?: string;\n  stream?: string;\n}\n\ninterface FilterOptions {\n  showIncompleteOnly: boolean;\n  showMcsReviewOnly: boolean;\n  completionStatus: string;\n  mcsReviewStatus: string;\n}\n\nconst CrosswalkTemplateGrid: React.FC<CrosswalkTemplateGridProps> = ({ \n  clientId, \n  fileGroup,\n  version,\n  stream\n}) => {\n  const [data, setData] = useState<CrosswalkMapping[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [sorting, setSorting] = useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([]);\n  const [selectedMapping, setSelectedMapping] = useState<CrosswalkMapping | null>(null);\n  const [viewMode, setViewMode] = useState<'table' | 'cards'>('cards');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filters, setFilters] = useState<FilterOptions>({\n    showIncompleteOnly: false,\n    showMcsReviewOnly: false,\n    completionStatus: 'all',\n    mcsReviewStatus: 'all'\n  });\n  const [showSnowflakeModal, setShowSnowflakeModal] = useState(false);\n\n  // Fetch data\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await crosswalkApi.getCrosswalkData({\n          client_id: clientId,\n          file_group: fileGroup,\n          limit: 500\n        });\n        setData(response.data);\n      } catch (err: any) {\n        setError(err.message || 'Failed to fetch crosswalk data');\n        console.error('Error fetching crosswalk data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [clientId, fileGroup]);\n\n  // Update mapping\n  const updateMapping = async (id: number, updates: Partial<CrosswalkMapping>) => {\n    try {\n      await crosswalkApi.updateMapping(id, updates);\n      setData(prev => prev.map(item => \n        item.id === id ? { ...item, ...updates } : item\n      ));\n    } catch (err: any) {\n      console.error('Error updating mapping:', err);\n      alert('Failed to update mapping: ' + (err.message || 'Unknown error'));\n    }\n  };\n\n  // Duplicate mapping to another table\n  const duplicateMapping = async (mapping: CrosswalkMapping) => {\n    const newTable = prompt('Enter the target table name for the duplicate mapping:', mapping.mcdm_table || '');\n    if (!newTable || newTable.trim() === '') return;\n    \n    try {\n      const result = await crosswalkApi.duplicateMapping(mapping.id, newTable.trim());\n      \n      // Add the new mapping to the local data\n      const newMapping: CrosswalkMapping = {\n        ...mapping,\n        id: result.new_id,\n        mcdm_table: newTable.trim(),\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n      \n      setData(prev => [...prev, newMapping]);\n      alert(`Successfully duplicated mapping to table \"${newTable}\"`);\n    } catch (err: any) {\n      console.error('Error duplicating mapping:', err);\n      alert('Failed to duplicate mapping: ' + (err.message || 'Unknown error'));\n    }\n  };\n\n  // Filter data based on search and filters\n  const filteredData = useMemo(() => {\n    let filtered = data;\n    \n    // Apply search filter\n    if (searchTerm) {\n      filtered = filtered.filter(mapping => \n        mapping.source_column_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        mapping.mcdm_column_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        mapping.file_group_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        mapping.data_profile_info?.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n    \n    // Feature 8: Filter incomplete columns\n    if (filters.showIncompleteOnly) {\n      filtered = filtered.filter(mapping => {\n        const inModel = mapping.in_model?.toUpperCase();\n        const hasMcdm = mapping.mcdm_column_name?.trim();\n        const isSkipped = mapping.skipped_flag;\n        return (inModel === 'Y' && !hasMcdm) && !isSkipped;\n      });\n    }\n    \n    // Filter MCS review required\n    if (filters.showMcsReviewOnly) {\n      filtered = filtered.filter(mapping => mapping.mcs_review_required);\n    }\n    \n    // Filter by completion status\n    if (filters.completionStatus !== 'all') {\n      filtered = filtered.filter(mapping => mapping.completion_status === filters.completionStatus);\n    }\n    \n    return filtered;\n  }, [data, searchTerm, filters]);\n\n  // Get status info for a mapping\n  const getStatusInfo = (mapping: CrosswalkMapping) => {\n    const inModel = mapping.in_model?.toUpperCase();\n    const hasMcdm = mapping.mcdm_column_name?.trim();\n    const isSkipped = mapping.skipped_flag;\n\n    if (isSkipped) {\n      return { status: 'skipped', color: 'gray', text: 'Skipped' };\n    }\n    if (inModel === 'Y' && hasMcdm) {\n      return { status: 'mapped', color: 'green', text: 'Mapped' };\n    }\n    if (inModel === 'Y' && !hasMcdm) {\n      return { status: 'incomplete', color: 'red', text: 'Needs MCDM Column' };\n    }\n    if (inModel === 'N') {\n      return { status: 'custom', color: 'blue', text: 'Custom Field' };\n    }\n    if (inModel === 'U') {\n      return { status: 'review', color: 'yellow', text: 'Under Review' };\n    }\n    return { status: 'pending', color: 'gray', text: 'Pending' };\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-orange-600\"></div>\n          <span className=\"text-white\">Loading crosswalk data...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <i className=\"fas fa-exclamation-triangle text-red-500 text-4xl mb-4\"></i>\n          <h3 className=\"text-lg font-medium text-white mb-2\">Error Loading Data</h3>\n          <p className=\"text-gray-300\">{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-full flex bg-gray-900\">\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col\">\n        {/* Enhanced Header */}\n        <div className=\"bg-gray-800 border-b border-gray-700 px-6 py-4\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h2 className=\"text-xl font-semibold text-white\">\n                Crosswalk Template\n              </h2>\n              <p className=\"text-sm text-gray-300 mt-1\">\n                {filteredData.length} mappings\n                {clientId && ` • Client: ${clientId}`}\n                {fileGroup && ` • File Group: ${fileGroup}`}\n                {version && ` • Version: ${version}`}\n                {stream && ` • Stream: ${stream}`}\n              </p>\n            </div>\n            \n            {/* View Mode Toggle */}\n            <div className=\"flex items-center space-x-3\">\n              {/* Feature 6: Snowflake Export */}\n              <button\n                onClick={() => setShowSnowflakeModal(true)}\n                className=\"px-3 py-1.5 text-sm font-medium text-white bg-orange-600 rounded-lg hover:bg-orange-700 flex items-center\"\n              >\n                <i className=\"fas fa-download mr-1.5\"></i>\n                Crosswalk SQL\n              </button>\n              \n              <button\n                onClick={() => alert('Export to Snowflake functionality')}\n                className=\"px-3 py-1.5 text-sm font-medium text-white bg-blue-500 rounded-lg hover:bg-blue-600 flex items-center\"\n              >\n                <i className=\"fas fa-cloud-upload-alt mr-1.5\"></i>\n                Export to Snowflake\n              </button>\n              \n              <button\n                onClick={() => window.location.href = '/mcs-review'}\n                className=\"px-3 py-1.5 text-sm font-medium text-white bg-purple-600 rounded-lg hover:bg-purple-700 flex items-center\"\n              >\n                <i className=\"fas fa-user-check mr-1.5\"></i>\n                MCS Review\n              </button>\n              \n              <div className=\"flex rounded-lg border border-gray-600\">\n                <button\n                  onClick={() => setViewMode('cards')}\n                  className={`px-3 py-1.5 text-sm font-medium rounded-l-lg ${\n                    viewMode === 'cards'\n                      ? 'bg-orange-600 text-white'\n                      : 'bg-gray-700 text-white hover:bg-gray-600'\n                  }`}\n                >\n                  <i className=\"fas fa-th-large mr-1.5\"></i>\n                  Cards\n                </button>\n                <button\n                  onClick={() => setViewMode('table')}\n                  className={`px-3 py-1.5 text-sm font-medium rounded-r-lg border-l ${\n                    viewMode === 'table'\n                      ? 'bg-orange-600 text-white'\n                      : 'bg-gray-700 text-white hover:bg-gray-600'\n                  }`}\n                >\n                  <i className=\"fas fa-table mr-1.5\"></i>\n                  Table\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Enhanced Search and Filters */}\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n            <div className=\"flex-1 max-w-md\">\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search columns, mappings, or descriptions...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white placeholder-gray-400\"\n                />\n                <i className=\"fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-300\"></i>\n              </div>\n            </div>\n            \n            {/* Feature 8: Advanced Filters */}\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"incomplete-only\"\n                  checked={filters.showIncompleteOnly}\n                  onChange={(e) => setFilters({...filters, showIncompleteOnly: e.target.checked})}\n                  className=\"rounded border-gray-600\"\n                />\n                <label htmlFor=\"incomplete-only\" className=\"text-sm text-white\">\n                  Show Incomplete Only\n                </label>\n              </div>\n              \n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"mcs-review\"\n                  checked={filters.showMcsReviewOnly}\n                  onChange={(e) => setFilters({...filters, showMcsReviewOnly: e.target.checked})}\n                  className=\"rounded border-gray-600\"\n                />\n                <label htmlFor=\"mcs-review\" className=\"text-sm text-white\">\n                  <i className=\"fas fa-flag text-orange-600 mr-1\"></i>\n                  MCS Review\n                </label>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-2 text-sm\">\n              <span className=\"text-white font-medium\">Status:</span>\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 bg-green-500 rounded-full mr-1.5\"></div>\n                  <span className=\"text-white\">Mapped ({filteredData.filter(m => getStatusInfo(m).status === 'mapped').length})</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 bg-red-500 rounded-full mr-1.5\"></div>\n                  <span className=\"text-white\">Incomplete ({filteredData.filter(m => getStatusInfo(m).status === 'incomplete').length})</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-3 h-3 bg-orange-600 rounded-full mr-1.5\"></div>\n                  <span className=\"text-white\">MCS Review ({filteredData.filter(m => m.mcs_review_required).length})</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 overflow-hidden\">\n          {viewMode === 'cards' ? (\n            <CardsView \n              data={filteredData} \n              onUpdateMapping={updateMapping}\n              onSelectMapping={setSelectedMapping}\n              onDuplicateMapping={duplicateMapping}\n              selectedMapping={selectedMapping}\n              getStatusInfo={getStatusInfo}\n            />\n          ) : (\n            <TableView \n              data={filteredData} \n              onUpdateMapping={updateMapping}\n              onSelectMapping={setSelectedMapping}\n              selectedMapping={selectedMapping}\n              getStatusInfo={getStatusInfo}\n            />\n          )}\n        </div>\n      </div>\n\n      {/* Detail Panel */}\n      {selectedMapping && (\n        <CrosswalkDetailPanel\n          mapping={selectedMapping}\n          onUpdateMapping={(updates) => updateMapping(selectedMapping.id, updates)}\n          onClose={() => setSelectedMapping(null)}\n        />\n      )}\n\n      {/* Feature 6: Snowflake Export Modal */}\n      <SnowflakeExportModal\n        isOpen={showSnowflakeModal}\n        onClose={() => setShowSnowflakeModal(false)}\n        clientId={clientId}\n        fileGroup={fileGroup}\n      />\n    </div>\n  );\n};\n\n// Cards View Component\nconst CardsView: React.FC<{\n  data: CrosswalkMapping[];\n  onUpdateMapping: (id: number, updates: Partial<CrosswalkMapping>) => void;\n  onSelectMapping: (mapping: CrosswalkMapping) => void;\n  onDuplicateMapping: (mapping: CrosswalkMapping) => void;\n  selectedMapping: CrosswalkMapping | null;\n  getStatusInfo: (mapping: CrosswalkMapping) => any;\n}> = ({ data, onUpdateMapping, onSelectMapping, onDuplicateMapping, selectedMapping, getStatusInfo }) => {\n  return (\n    <div className=\"h-full overflow-auto p-6 bg-gray-900\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n        {data.map((mapping) => {\n          const status = getStatusInfo(mapping);\n          const isSelected = selectedMapping?.id === mapping.id;\n          \n          return (\n            <div\n              key={mapping.id}\n              onClick={() => onSelectMapping(mapping)}\n              className={`bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer border-2 ${\n                isSelected ? 'border-orange-600 ring-2 ring-orange-200' : 'border-gray-600'\n              }`}\n            >\n              {/* Card Header */}\n              <div className=\"p-4 border-b border-gray-700\">\n                <div className=\"flex items-start justify-between mb-2\">\n                  <div className=\"flex items-start space-x-2 flex-1\">\n                    <h3 className=\"font-semibold text-white text-sm leading-tight flex-1\">\n                      {mapping.source_column_name || 'Untitled Column'}\n                    </h3>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        onDuplicateMapping(mapping);\n                      }}\n                      className=\"text-gray-400 hover:text-orange-400 transition-colors p-1 rounded hover:bg-gray-700\"\n                      title=\"Duplicate to another table\"\n                    >\n                      <i className=\"fas fa-copy text-xs\"></i>\n                    </button>\n                  </div>\n                  <span className={`px-2 py-1 rounded-full text-xs font-medium ml-2 ${\n                    status.status === 'mapped' ? 'bg-green-100 text-green-700' :\n                    status.status === 'incomplete' ? 'bg-red-100 text-red-700' :\n                    status.status === 'custom' ? 'bg-orange-100 text-orange-700' :\n                    status.status === 'review' ? 'bg-yellow-100 text-yellow-700' :\n                    status.status === 'skipped' ? 'bg-gray-100 text-gray-700' :\n                    'bg-gray-100 text-gray-700'\n                  }`}>\n                    {status.text}\n                  </span>\n                </div>\n                \n                {mapping.file_group_name && (\n                  <span className={`inline-flex px-2 py-1 rounded text-xs font-medium ${\n                    mapping.file_group_name === 'CLAIM' ? 'bg-orange-50 text-orange-700' :\n                    mapping.file_group_name === 'CLAIM_LINE' ? 'bg-green-50 text-green-700' :\n                    mapping.file_group_name === 'MEMBER' ? 'bg-purple-50 text-purple-700' :\n                    mapping.file_group_name === 'PROVIDER' ? 'bg-orange-50 text-orange-700' :\n                    'bg-gray-50 text-gray-700'\n                  }`}>\n                    {mapping.file_group_name}\n                  </span>\n                )}\n              </div>\n\n              {/* Card Body */}\n              <div className=\"p-4 space-y-3\">\n                {mapping.mcdm_column_name && (\n                  <div>\n                    <label className=\"text-xs font-medium text-gray-400 uppercase tracking-wide\">Target Column</label>\n                    <p className=\"text-sm font-medium text-orange-600 mt-1\">{mapping.mcdm_column_name}</p>\n                  </div>\n                )}\n                \n                {mapping.mcdm_table && (\n                  <div>\n                    <label className=\"text-xs font-medium text-gray-400 uppercase tracking-wide\">Table</label>\n                    <p className=\"text-sm text-white mt-1\">{mapping.mcdm_table}</p>\n                  </div>\n                )}\n                \n                {mapping.source_column_formatting && (\n                  <div>\n                    <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Formatting</label>\n                    <p className=\"text-sm font-mono text-gray-700 mt-1 bg-gray-50 px-2 py-1 rounded\">\n                      {mapping.source_column_formatting.length > 30 \n                        ? `${mapping.source_column_formatting.substring(0, 30)}...`\n                        : mapping.source_column_formatting\n                      }\n                    </p>\n                  </div>\n                )}\n\n                {mapping.data_profile_info && (\n                  <div>\n                    <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Profile Info</label>\n                    <p className=\"text-sm text-gray-600 mt-1\">\n                      {mapping.data_profile_info.length > 60 \n                        ? `${mapping.data_profile_info.substring(0, 60)}...`\n                        : mapping.data_profile_info\n                      }\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              {/* Card Footer */}\n              <div className=\"px-4 py-3 bg-gray-700 rounded-b-lg border-t border-gray-600\">\n                <div className=\"flex items-center justify-between text-xs text-gray-300\">\n                  <span>Order: {mapping.source_column_order || 'N/A'}</span>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={`px-2 py-0.5 rounded font-medium ${\n                      mapping.in_model === 'Y' ? 'bg-green-100 text-green-700' :\n                      mapping.in_model === 'N' ? 'bg-red-100 text-red-700' :\n                      mapping.in_model === 'U' ? 'bg-yellow-100 text-yellow-700' :\n                      'bg-gray-100 text-gray-700'\n                    }`}>\n                      {mapping.in_model || 'Y'}\n                    </span>\n                    {mapping.skipped_flag && (\n                      <i className=\"fas fa-ban text-red-400\" title=\"Skipped\"></i>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\n// Table View Component (simplified for now)\nconst TableView: React.FC<{\n  data: CrosswalkMapping[];\n  onUpdateMapping: (id: number, updates: Partial<CrosswalkMapping>) => void;\n  onSelectMapping: (mapping: CrosswalkMapping) => void;\n  selectedMapping: CrosswalkMapping | null;\n  getStatusInfo: (mapping: CrosswalkMapping) => any;\n}> = ({ data, onUpdateMapping, onSelectMapping, selectedMapping, getStatusInfo }) => {\n  return (\n    <div className=\"h-full overflow-auto bg-gray-900\">\n      <div className=\"min-w-full bg-gray-800\">\n        <table className=\"min-w-full divide-y divide-gray-700\">\n          <thead className=\"bg-gray-700 sticky top-0\">\n            <tr>\n              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">Source Column</th>\n              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">File Group</th>\n              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">MCDM Column</th>\n              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">Table</th>\n              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">Status</th>\n              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">Actions</th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-gray-800 divide-y divide-gray-700\">\n            {data.map((mapping) => {\n              const status = getStatusInfo(mapping);\n              const isSelected = selectedMapping?.id === mapping.id;\n              \n              return (\n                <tr \n                  key={mapping.id} \n                  className={`hover:bg-gray-700 cursor-pointer ${isSelected ? 'bg-gray-700 border-l-4 border-orange-500' : ''}`}\n                  onClick={() => onSelectMapping(mapping)}\n                >\n                  <td className=\"px-4 py-4 whitespace-nowrap\">\n                    <div className=\"font-medium text-white\">{mapping.source_column_name || 'Untitled'}</div>\n                    <div className=\"text-sm text-gray-400\">Order: {mapping.source_column_order || 'N/A'}</div>\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap\">\n                    <span className={`inline-flex px-2 py-1 rounded-full text-xs font-medium ${\n                      mapping.file_group_name === 'CLAIM' ? 'bg-orange-100 text-orange-800' :\n                      mapping.file_group_name === 'CLAIM_LINE' ? 'bg-green-100 text-green-800' :\n                      mapping.file_group_name === 'MEMBER' ? 'bg-purple-100 text-purple-800' :\n                      mapping.file_group_name === 'PROVIDER' ? 'bg-orange-100 text-orange-800' :\n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {mapping.file_group_name || 'N/A'}\n                    </span>\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-orange-600\">{mapping.mcdm_column_name || 'Not mapped'}</div>\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-white\">\n                    {mapping.mcdm_table || 'N/A'}\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap\">\n                    <span className={`inline-flex px-2 py-1 rounded-full text-xs font-medium ${\n                      status.status === 'mapped' ? 'bg-green-100 text-green-800' :\n                      status.status === 'incomplete' ? 'bg-red-100 text-red-800' :\n                      status.status === 'custom' ? 'bg-orange-100 text-orange-800' :\n                      status.status === 'review' ? 'bg-yellow-100 text-yellow-800' :\n                      status.status === 'skipped' ? 'bg-gray-100 text-gray-800' :\n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {status.text}\n                    </span>\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium\">\n                    <button className=\"text-orange-600 hover:text-orange-900\">Edit</button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\n// Detail Panel Component\nconst DetailPanel: React.FC<{\n  mapping: CrosswalkMapping;\n  onUpdateMapping: (updates: Partial<CrosswalkMapping>) => void;\n  onClose: () => void;\n}> = ({ mapping, onUpdateMapping, onClose }) => {\n  const [formData, setFormData] = useState(mapping);\n  const [suggestions, setSuggestions] = useState<FieldSuggestion[]>([]);\n\n  useEffect(() => {\n    setFormData(mapping);\n  }, [mapping]);\n\n  const handleSave = () => {\n    onUpdateMapping(formData);\n    onClose();\n  };\n\n  const getSuggestions = async () => {\n    if (formData.source_column_name) {\n      try {\n        const result = await dataModelApi.suggestMapping(formData.source_column_name, formData.file_group_name);\n        setSuggestions(result);\n      } catch (error) {\n        console.error('Error getting suggestions:', error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"w-96 bg-gray-800 border-l border-gray-700 flex flex-col\">\n      {/* Header */}\n      <div className=\"px-6 py-4 border-b border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-medium text-white\">Edit Mapping</h3>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-200\"\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-auto p-6 space-y-6\">\n        {/* Source Column */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n            Source Column Name\n          </label>\n          <input\n            type=\"text\"\n            value={formData.source_column_name || ''}\n            onChange={(e) => setFormData({ ...formData, source_column_name: e.target.value })}\n            className=\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\"\n          />\n        </div>\n\n        {/* File Group */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n            File Group\n          </label>\n          <select\n            value={formData.file_group_name || ''}\n            onChange={(e) => setFormData({ ...formData, file_group_name: e.target.value })}\n            className=\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\"\n          >\n            <option value=\"\">Select file group...</option>\n            <option value=\"CLAIM\">CLAIM</option>\n            <option value=\"CLAIM_LINE\">CLAIM_LINE</option>\n            <option value=\"MEMBER\">MEMBER</option>\n            <option value=\"PROVIDER\">PROVIDER</option>\n            <option value=\"PLAN\">PLAN</option>\n          </select>\n        </div>\n\n        {/* MCDM Column with suggestions */}\n        <div>\n          <div className=\"flex items-center justify-between mb-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">\n              MCDM Column Name\n            </label>\n            <button\n              onClick={getSuggestions}\n              className=\"text-sm text-orange-600 hover:text-orange-800\"\n            >\n              Get Suggestions\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            value={formData.mcdm_column_name || ''}\n            onChange={(e) => setFormData({ ...formData, mcdm_column_name: e.target.value })}\n            className=\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\"\n          />\n          \n          {suggestions.length > 0 && (\n            <div className=\"mt-2 border border-gray-200 rounded-md max-h-32 overflow-y-auto\">\n              {suggestions.map((suggestion, index) => (\n                <button\n                  key={index}\n                  onClick={() => setFormData({ \n                    ...formData, \n                    mcdm_column_name: suggestion.column_name,\n                    mcdm_table: suggestion.table_name\n                  })}\n                  className=\"w-full text-left px-3 py-2 hover:bg-gray-50 text-sm border-b border-gray-100 last:border-b-0\"\n                >\n                  <div className=\"font-medium\">{suggestion.column_name}</div>\n                  <div className=\"text-gray-500 text-xs\">{suggestion.table_name} • {suggestion.reason}</div>\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* IN_MODEL */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n            In Model\n          </label>\n          <select\n            value={formData.in_model || 'Y'}\n            onChange={(e) => setFormData({ ...formData, in_model: e.target.value })}\n            className=\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\"\n          >\n            <option value=\"Y\">Y - Include in model</option>\n            <option value=\"N\">N - Custom field</option>\n            <option value=\"U\">U - Under review</option>\n            <option value=\"N/A\">N/A - Skip</option>\n          </select>\n        </div>\n\n        {/* Source Formatting */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n            Source Column Formatting\n          </label>\n          <textarea\n            value={formData.source_column_formatting || ''}\n            onChange={(e) => setFormData({ ...formData, source_column_formatting: e.target.value })}\n            rows={3}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 font-mono text-sm\"\n            placeholder=\"e.g., UPPER(column_name)\"\n          />\n        </div>\n\n        {/* Data Profile Info */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n            Data Profile Info\n          </label>\n          <textarea\n            value={formData.data_profile_info || ''}\n            onChange={(e) => setFormData({ ...formData, data_profile_info: e.target.value })}\n            rows={3}\n            className=\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\"\n            placeholder=\"Description of data profile or sample values...\"\n          />\n        </div>\n\n        {/* Skipped Flag */}\n        <div className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            id=\"skipped\"\n            checked={formData.skipped_flag || false}\n            onChange={(e) => setFormData({ ...formData, skipped_flag: e.target.checked })}\n            className=\"h-4 w-4 text-orange-600 focus:ring-orange-500 border-gray-300 rounded\"\n          />\n          <label htmlFor=\"skipped\" className=\"ml-2 block text-sm text-gray-900\">\n            Skip this field\n          </label>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div className=\"px-6 py-4 border-t border-gray-700\">\n        <div className=\"flex justify-end space-x-3\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 text-sm font-medium text-gray-300 bg-gray-700 border border-gray-600 rounded-md hover:bg-gray-600\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"px-4 py-2 text-sm font-medium text-white bg-orange-600 rounded-md hover:bg-orange-700\"\n          >\n            Save Changes\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CrosswalkTemplateGrid;","size_bytes":33031},"frontend/src/components/SnowflakeExportModal.tsx":{"content":"import React, { useState } from 'react';\nimport { crosswalkApi } from '../services/crosswalkApi';\n\ninterface SnowflakeExportModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  clientId?: string;\n  fileGroup?: string;\n}\n\nconst SnowflakeExportModal: React.FC<SnowflakeExportModalProps> = ({\n  isOpen,\n  onClose,\n  clientId,\n  fileGroup\n}) => {\n  const [exportType, setExportType] = useState<string>('CREATE_TABLE');\n  const [tableName, setTableName] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [generatedSQL, setGeneratedSQL] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleGenerate = async () => {\n    if (!clientId || !tableName.trim()) {\n      setError('Client ID and table name are required');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setGeneratedSQL('');\n\n    try {\n      const result = await crosswalkApi.generateSnowflakeSQL({\n        client_id: clientId,\n        file_group: fileGroup,\n        export_type: exportType,\n        table_name: tableName.trim(),\n        created_by: 'WEB_USER'\n      });\n\n      setGeneratedSQL(result.sql_content);\n    } catch (err: any) {\n      setError(err.message || 'Failed to generate SQL');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCopySQL = () => {\n    navigator.clipboard.writeText(generatedSQL);\n    alert('SQL copied to clipboard!');\n  };\n\n  const handleDownload = () => {\n    const blob = new Blob([generatedSQL], { type: 'text/sql' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${tableName}_${exportType.toLowerCase()}.sql`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\n      <div className=\"bg-gray-800 rounded-lg shadow-xl w-full max-w-4xl mx-4 max-h-[90vh] flex flex-col\">\n        {/* Header */}\n        <div className=\"px-6 py-4 border-b border-gray-700 flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold text-white\">\n            <i className=\"fas fa-database text-orange-600 mr-2\"></i>\n            Generate Snowflake SQL\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-200\"\n          >\n            <i className=\"fas fa-times text-xl\"></i>\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 overflow-hidden flex flex-col p-6\">\n          {/* Configuration */}\n          <div className=\"space-y-4 mb-6\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-white mb-2\">\n                  Export Type\n                </label>\n                <select\n                  value={exportType}\n                  onChange={(e) => setExportType(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\"\n                >\n                  <option value=\"CREATE_TABLE\">CREATE TABLE</option>\n                  <option value=\"INSERT_MAPPING\">🎯 Crosswalk Configuration INSERTs (ETL Foundation)</option>\n                  <option value=\"FULL_ETL\">Full ETL with Joins</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-white mb-2\">\n                  Table Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={tableName}\n                  onChange={(e) => setTableName(e.target.value)}\n                  placeholder=\"e.g., UPHP_CLAIMS_STAGING\"\n                  className=\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\"\n                />\n              </div>\n            </div>\n\n            <div className=\"bg-gray-700 p-4 rounded-lg border border-gray-600\">\n              <h3 className=\"font-medium text-orange-400 mb-2\">Configuration Summary</h3>\n              <div className=\"text-sm text-gray-300 space-y-1\">\n                <p><strong>Client:</strong> {clientId}</p>\n                <p><strong>File Group:</strong> {fileGroup || 'All'}</p>\n                <p><strong>Export Type:</strong> {exportType === 'INSERT_MAPPING' ? 'Crosswalk Configuration INSERTs' : exportType}</p>\n                <p><strong>Target Table:</strong> {tableName || (exportType === 'INSERT_MAPPING' ? 'crosswalk.configuration (recommended)' : 'Not specified')}</p>\n              </div>\n              \n              {exportType === 'INSERT_MAPPING' && (\n                <div className=\"mt-3 p-3 bg-yellow-50 border border-yellow-200 rounded\">\n                  <p className=\"text-sm text-yellow-800\">\n                    <i className=\"fas fa-info-circle mr-2\"></i>\n                    <strong>Critical:</strong> These INSERTs populate your crosswalk.configuration table - \n                    the foundation for all your ETL processes. This is the \"Output DML for Crosswalk\" functionality.\n                  </p>\n                </div>\n              )}\n            </div>\n\n            {error && (\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                <div className=\"flex\">\n                  <i className=\"fas fa-exclamation-triangle text-red-400 mr-2 mt-1\"></i>\n                  <p className=\"text-sm text-red-700\">{error}</p>\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={handleGenerate}\n                disabled={loading || !tableName.trim()}\n                className=\"px-4 py-2 bg-orange-600 text-white rounded-md hover:bg-orange-700 disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center\"\n              >\n                {loading ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Generating...\n                  </>\n                ) : (\n                  <>\n                    <i className=\"fas fa-code mr-2\"></i>\n                    Generate SQL\n                  </>\n                )}\n              </button>\n              \n              {generatedSQL && (\n                <>\n                  <button\n                    onClick={handleCopySQL}\n                    className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center\"\n                  >\n                    <i className=\"fas fa-copy mr-2\"></i>\n                    Copy\n                  </button>\n                  <button\n                    onClick={handleDownload}\n                    className=\"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 flex items-center\"\n                  >\n                    <i className=\"fas fa-download mr-2\"></i>\n                    Download\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n\n          {/* SQL Output */}\n          {generatedSQL && (\n            <div className=\"flex-1 min-h-0\">\n              <label className=\"block text-sm font-medium text-white mb-2\">\n                Generated SQL\n              </label>\n              <div className=\"h-full border border-gray-600 rounded-md overflow-hidden\">\n                <textarea\n                  value={generatedSQL}\n                  readOnly\n                  className=\"w-full h-full p-3 font-mono text-sm resize-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\"\n                  style={{ minHeight: '300px' }}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"px-6 py-4 border-t border-gray-700 bg-gray-700\">\n          <div className=\"flex justify-end space-x-3\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 text-sm font-medium text-gray-300 bg-gray-700 border border-gray-600 rounded-md hover:bg-gray-600\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SnowflakeExportModal;","size_bytes":8451},"frontend/src/services/crosswalkApi.ts":{"content":"/**\n * API service for crosswalk template operations\n */\n\nexport interface CrosswalkMapping {\n  id: number;\n  client_id: string;\n  source_column_order: number | null;\n  source_column_name: string;\n  file_group_name: string;\n  mcdm_column_name: string | null;\n  in_model: string;\n  mcdm_table: string | null;\n  custom_field_type: string | null;\n  data_profile_info: string | null;\n  profile_column_2: string | null;\n  profile_column_3: string | null;\n  profile_column_4: string | null;\n  profile_column_5: string | null;\n  profile_column_6: string | null;\n  source_column_formatting: string | null;\n  skipped_flag: boolean;\n  additional_field_1: string | null;\n  additional_field_2: string | null;\n  additional_field_3: string | null;\n  additional_field_4: string | null;\n  additional_field_5: string | null;\n  additional_field_6: string | null;\n  additional_field_7: string | null;\n  additional_field_8: string | null;\n  created_at: string;\n  updated_at: string;\n  \n  // Feature 1 & 2: Multi-table and provider fields\n  target_tables?: string | null;\n  provider_file_group?: string | null;\n  is_multi_table?: boolean;\n  \n  // Feature 3: Version control\n  crosswalk_version?: string | null;\n  parent_mapping_id?: number | null;\n  reuse_from_client?: string | null;\n  version_notes?: string | null;\n  \n  // Feature 4: Data type inference\n  inferred_data_type?: string | null;\n  custom_data_type?: string | null;\n  data_type_source?: string | null;\n  data_type?: string | null;\n  description?: string | null;\n  mcdm_table_name?: string | null;\n  \n  // Feature 5: Multi-file joins\n  source_file_name?: string | null;\n  join_key_column?: string | null;\n  join_table?: string | null;\n  join_type?: string | null;\n  \n  // Feature 7: MCS review\n  mcs_review_required?: boolean;\n  mcs_review_notes?: string | null;\n  mcs_review_status?: string | null;\n  mcs_reviewer?: string | null;\n  mcs_review_date?: string | null;\n  \n  // Additional tracking\n  complexity_score?: number | null;\n  business_priority?: string | null;\n  completion_status?: string | null;\n}\n\nexport interface CrosswalkResponse {\n  data: CrosswalkMapping[];\n  total: number;\n  offset: number;\n  limit: number;\n}\n\nexport interface CrosswalkSummary {\n  total_mappings: number;\n  total_clients: number;\n  total_file_groups: number;\n  skipped_fields: number;\n  in_model_distribution: Array<{in_model: string; count: number}>;\n  file_group_distribution: Array<{file_group: string; count: number}>;\n}\n\nexport interface Client {\n  client_id: string;\n  mapping_count: number;\n}\n\nexport interface FileGroup {\n  file_group: string;\n  mapping_count: number;\n}\n\nconst API_BASE_URL = '/api';\n\nclass CrosswalkApiService {\n  async getCrosswalkMappings(params?: {\n    client_id?: string;\n    file_group?: string;\n    limit?: number;\n    offset?: number;\n  }): Promise<CrosswalkMapping[]> {\n    const urlParams = new URLSearchParams();\n    \n    if (params?.client_id) urlParams.append('client_id', params.client_id);\n    if (params?.file_group) urlParams.append('file_group', params.file_group);\n    if (params?.limit) urlParams.append('limit', params.limit.toString());\n    if (params?.offset) urlParams.append('offset', params.offset.toString());\n    \n    const response = await fetch(`${API_BASE_URL}/crosswalk?${urlParams}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    return data.data || data; // Handle both response formats\n  }\n\n  async getCrosswalkData(params?: {\n    client_id?: string;\n    file_group?: string;\n    limit?: number;\n    offset?: number;\n  }): Promise<CrosswalkResponse> {\n    const urlParams = new URLSearchParams();\n    \n    if (params?.client_id) urlParams.append('client_id', params.client_id);\n    if (params?.file_group) urlParams.append('file_group', params.file_group);\n    if (params?.limit) urlParams.append('limit', params.limit.toString());\n    if (params?.offset) urlParams.append('offset', params.offset.toString());\n    \n    const response = await fetch(`${API_BASE_URL}/crosswalk?${urlParams}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    return response.json();\n  }\n  \n  async updateMapping(id: number, data: Partial<CrosswalkMapping>): Promise<{success: boolean; message: string}> {\n    const response = await fetch(`${API_BASE_URL}/crosswalk/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    return response.json();\n  }\n  \n  async getClients(): Promise<Client[]> {\n    const response = await fetch(`${API_BASE_URL}/crosswalk/clients`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    return response.json();\n  }\n  \n  async getFileGroups(client_id?: string): Promise<FileGroup[]> {\n    const urlParams = new URLSearchParams();\n    if (client_id) urlParams.append('client_id', client_id);\n    \n    const response = await fetch(`${API_BASE_URL}/crosswalk/file-groups?${urlParams}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    return response.json();\n  }\n  \n  async getSummary(): Promise<CrosswalkSummary> {\n    const response = await fetch(`${API_BASE_URL}/crosswalk/summary`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    return response.json();\n  }\n  \n  async searchMappings(searchData: {term: string; fields: string[]}): Promise<{data: CrosswalkMapping[]; total: number}> {\n    const response = await fetch(`${API_BASE_URL}/crosswalk/search`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(searchData),\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    return response.json();\n  }\n\n  // Feature 6: Snowflake SQL Generation\n  async generateSnowflakeSQL(exportData: {\n    client_id: string;\n    file_group?: string;\n    export_type: string;\n    table_name: string;\n    created_by?: string;\n  }): Promise<{sql_content: string; table_name: string; export_type: string; mapping_count: number}> {\n    const response = await fetch(`/api/snowflake/generate-sql`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(exportData),\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    return response.json();\n  }\n\n  async getSnowflakeExports(client_id?: string): Promise<any[]> {\n    const urlParams = new URLSearchParams();\n    if (client_id) urlParams.append('client_id', client_id);\n    \n    const response = await fetch(`/api/snowflake/exports?${urlParams}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    return response.json();\n  }\n\n  async duplicateMapping(id: number, newTable: string): Promise<{success: boolean; message: string; new_id: number}> {\n    const response = await fetch(`${API_BASE_URL}/crosswalk/${id}/duplicate`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ mcdm_table: newTable }),\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    return response.json();\n  }\n}\n\nexport const crosswalkApi = new CrosswalkApiService();","size_bytes":8350},"frontend/src/services/dataModelApi.ts":{"content":"/**\n * Data Model API Service - Provides PI20 data model intelligence and validation\n */\n\nconst API_BASE_URL = '/api/datamodel';\n\nexport interface DataModelField {\n  schema_layer: string;\n  table_name: string;\n  column_name: string;\n  data_type: string;\n  description: string;\n  is_standard_field: boolean;\n  is_case_sensitive: boolean;\n}\n\nexport interface ValidationResult {\n  is_valid: boolean;\n  rule_violations: Array<{\n    rule: string;\n    message: string;\n    field: string;\n  }>;\n  suggestions: string[];\n}\n\nexport interface FieldSuggestion {\n  column_name: string;\n  table_name: string;\n  schema_layer: string;\n  confidence_score: number;\n  reason: string;\n}\n\nexport interface FieldInfo {\n  schema_layer: string;\n  table_name: string;\n  column_name: string;\n  data_type: string;\n  description: string;\n  is_standard_field: boolean;\n  is_case_sensitive: boolean;\n}\n\nclass DataModelApiService {\n  private async request<T>(endpoint: string, options: RequestInit = {}): Promise<T> {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    });\n\n    if (!response.ok) {\n      throw new Error(`API error: ${response.status} ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Get PI20 data model fields with optional filtering\n   */\n  async getFields(filters: {\n    schema_layer?: string;\n    table_name?: string;\n    search?: string;\n  } = {}): Promise<DataModelField[]> {\n    const params = new URLSearchParams();\n    \n    if (filters.schema_layer) params.append('schema_layer', filters.schema_layer);\n    if (filters.table_name) params.append('table_name', filters.table_name);\n    if (filters.search) params.append('search', filters.search);\n    \n    const queryString = params.toString();\n    const endpoint = queryString ? `/fields?${queryString}` : '/fields';\n    \n    return this.request<DataModelField[]>(endpoint);\n  }\n\n  /**\n   * Get intelligent field suggestions for a source column\n   */\n  async suggestMapping(\n    sourceColumn: string,\n    fileGroup?: string\n  ): Promise<FieldSuggestion[]> {\n    const params = new URLSearchParams({ source_column: sourceColumn });\n    if (fileGroup) params.append('file_group', fileGroup);\n    \n    return this.request<FieldSuggestion[]>(`/suggest-mapping?${params.toString()}`);\n  }\n\n  /**\n   * Validate a crosswalk mapping against PI20 data model rules\n   */\n  async validateMapping(mappingData: any): Promise<ValidationResult> {\n    return this.request<ValidationResult>('/validate-mapping', {\n      method: 'POST',\n      body: JSON.stringify(mappingData),\n    });\n  }\n\n  /**\n   * Get available schema layers (RAW, CLEANSE, CURATED)\n   */\n  async getSchemaLayers(): Promise<string[]> {\n    return this.request<string[]>('/schema-layers');\n  }\n\n  /**\n   * Get available tables in the data model\n   */\n  async getTables(schemaLayer?: string): Promise<string[]> {\n    const params = schemaLayer ? `?schema_layer=${schemaLayer}` : '';\n    return this.request<string[]>(`/tables${params}`);\n  }\n\n  /**\n   * Get detailed information about a specific field\n   */\n  async getFieldInfo(columnName: string): Promise<FieldInfo[]> {\n    return this.request<FieldInfo[]>(`/field-info/${encodeURIComponent(columnName)}`);\n  }\n\n  /**\n   * Get MCDM column suggestions for autocomplete\n   */\n  async getMcdmColumns(search: string = ''): Promise<string[]> {\n    const fields = await this.getFields({ search });\n    return Array.from(new Set(fields.map(f => f.column_name))).sort();\n  }\n\n  /**\n   * Check if a field requires case sensitivity handling\n   */\n  async requiresCaseSensitivity(columnName: string): Promise<boolean> {\n    try {\n      const fieldInfo = await this.getFieldInfo(columnName);\n      return fieldInfo.some(field => field.is_case_sensitive);\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Get smart formatting suggestions for a column\n   */\n  async getFormattingSuggestions(\n    sourceColumn: string,\n    targetColumn: string\n  ): Promise<string[]> {\n    const suggestions: string[] = [];\n    \n    try {\n      const requiresCase = await this.requiresCaseSensitivity(targetColumn);\n      \n      if (requiresCase) {\n        suggestions.push(`UPPER(${sourceColumn})`);\n        suggestions.push(`LOWER(${sourceColumn})`);\n      }\n      \n      // Common transformation patterns\n      if (sourceColumn.toLowerCase().includes('date')) {\n        suggestions.push(`TO_DATE(${sourceColumn}, 'YYYY-MM-DD')`);\n        suggestions.push(`${sourceColumn}::DATE`);\n      }\n      \n      if (sourceColumn.toLowerCase().includes('amount') || \n          sourceColumn.toLowerCase().includes('cost')) {\n        suggestions.push(`${sourceColumn}::DECIMAL(10,2)`);\n        suggestions.push(`ROUND(${sourceColumn}, 2)`);\n      }\n      \n      if (targetColumn.toLowerCase().includes('sid')) {\n        suggestions.push(`${sourceColumn}::BIGINT`);\n      }\n      \n    } catch (error) {\n      console.error('Error getting formatting suggestions:', error);\n    }\n    \n    return suggestions;\n  }\n\n  /**\n   * Validate IN_MODEL rules\n   */\n  getInModelValidation(inModel: string, mcdmColumn: string): {\n    isValid: boolean;\n    message?: string;\n    suggestions: string[];\n  } {\n    const suggestions: string[] = [];\n    \n    if (inModel === 'Y' && !mcdmColumn.trim()) {\n      return {\n        isValid: false,\n        message: 'Fields with IN_MODEL=Y must have an MCDM column name',\n        suggestions: ['Select a target column from the PI20 data model']\n      };\n    }\n    \n    if (inModel === 'N') {\n      suggestions.push('Custom field - will only appear in CLEANSE schema');\n    }\n    \n    if (inModel === 'U') {\n      suggestions.push('Under review - field mapping needs validation');\n    }\n    \n    if (inModel === 'N/A') {\n      suggestions.push('Field will be skipped in processing');\n    }\n    \n    return {\n      isValid: true,\n      suggestions\n    };\n  }\n}\n\n// Export singleton instance\nexport const dataModelApi = new DataModelApiService();","size_bytes":6042},"frontend/dist/assets/index-DRfliOkU.js":{"content":"import{r as av,a as Nx,g as Hx}from\"./vendor-BZXSkU7I.js\";import{r as be,R as _x}from\"./table-CqpQgs4o.js\";(function(){const E=document.createElement(\"link\").relList;if(E&&E.supports&&E.supports(\"modulepreload\"))return;for(const N of document.querySelectorAll('link[rel=\"modulepreload\"]'))T(N);new MutationObserver(N=>{for(const D of N)if(D.type===\"childList\")for(const J of D.addedNodes)J.tagName===\"LINK\"&&J.rel===\"modulepreload\"&&T(J)}).observe(document,{childList:!0,subtree:!0});function M(N){const D={};return N.integrity&&(D.integrity=N.integrity),N.referrerPolicy&&(D.referrerPolicy=N.referrerPolicy),N.crossOrigin===\"use-credentials\"?D.credentials=\"include\":N.crossOrigin===\"anonymous\"?D.credentials=\"omit\":D.credentials=\"same-origin\",D}function T(N){if(N.ep)return;N.ep=!0;const D=M(N);fetch(N.href,D)}})();var Cd={exports:{}},Fo={},F0;function Lx(){if(F0)return Fo;F0=1;/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */return(function(){function L(x){if(x==null)return null;if(typeof x==\"function\")return x.$$typeof===k?null:x.displayName||x.name||null;if(typeof x==\"string\")return x;switch(x){case gt:return\"Fragment\";case ue:return\"Profiler\";case me:return\"StrictMode\";case nn:return\"Suspense\";case ot:return\"SuspenseList\";case C:return\"Activity\"}if(typeof x==\"object\")switch(typeof x.tag==\"number\"&&console.error(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),x.$$typeof){case Le:return\"Portal\";case We:return(x.displayName||\"Context\")+\".Provider\";case Me:return(x._context.displayName||\"Context\")+\".Consumer\";case tn:var B=x.render;return x=x.displayName,x||(x=B.displayName||B.name||\"\",x=x!==\"\"?\"ForwardRef(\"+x+\")\":\"ForwardRef\"),x;case ce:return B=x.displayName||null,B!==null?B:L(x.type)||\"Memo\";case Ct:B=x._payload,x=x._init;try{return L(x(B))}catch{}}return null}function E(x){return\"\"+x}function M(x){try{E(x);var B=!1}catch{B=!0}if(B){B=console;var _=B.error,Re=typeof Symbol==\"function\"&&Symbol.toStringTag&&x[Symbol.toStringTag]||x.constructor.name||\"Object\";return _.call(B,\"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",Re),E(x)}}function T(x){if(x===gt)return\"<>\";if(typeof x==\"object\"&&x!==null&&x.$$typeof===Ct)return\"<...>\";try{var B=L(x);return B?\"<\"+B+\">\":\"<...>\"}catch{return\"<...>\"}}function N(){var x=oe.A;return x===null?null:x.getOwner()}function D(){return Error(\"react-stack-top-frame\")}function J(x){if(P.call(x,\"key\")){var B=Object.getOwnPropertyDescriptor(x,\"key\").get;if(B&&B.isReactWarning)return!1}return x.key!==void 0}function De(x,B){function _(){ln||(ln=!0,console.error(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",B))}_.isReactWarning=!0,Object.defineProperty(x,\"key\",{get:_,configurable:!0})}function O(){var x=L(this.type);return w[x]||(w[x]=!0,console.error(\"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\")),x=this.props.ref,x!==void 0?x:null}function F(x,B,_,Re,ze,Ie,pe,Eu){return _=Ie.ref,x={$$typeof:le,type:x,key:B,props:Ie,_owner:ze},(_!==void 0?_:null)!==null?Object.defineProperty(x,\"ref\",{enumerable:!1,get:O}):Object.defineProperty(x,\"ref\",{enumerable:!1,value:null}),x._store={},Object.defineProperty(x._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:0}),Object.defineProperty(x,\"_debugInfo\",{configurable:!1,enumerable:!1,writable:!0,value:null}),Object.defineProperty(x,\"_debugStack\",{configurable:!1,enumerable:!1,writable:!0,value:pe}),Object.defineProperty(x,\"_debugTask\",{configurable:!1,enumerable:!1,writable:!0,value:Eu}),Object.freeze&&(Object.freeze(x.props),Object.freeze(x)),x}function Ke(x,B,_,Re,ze,Ie,pe,Eu){var Ve=B.children;if(Ve!==void 0)if(Re)if(Fe(Ve)){for(Re=0;Re<Ve.length;Re++)_e(Ve[Re]);Object.freeze&&Object.freeze(Ve)}else console.error(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else _e(Ve);if(P.call(B,\"key\")){Ve=L(x);var Lt=Object.keys(B).filter(function(Po){return Po!==\"key\"});Re=0<Lt.length?\"{key: someKey, \"+Lt.join(\": ..., \")+\": ...}\":\"{key: someKey}\",de[Ve+Re]||(Lt=0<Lt.length?\"{\"+Lt.join(\": ..., \")+\": ...}\":\"{}\",console.error(`A props object containing a \"key\" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />`,Re,Ve,Lt,Ve),de[Ve+Re]=!0)}if(Ve=null,_!==void 0&&(M(_),Ve=\"\"+_),J(B)&&(M(B.key),Ve=\"\"+B.key),\"key\"in B){_={};for(var mn in B)mn!==\"key\"&&(_[mn]=B[mn])}else _=B;return Ve&&De(_,typeof x==\"function\"?x.displayName||x.name||\"Unknown\":x),F(x,Ve,Ie,ze,N(),_,pe,Eu)}function _e(x){typeof x==\"object\"&&x!==null&&x.$$typeof===le&&x._store&&(x._store.validated=1)}var G=av(),le=Symbol.for(\"react.transitional.element\"),Le=Symbol.for(\"react.portal\"),gt=Symbol.for(\"react.fragment\"),me=Symbol.for(\"react.strict_mode\"),ue=Symbol.for(\"react.profiler\"),Me=Symbol.for(\"react.consumer\"),We=Symbol.for(\"react.context\"),tn=Symbol.for(\"react.forward_ref\"),nn=Symbol.for(\"react.suspense\"),ot=Symbol.for(\"react.suspense_list\"),ce=Symbol.for(\"react.memo\"),Ct=Symbol.for(\"react.lazy\"),C=Symbol.for(\"react.activity\"),k=Symbol.for(\"react.client.reference\"),oe=G.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,P=Object.prototype.hasOwnProperty,Fe=Array.isArray,an=console.createTask?console.createTask:function(){return null};G={react_stack_bottom_frame:function(x){return x()}};var ln,w={},X=G.react_stack_bottom_frame.bind(G,D)(),Y=an(T(D)),de={};Fo.Fragment=gt,Fo.jsx=function(x,B,_,Re,ze){var Ie=1e4>oe.recentlyCreatedOwnerStacks++;return Ke(x,B,_,!1,Re,ze,Ie?Error(\"react-stack-top-frame\"):X,Ie?an(T(x)):Y)},Fo.jsxs=function(x,B,_,Re,ze){var Ie=1e4>oe.recentlyCreatedOwnerStacks++;return Ke(x,B,_,!0,Re,ze,Ie?Error(\"react-stack-top-frame\"):X,Ie?an(T(x)):Y)}})(),Fo}var I0;function Bx(){return I0||(I0=1,Cd.exports=Lx()),Cd.exports}var r=Bx(),Dd={exports:{}},Io={},wd={exports:{}},Od={},P0;function qx(){return P0||(P0=1,(function(L){/**\n * @license React\n * scheduler.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */(function(){function E(){if(nn=!1,C){var w=L.unstable_now();P=w;var X=!0;try{e:{We=!1,tn&&(tn=!1,ce(k),k=-1),Me=!0;var Y=ue;try{t:{for(J(w),me=T(le);me!==null&&!(me.expirationTime>w&&O());){var de=me.callback;if(typeof de==\"function\"){me.callback=null,ue=me.priorityLevel;var x=de(me.expirationTime<=w);if(w=L.unstable_now(),typeof x==\"function\"){me.callback=x,J(w),X=!0;break t}me===T(le)&&N(le),J(w)}else N(le);me=T(le)}if(me!==null)X=!0;else{var B=T(Le);B!==null&&F(De,B.startTime-w),X=!1}}break e}finally{me=null,ue=Y,Me=!1}X=void 0}}finally{X?Fe():C=!1}}}function M(w,X){var Y=w.length;w.push(X);e:for(;0<Y;){var de=Y-1>>>1,x=w[de];if(0<D(x,X))w[de]=X,w[Y]=x,Y=de;else break e}}function T(w){return w.length===0?null:w[0]}function N(w){if(w.length===0)return null;var X=w[0],Y=w.pop();if(Y!==X){w[0]=Y;e:for(var de=0,x=w.length,B=x>>>1;de<B;){var _=2*(de+1)-1,Re=w[_],ze=_+1,Ie=w[ze];if(0>D(Re,Y))ze<x&&0>D(Ie,Re)?(w[de]=Ie,w[ze]=Y,de=ze):(w[de]=Re,w[_]=Y,de=_);else if(ze<x&&0>D(Ie,Y))w[de]=Ie,w[ze]=Y,de=ze;else break e}}return X}function D(w,X){var Y=w.sortIndex-X.sortIndex;return Y!==0?Y:w.id-X.id}function J(w){for(var X=T(Le);X!==null;){if(X.callback===null)N(Le);else if(X.startTime<=w)N(Le),X.sortIndex=X.expirationTime,M(le,X);else break;X=T(Le)}}function De(w){if(tn=!1,J(w),!We)if(T(le)!==null)We=!0,C||(C=!0,Fe());else{var X=T(Le);X!==null&&F(De,X.startTime-w)}}function O(){return nn?!0:!(L.unstable_now()-P<oe)}function F(w,X){k=ot(function(){w(L.unstable_now())},X)}if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<\"u\"&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart==\"function\"&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error()),L.unstable_now=void 0,typeof performance==\"object\"&&typeof performance.now==\"function\"){var Ke=performance;L.unstable_now=function(){return Ke.now()}}else{var _e=Date,G=_e.now();L.unstable_now=function(){return _e.now()-G}}var le=[],Le=[],gt=1,me=null,ue=3,Me=!1,We=!1,tn=!1,nn=!1,ot=typeof setTimeout==\"function\"?setTimeout:null,ce=typeof clearTimeout==\"function\"?clearTimeout:null,Ct=typeof setImmediate<\"u\"?setImmediate:null,C=!1,k=-1,oe=5,P=-1;if(typeof Ct==\"function\")var Fe=function(){Ct(E)};else if(typeof MessageChannel<\"u\"){var an=new MessageChannel,ln=an.port2;an.port1.onmessage=E,Fe=function(){ln.postMessage(null)}}else Fe=function(){ot(E,0)};L.unstable_IdlePriority=5,L.unstable_ImmediatePriority=1,L.unstable_LowPriority=4,L.unstable_NormalPriority=3,L.unstable_Profiling=null,L.unstable_UserBlockingPriority=2,L.unstable_cancelCallback=function(w){w.callback=null},L.unstable_forceFrameRate=function(w){0>w||125<w?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):oe=0<w?Math.floor(1e3/w):5},L.unstable_getCurrentPriorityLevel=function(){return ue},L.unstable_next=function(w){switch(ue){case 1:case 2:case 3:var X=3;break;default:X=ue}var Y=ue;ue=X;try{return w()}finally{ue=Y}},L.unstable_requestPaint=function(){nn=!0},L.unstable_runWithPriority=function(w,X){switch(w){case 1:case 2:case 3:case 4:case 5:break;default:w=3}var Y=ue;ue=w;try{return X()}finally{ue=Y}},L.unstable_scheduleCallback=function(w,X,Y){var de=L.unstable_now();switch(typeof Y==\"object\"&&Y!==null?(Y=Y.delay,Y=typeof Y==\"number\"&&0<Y?de+Y:de):Y=de,w){case 1:var x=-1;break;case 2:x=250;break;case 5:x=1073741823;break;case 4:x=1e4;break;default:x=5e3}return x=Y+x,w={id:gt++,callback:X,priorityLevel:w,startTime:Y,expirationTime:x,sortIndex:-1},Y>de?(w.sortIndex=Y,M(Le,w),T(le)===null&&w===T(Le)&&(tn?(ce(k),k=-1):tn=!0,F(De,Y-de))):(w.sortIndex=x,M(le,w),We||Me||(We=!0,C||(C=!0,Fe()))),w},L.unstable_shouldYield=O,L.unstable_wrapCallback=function(w){var X=ue;return function(){var Y=ue;ue=X;try{return w.apply(this,arguments)}finally{ue=Y}}},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<\"u\"&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop==\"function\"&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error())})()})(Od)),Od}var ev;function Yx(){return ev||(ev=1,wd.exports=qx()),wd.exports}var tv;function Vx(){if(tv)return Io;tv=1;/**\n * @license React\n * react-dom-client.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */return(function(){function L(e,t){for(e=e.memoizedState;e!==null&&0<t;)e=e.next,t--;return e}function E(e,t,n,a){if(n>=t.length)return a;var l=t[n],u=nt(e)?e.slice():W({},e);return u[l]=E(e[l],t,n+1,a),u}function M(e,t,n){if(t.length!==n.length)console.warn(\"copyWithRename() expects paths of the same length\");else{for(var a=0;a<n.length-1;a++)if(t[a]!==n[a]){console.warn(\"copyWithRename() expects paths to be the same except for the deepest key\");return}return T(e,t,n,0)}}function T(e,t,n,a){var l=t[a],u=nt(e)?e.slice():W({},e);return a+1===t.length?(u[n[a]]=u[l],nt(u)?u.splice(l,1):delete u[l]):u[l]=T(e[l],t,n,a+1),u}function N(e,t,n){var a=t[n],l=nt(e)?e.slice():W({},e);return n+1===t.length?(nt(l)?l.splice(a,1):delete l[a],l):(l[a]=N(e[a],t,n+1),l)}function D(){return!1}function J(){return null}function De(){}function O(){console.error(\"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://react.dev/link/rules-of-hooks\")}function F(){console.error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\")}function Ke(){}function _e(e){var t=[];return e.forEach(function(n){t.push(n)}),t.sort().join(\", \")}function G(e,t,n,a){return new Uv(e,t,n,a)}function le(e,t){e.context===va&&(Fr(e.current,2,t,e,null,null),Ul())}function Le(e,t){if(Qt!==null){var n=t.staleFamilies;t=t.updatedFamilies,Pu(),ys(e.current,t,n),Ul()}}function gt(e){Qt=e}function me(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,(t.flags&4098)!==0&&(n=t.return),e=t.return;while(e)}return t.tag===3?n:null}function Me(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function We(e){if(ue(e)!==e)throw Error(\"Unable to find node on an unmounted component.\")}function tn(e){var t=e.alternate;if(!t){if(t=ue(e),t===null)throw Error(\"Unable to find node on an unmounted component.\");return t!==e?null:e}for(var n=e,a=t;;){var l=n.return;if(l===null)break;var u=l.alternate;if(u===null){if(a=l.return,a!==null){n=a;continue}break}if(l.child===u.child){for(u=l.child;u;){if(u===n)return We(l),e;if(u===a)return We(l),t;u=u.sibling}throw Error(\"Unable to find node on an unmounted component.\")}if(n.return!==a.return)n=l,a=u;else{for(var o=!1,i=l.child;i;){if(i===n){o=!0,n=l,a=u;break}if(i===a){o=!0,a=l,n=u;break}i=i.sibling}if(!o){for(i=u.child;i;){if(i===n){o=!0,n=u,a=l;break}if(i===a){o=!0,a=u,n=l;break}i=i.sibling}if(!o)throw Error(\"Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.\")}}if(n.alternate!==a)throw Error(\"Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.\")}if(n.tag!==3)throw Error(\"Unable to find node on an unmounted component.\");return n.stateNode.current===n?e:t}function nn(e){var t=e.tag;if(t===5||t===26||t===27||t===6)return e;for(e=e.child;e!==null;){if(t=nn(e),t!==null)return t;e=e.sibling}return null}function ot(e){return e===null||typeof e!=\"object\"?null:(e=by&&e[by]||e[\"@@iterator\"],typeof e==\"function\"?e:null)}function ce(e){if(e==null)return null;if(typeof e==\"function\")return e.$$typeof===Jb?null:e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case ql:return\"Fragment\";case lf:return\"Profiler\";case ac:return\"StrictMode\";case of:return\"Suspense\";case cf:return\"SuspenseList\";case sf:return\"Activity\"}if(typeof e==\"object\")switch(typeof e.tag==\"number\"&&console.error(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),e.$$typeof){case Bl:return\"Portal\";case Tn:return(e.displayName||\"Context\")+\".Provider\";case uf:return(e._context.displayName||\"Context\")+\".Consumer\";case co:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||\"\",e=e!==\"\"?\"ForwardRef(\"+e+\")\":\"ForwardRef\"),e;case lc:return t=e.displayName||null,t!==null?t:ce(e.type)||\"Memo\";case Ut:t=e._payload,e=e._init;try{return ce(e(t))}catch{}}return null}function Ct(e){return typeof e.tag==\"number\"?C(e):typeof e.name==\"string\"?e.name:null}function C(e){var t=e.type;switch(e.tag){case 31:return\"Activity\";case 24:return\"Cache\";case 9:return(t._context.displayName||\"Context\")+\".Consumer\";case 10:return(t.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return e=t.render,e=e.displayName||e.name||\"\",t.displayName||(e!==\"\"?\"ForwardRef(\"+e+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 26:case 27:case 5:return t;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return ce(t);case 8:return t===ac?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";case 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 14:case 15:if(typeof t==\"function\")return t.displayName||t.name||null;if(typeof t==\"string\")return t;break;case 29:if(t=e._debugInfo,t!=null){for(var n=t.length-1;0<=n;n--)if(typeof t[n].name==\"string\")return t[n].name}if(e.return!==null)return C(e.return)}return null}function k(e){return{current:e}}function oe(e,t){0>Gn?console.error(\"Unexpected pop.\"):(t!==ff[Gn]&&console.error(\"Unexpected Fiber popped.\"),e.current=rf[Gn],rf[Gn]=null,ff[Gn]=null,Gn--)}function P(e,t,n){Gn++,rf[Gn]=e.current,ff[Gn]=n,e.current=t}function Fe(e){return e===null&&console.error(\"Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.\"),e}function an(e,t){P(ma,t,e),P(so,e,e),P(ha,null,e);var n=t.nodeType;switch(n){case 9:case 11:n=n===9?\"#document\":\"#fragment\",t=(t=t.documentElement)&&(t=t.namespaceURI)?$p(t):ea;break;default:if(n=t.tagName,t=t.namespaceURI)t=$p(t),t=Jp(t,n);else switch(n){case\"svg\":t=Su;break;case\"math\":t=Xc;break;default:t=ea}}n=n.toLowerCase(),n=ah(null,n),n={context:t,ancestorInfo:n},oe(ha,e),P(ha,n,e)}function ln(e){oe(ha,e),oe(so,e),oe(ma,e)}function w(){return Fe(ha.current)}function X(e){e.memoizedState!==null&&P(uc,e,e);var t=Fe(ha.current),n=e.type,a=Jp(t.context,n);n=ah(t.ancestorInfo,n),a={context:a,ancestorInfo:n},t!==a&&(P(so,e,e),P(ha,a,e))}function Y(e){so.current===e&&(oe(ha,e),oe(so,e)),uc.current===e&&(oe(uc,e),Jo._currentValue=gl)}function de(e){return typeof Symbol==\"function\"&&Symbol.toStringTag&&e[Symbol.toStringTag]||e.constructor.name||\"Object\"}function x(e){try{return B(e),!1}catch{return!0}}function B(e){return\"\"+e}function _(e,t){if(x(e))return console.error(\"The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before using it here.\",t,de(e)),B(e)}function Re(e,t){if(x(e))return console.error(\"The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before using it here.\",t,de(e)),B(e)}function ze(e){if(x(e))return console.error(\"Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before using it here.\",de(e)),B(e)}function Ie(e){if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>\"u\")return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled)return!0;if(!t.supportsFiber)return console.error(\"The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://react.dev/link/react-devtools\"),!0;try{Vl=t.inject(e),it=t}catch(n){console.error(\"React instrumentation encountered an error: %s.\",n)}return!!t.checkDCE}function pe(e){if(typeof tS==\"function\"&&nS(e),it&&typeof it.setStrictMode==\"function\")try{it.setStrictMode(Vl,e)}catch(t){Rn||(Rn=!0,console.error(\"React instrumentation encountered an error: %s\",t))}}function Eu(e){z=e}function Ve(){z!==null&&typeof z.markCommitStopped==\"function\"&&z.markCommitStopped()}function Lt(e){z!==null&&typeof z.markComponentRenderStarted==\"function\"&&z.markComponentRenderStarted(e)}function mn(){z!==null&&typeof z.markComponentRenderStopped==\"function\"&&z.markComponentRenderStopped()}function Po(e){z!==null&&typeof z.markRenderStarted==\"function\"&&z.markRenderStarted(e)}function Md(){z!==null&&typeof z.markRenderStopped==\"function\"&&z.markRenderStopped()}function Ru(e,t){z!==null&&typeof z.markStateUpdateScheduled==\"function\"&&z.markStateUpdateScheduled(e,t)}function lv(e){return e>>>=0,e===0?32:31-(aS(e)/lS|0)|0}function uv(e){if(e&1)return\"SyncHydrationLane\";if(e&2)return\"Sync\";if(e&4)return\"InputContinuousHydration\";if(e&8)return\"InputContinuous\";if(e&16)return\"DefaultHydration\";if(e&32)return\"Default\";if(e&128)return\"TransitionHydration\";if(e&4194048)return\"Transition\";if(e&62914560)return\"Retry\";if(e&67108864)return\"SelectiveHydration\";if(e&134217728)return\"IdleHydration\";if(e&268435456)return\"Idle\";if(e&536870912)return\"Offscreen\";if(e&1073741824)return\"Deferred\"}function ja(e){var t=e&42;if(t!==0)return t;switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:return 128;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194048;case 4194304:case 8388608:case 16777216:case 33554432:return e&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return console.error(\"Should have found matching lanes. This is a bug in React.\"),e}}function ei(e,t,n){var a=e.pendingLanes;if(a===0)return 0;var l=0,u=e.suspendedLanes,o=e.pingedLanes;e=e.warmLanes;var i=a&134217727;return i!==0?(a=i&~u,a!==0?l=ja(a):(o&=i,o!==0?l=ja(o):n||(n=i&~e,n!==0&&(l=ja(n))))):(i=a&~u,i!==0?l=ja(i):o!==0?l=ja(o):n||(n=a&~e,n!==0&&(l=ja(n)))),l===0?0:t!==0&&t!==l&&(t&u)===0&&(u=l&-l,n=t&-t,u>=n||u===32&&(n&4194048)!==0)?t:l}function Au(e,t){return(e.pendingLanes&~(e.suspendedLanes&~e.pingedLanes)&t)===0}function ov(e,t){switch(e){case 1:case 2:case 4:case 8:case 64:return t+250;case 16:case 32:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return console.error(\"Should have found matching lanes. This is a bug in React.\"),-1}}function zd(){var e=oc;return oc<<=1,(oc&4194048)===0&&(oc=256),e}function Ud(){var e=ic;return ic<<=1,(ic&62914560)===0&&(ic=4194304),e}function Fc(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Cu(e,t){e.pendingLanes|=t,t!==268435456&&(e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0)}function iv(e,t,n,a,l,u){var o=e.pendingLanes;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0,e.expiredLanes&=n,e.entangledLanes&=n,e.errorRecoveryDisabledLanes&=n,e.shellSuspendCounter=0;var i=e.entanglements,c=e.expirationTimes,s=e.hiddenUpdates;for(n=o&~n;0<n;){var p=31-rt(n),v=1<<p;i[p]=0,c[p]=-1;var m=s[p];if(m!==null)for(s[p]=null,p=0;p<m.length;p++){var b=m[p];b!==null&&(b.lane&=-536870913)}n&=~v}a!==0&&jd(e,a,0),u!==0&&l===0&&e.tag!==0&&(e.suspendedLanes|=u&~(o&~t))}function jd(e,t,n){e.pendingLanes|=t,e.suspendedLanes&=~t;var a=31-rt(t);e.entangledLanes|=t,e.entanglements[a]=e.entanglements[a]|1073741824|n&4194090}function Nd(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-rt(n),l=1<<a;l&t|e[a]&t&&(e[a]|=t),n&=~l}}function Ic(e){switch(e){case 2:e=1;break;case 8:e=4;break;case 32:e=16;break;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:e=128;break;case 268435456:e=134217728;break;default:e=0}return e}function Hd(e,t,n){if(cn)for(e=e.pendingUpdatersLaneMap;0<n;){var a=31-rt(n),l=1<<a;e[a].add(t),n&=~l}}function _d(e,t){if(cn)for(var n=e.pendingUpdatersLaneMap,a=e.memoizedUpdaters;0<t;){var l=31-rt(t);e=1<<l,l=n[l],0<l.size&&(l.forEach(function(u){var o=u.alternate;o!==null&&a.has(o)||a.add(u)}),l.clear()),t&=~e}}function Pc(e){return e&=-e,kt<e?An<e?(e&134217727)!==0?Xn:cc:An:kt}function Ld(){var e=se.p;return e!==0?e:(e=window.event,e===void 0?Xn:hy(e.type))}function cv(e,t){var n=se.p;try{return se.p=e,t()}finally{se.p=n}}function es(e){delete e[ct],delete e[Tt],delete e[yf],delete e[uS],delete e[oS]}function vl(e){var t=e[ct];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ya]||n[ct]){if(n=t.alternate,t.child!==null||n!==null&&n.child!==null)for(e=ey(e);e!==null;){if(n=e[ct])return n;e=ey(e)}return t}e=n,n=e.parentNode}return null}function Na(e){if(e=e[ct]||e[ya]){var t=e.tag;if(t===5||t===6||t===13||t===26||t===27||t===3)return e}return null}function Du(e){var t=e.tag;if(t===5||t===26||t===27||t===6)return e.stateNode;throw Error(\"getNodeFromInstance: Invalid argument.\")}function bl(e){var t=e[Sy];return t||(t=e[Sy]={hoistableStyles:new Map,hoistableScripts:new Map}),t}function Qe(e){e[ro]=!0}function Ha(e,t){Sl(e,t),Sl(e+\"Capture\",t)}function Sl(e,t){Ia[e]&&console.error(\"EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.\",e),Ia[e]=t;var n=e.toLowerCase();for(gf[n]=e,e===\"onDoubleClick\"&&(gf.ondblclick=e),e=0;e<t.length;e++)xy.add(t[e])}function xl(e,t){iS[t.type]||t.onChange||t.onInput||t.readOnly||t.disabled||t.value==null||console.error(e===\"select\"?\"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set `onChange`.\":\"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\"),t.onChange||t.readOnly||t.disabled||t.checked==null||console.error(\"You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.\")}function ts(e){return kn.call(Ey,e)?!0:kn.call(Ty,e)?!1:cS.test(e)?Ey[e]=!0:(Ty[e]=!0,console.error(\"Invalid attribute name: `%s`\",e),!1)}function Bd(e,t,n){if(ts(t)){if(!e.hasAttribute(t)){switch(typeof n){case\"symbol\":case\"object\":return n;case\"function\":return n;case\"boolean\":if(n===!1)return n}return n===void 0?void 0:null}return e=e.getAttribute(t),e===\"\"&&n===!0?!0:(_(n,t),e===\"\"+n?n:e)}}function ti(e,t,n){if(ts(t))if(n===null)e.removeAttribute(t);else{switch(typeof n){case\"undefined\":case\"function\":case\"symbol\":e.removeAttribute(t);return;case\"boolean\":var a=t.toLowerCase().slice(0,5);if(a!==\"data-\"&&a!==\"aria-\"){e.removeAttribute(t);return}}_(n,t),e.setAttribute(t,\"\"+n)}}function ni(e,t,n){if(n===null)e.removeAttribute(t);else{switch(typeof n){case\"undefined\":case\"function\":case\"symbol\":case\"boolean\":e.removeAttribute(t);return}_(n,t),e.setAttribute(t,\"\"+n)}}function Un(e,t,n,a){if(a===null)e.removeAttribute(n);else{switch(typeof a){case\"undefined\":case\"function\":case\"symbol\":case\"boolean\":e.removeAttribute(n);return}_(a,n),e.setAttributeNS(t,n,\"\"+a)}}function qd(){}function sv(){if(fo===0){Ry=console.log,Ay=console.info,Cy=console.warn,Dy=console.error,wy=console.group,Oy=console.groupCollapsed,My=console.groupEnd;var e={configurable:!0,enumerable:!0,value:qd,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}fo++}function rv(){if(fo--,fo===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:W({},e,{value:Ry}),info:W({},e,{value:Ay}),warn:W({},e,{value:Cy}),error:W({},e,{value:Dy}),group:W({},e,{value:wy}),groupCollapsed:W({},e,{value:Oy}),groupEnd:W({},e,{value:My})})}0>fo&&console.error(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}function Bt(e){if(vf===void 0)try{throw Error()}catch(n){var t=n.stack.trim().match(/\\n( *(at )?)/);vf=t&&t[1]||\"\",zy=-1<n.stack.indexOf(`\n    at`)?\" (<anonymous>)\":-1<n.stack.indexOf(\"@\")?\"@unknown:0:0\":\"\"}return`\n`+vf+e+zy}function ns(e,t){if(!e||bf)return\"\";var n=Sf.get(e);if(n!==void 0)return n;bf=!0,n=Error.prepareStackTrace,Error.prepareStackTrace=void 0;var a=null;a=g.H,g.H=null,sv();try{var l={DetermineComponentFrameRoot:function(){try{if(t){var m=function(){throw Error()};if(Object.defineProperty(m.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(m,[])}catch(U){var b=U}Reflect.construct(e,[],m)}else{try{m.call()}catch(U){b=U}e.call(m.prototype)}}else{try{throw Error()}catch(U){b=U}(m=e())&&typeof m.catch==\"function\"&&m.catch(function(){})}}catch(U){if(U&&b&&typeof U.stack==\"string\")return[U.stack,b.stack]}return[null,null]}};l.DetermineComponentFrameRoot.displayName=\"DetermineComponentFrameRoot\";var u=Object.getOwnPropertyDescriptor(l.DetermineComponentFrameRoot,\"name\");u&&u.configurable&&Object.defineProperty(l.DetermineComponentFrameRoot,\"name\",{value:\"DetermineComponentFrameRoot\"});var o=l.DetermineComponentFrameRoot(),i=o[0],c=o[1];if(i&&c){var s=i.split(`\n`),p=c.split(`\n`);for(o=u=0;u<s.length&&!s[u].includes(\"DetermineComponentFrameRoot\");)u++;for(;o<p.length&&!p[o].includes(\"DetermineComponentFrameRoot\");)o++;if(u===s.length||o===p.length)for(u=s.length-1,o=p.length-1;1<=u&&0<=o&&s[u]!==p[o];)o--;for(;1<=u&&0<=o;u--,o--)if(s[u]!==p[o]){if(u!==1||o!==1)do if(u--,o--,0>o||s[u]!==p[o]){var v=`\n`+s[u].replace(\" at new \",\" at \");return e.displayName&&v.includes(\"<anonymous>\")&&(v=v.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&Sf.set(e,v),v}while(1<=u&&0<=o);break}}}finally{bf=!1,g.H=a,rv(),Error.prepareStackTrace=n}return s=(s=e?e.displayName||e.name:\"\")?Bt(s):\"\",typeof e==\"function\"&&Sf.set(e,s),s}function Yd(e){var t=Error.prepareStackTrace;if(Error.prepareStackTrace=void 0,e=e.stack,Error.prepareStackTrace=t,e.startsWith(`Error: react-stack-top-frame\n`)&&(e=e.slice(29)),t=e.indexOf(`\n`),t!==-1&&(e=e.slice(t+1)),t=e.indexOf(\"react_stack_bottom_frame\"),t!==-1&&(t=e.lastIndexOf(`\n`,t)),t!==-1)e=e.slice(0,t);else return\"\";return e}function fv(e){switch(e.tag){case 26:case 27:case 5:return Bt(e.type);case 16:return Bt(\"Lazy\");case 13:return Bt(\"Suspense\");case 19:return Bt(\"SuspenseList\");case 0:case 15:return ns(e.type,!1);case 11:return ns(e.type.render,!1);case 1:return ns(e.type,!0);case 31:return Bt(\"Activity\");default:return\"\"}}function Vd(e){try{var t=\"\";do{t+=fv(e);var n=e._debugInfo;if(n)for(var a=n.length-1;0<=a;a--){var l=n[a];if(typeof l.name==\"string\"){var u=t,o=l.env,i=Bt(l.name+(o?\" [\"+o+\"]\":\"\"));t=u+i}}e=e.return}while(e);return t}catch(c){return`\nError generating stack: `+c.message+`\n`+c.stack}}function Gd(e){return(e=e?e.displayName||e.name:\"\")?Bt(e):\"\"}function ai(){if(jt===null)return null;var e=jt._debugOwner;return e!=null?Ct(e):null}function dv(){if(jt===null)return\"\";var e=jt;try{var t=\"\";switch(e.tag===6&&(e=e.return),e.tag){case 26:case 27:case 5:t+=Bt(e.type);break;case 13:t+=Bt(\"Suspense\");break;case 19:t+=Bt(\"SuspenseList\");break;case 31:t+=Bt(\"Activity\");break;case 30:case 0:case 15:case 1:e._debugOwner||t!==\"\"||(t+=Gd(e.type));break;case 11:e._debugOwner||t!==\"\"||(t+=Gd(e.type.render))}for(;e;)if(typeof e.tag==\"number\"){var n=e;e=n._debugOwner;var a=n._debugStack;e&&a&&(typeof a!=\"string\"&&(n._debugStack=a=Yd(a)),a!==\"\"&&(t+=`\n`+a))}else if(e.debugStack!=null){var l=e.debugStack;(e=e.owner)&&l&&(t+=`\n`+Yd(l))}else break;var u=t}catch(o){u=`\nError generating stack: `+o.message+`\n`+o.stack}return u}function H(e,t,n,a,l,u,o){var i=jt;as(e);try{return e!==null&&e._debugTask?e._debugTask.run(t.bind(null,n,a,l,u,o)):t(n,a,l,u,o)}finally{as(i)}throw Error(\"runWithFiberInDEV should never be called in production. This is a bug in React.\")}function as(e){g.getCurrentStack=e===null?null:dv,Cn=!1,jt=e}function qt(e){switch(typeof e){case\"bigint\":case\"boolean\":case\"number\":case\"string\":case\"undefined\":return e;case\"object\":return ze(e),e;default:return\"\"}}function kd(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()===\"input\"&&(t===\"checkbox\"||t===\"radio\")}function hv(e){var t=kd(e)?\"checked\":\"value\",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t);ze(e[t]);var a=\"\"+e[t];if(!e.hasOwnProperty(t)&&typeof n<\"u\"&&typeof n.get==\"function\"&&typeof n.set==\"function\"){var l=n.get,u=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return l.call(this)},set:function(o){ze(o),a=\"\"+o,u.call(this,o)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(o){ze(o),a=\"\"+o},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function li(e){e._valueTracker||(e._valueTracker=hv(e))}function Xd(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a=\"\";return e&&(a=kd(e)?e.checked?\"true\":\"false\":e.value),e=a,e!==n?(t.setValue(e),!0):!1}function ui(e){if(e=e||(typeof document<\"u\"?document:void 0),typeof e>\"u\")return null;try{return e.activeElement||e.body}catch{return e.body}}function Yt(e){return e.replace(sS,function(t){return\"\\\\\"+t.charCodeAt(0).toString(16)+\" \"})}function Qd(e,t){t.checked===void 0||t.defaultChecked===void 0||jy||(console.error(\"%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components\",ai()||\"A component\",t.type),jy=!0),t.value===void 0||t.defaultValue===void 0||Uy||(console.error(\"%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components\",ai()||\"A component\",t.type),Uy=!0)}function ls(e,t,n,a,l,u,o,i){e.name=\"\",o!=null&&typeof o!=\"function\"&&typeof o!=\"symbol\"&&typeof o!=\"boolean\"?(_(o,\"type\"),e.type=o):e.removeAttribute(\"type\"),t!=null?o===\"number\"?(t===0&&e.value===\"\"||e.value!=t)&&(e.value=\"\"+qt(t)):e.value!==\"\"+qt(t)&&(e.value=\"\"+qt(t)):o!==\"submit\"&&o!==\"reset\"||e.removeAttribute(\"value\"),t!=null?us(e,o,qt(t)):n!=null?us(e,o,qt(n)):a!=null&&e.removeAttribute(\"value\"),l==null&&u!=null&&(e.defaultChecked=!!u),l!=null&&(e.checked=l&&typeof l!=\"function\"&&typeof l!=\"symbol\"),i!=null&&typeof i!=\"function\"&&typeof i!=\"symbol\"&&typeof i!=\"boolean\"?(_(i,\"name\"),e.name=\"\"+qt(i)):e.removeAttribute(\"name\")}function Zd(e,t,n,a,l,u,o,i){if(u!=null&&typeof u!=\"function\"&&typeof u!=\"symbol\"&&typeof u!=\"boolean\"&&(_(u,\"type\"),e.type=u),t!=null||n!=null){if(!(u!==\"submit\"&&u!==\"reset\"||t!=null))return;n=n!=null?\"\"+qt(n):\"\",t=t!=null?\"\"+qt(t):n,i||t===e.value||(e.value=t),e.defaultValue=t}a=a??l,a=typeof a!=\"function\"&&typeof a!=\"symbol\"&&!!a,e.checked=i?e.checked:!!a,e.defaultChecked=!!a,o!=null&&typeof o!=\"function\"&&typeof o!=\"symbol\"&&typeof o!=\"boolean\"&&(_(o,\"name\"),e.name=o)}function us(e,t,n){t===\"number\"&&ui(e.ownerDocument)===e||e.defaultValue===\"\"+n||(e.defaultValue=\"\"+n)}function $d(e,t){t.value==null&&(typeof t.children==\"object\"&&t.children!==null?af.Children.forEach(t.children,function(n){n==null||typeof n==\"string\"||typeof n==\"number\"||typeof n==\"bigint\"||Hy||(Hy=!0,console.error(\"Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.\"))}):t.dangerouslySetInnerHTML==null||_y||(_y=!0,console.error(\"Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.\"))),t.selected==null||Ny||(console.error(\"Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.\"),Ny=!0)}function Jd(){var e=ai();return e?`\n\nCheck the render method of \\``+e+\"`.\":\"\"}function Tl(e,t,n,a){if(e=e.options,t){t={};for(var l=0;l<n.length;l++)t[\"$\"+n[l]]=!0;for(n=0;n<e.length;n++)l=t.hasOwnProperty(\"$\"+e[n].value),e[n].selected!==l&&(e[n].selected=l),l&&a&&(e[n].defaultSelected=!0)}else{for(n=\"\"+qt(n),t=null,l=0;l<e.length;l++){if(e[l].value===n){e[l].selected=!0,a&&(e[l].defaultSelected=!0);return}t!==null||e[l].disabled||(t=e[l])}t!==null&&(t.selected=!0)}}function Kd(e,t){for(e=0;e<By.length;e++){var n=By[e];if(t[n]!=null){var a=nt(t[n]);t.multiple&&!a?console.error(\"The `%s` prop supplied to <select> must be an array if `multiple` is true.%s\",n,Jd()):!t.multiple&&a&&console.error(\"The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s\",n,Jd())}}t.value===void 0||t.defaultValue===void 0||Ly||(console.error(\"Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://react.dev/link/controlled-components\"),Ly=!0)}function Wd(e,t){t.value===void 0||t.defaultValue===void 0||qy||(console.error(\"%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://react.dev/link/controlled-components\",ai()||\"A component\"),qy=!0),t.children!=null&&t.value==null&&console.error(\"Use the `defaultValue` or `value` props instead of setting children on <textarea>.\")}function Fd(e,t,n){if(t!=null&&(t=\"\"+qt(t),t!==e.value&&(e.value=t),n==null)){e.defaultValue!==t&&(e.defaultValue=t);return}e.defaultValue=n!=null?\"\"+qt(n):\"\"}function Id(e,t,n,a){if(t==null){if(a!=null){if(n!=null)throw Error(\"If you supply `defaultValue` on a <textarea>, do not pass children.\");if(nt(a)){if(1<a.length)throw Error(\"<textarea> can only have at most one child.\");a=a[0]}n=a}n==null&&(n=\"\"),t=n}n=qt(t),e.defaultValue=n,a=e.textContent,a===n&&a!==\"\"&&a!==null&&(e.value=a)}function Pd(e,t){return e.serverProps===void 0&&e.serverTail.length===0&&e.children.length===1&&3<e.distanceFromLeaf&&e.distanceFromLeaf>15-t?Pd(e.children[0],t):e}function Dt(e){return\"  \"+\"  \".repeat(e)}function El(e){return\"+ \"+\"  \".repeat(e)}function _a(e){return\"- \"+\"  \".repeat(e)}function eh(e){switch(e.tag){case 26:case 27:case 5:return e.type;case 16:return\"Lazy\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 0:case 15:return e=e.type,e.displayName||e.name||null;case 11:return e=e.type.render,e.displayName||e.name||null;case 1:return e=e.type,e.displayName||e.name||null;default:return null}}function wu(e,t){return Yy.test(e)?(e=JSON.stringify(e),e.length>t-2?8>t?'{\"...\"}':\"{\"+e.slice(0,t-7)+'...\"}':\"{\"+e+\"}\"):e.length>t?5>t?'{\"...\"}':e.slice(0,t-3)+\"...\":e}function oi(e,t,n){var a=120-2*n;if(t===null)return El(n)+wu(e,a)+`\n`;if(typeof t==\"string\"){for(var l=0;l<t.length&&l<e.length&&t.charCodeAt(l)===e.charCodeAt(l);l++);return l>a-8&&10<l&&(e=\"...\"+e.slice(l-8),t=\"...\"+t.slice(l-8)),El(n)+wu(e,a)+`\n`+_a(n)+wu(t,a)+`\n`}return Dt(n)+wu(e,a)+`\n`}function os(e){return Object.prototype.toString.call(e).replace(/^\\[object (.*)\\]$/,function(t,n){return n})}function Ou(e,t){switch(typeof e){case\"string\":return e=JSON.stringify(e),e.length>t?5>t?'\"...\"':e.slice(0,t-4)+'...\"':e;case\"object\":if(e===null)return\"null\";if(nt(e))return\"[...]\";if(e.$$typeof===da)return(t=ce(e.type))?\"<\"+t+\">\":\"<...>\";var n=os(e);if(n===\"Object\"){n=\"\",t-=2;for(var a in e)if(e.hasOwnProperty(a)){var l=JSON.stringify(a);if(l!=='\"'+a+'\"'&&(a=l),t-=a.length-2,l=Ou(e[a],15>t?t:15),t-=l.length,0>t){n+=n===\"\"?\"...\":\", ...\";break}n+=(n===\"\"?\"\":\",\")+a+\":\"+l}return\"{\"+n+\"}\"}return n;case\"function\":return(t=e.displayName||e.name)?\"function \"+t:\"function\";default:return String(e)}}function Rl(e,t){return typeof e!=\"string\"||Yy.test(e)?\"{\"+Ou(e,t-2)+\"}\":e.length>t-2?5>t?'\"...\"':'\"'+e.slice(0,t-5)+'...\"':'\"'+e+'\"'}function is(e,t,n){var a=120-n.length-e.length,l=[],u;for(u in t)if(t.hasOwnProperty(u)&&u!==\"children\"){var o=Rl(t[u],120-n.length-u.length-1);a-=u.length+o.length+2,l.push(u+\"=\"+o)}return l.length===0?n+\"<\"+e+`>\n`:0<a?n+\"<\"+e+\" \"+l.join(\" \")+`>\n`:n+\"<\"+e+`\n`+n+\"  \"+l.join(`\n`+n+\"  \")+`\n`+n+`>\n`}function mv(e,t,n){var a=\"\",l=W({},t),u;for(u in e)if(e.hasOwnProperty(u)){delete l[u];var o=120-2*n-u.length-2,i=Ou(e[u],o);t.hasOwnProperty(u)?(o=Ou(t[u],o),a+=El(n)+u+\": \"+i+`\n`,a+=_a(n)+u+\": \"+o+`\n`):a+=El(n)+u+\": \"+i+`\n`}for(var c in l)l.hasOwnProperty(c)&&(e=Ou(l[c],120-2*n-c.length-2),a+=_a(n)+c+\": \"+e+`\n`);return a}function pv(e,t,n,a){var l=\"\",u=new Map;for(s in n)n.hasOwnProperty(s)&&u.set(s.toLowerCase(),s);if(u.size===1&&u.has(\"children\"))l+=is(e,t,Dt(a));else{for(var o in t)if(t.hasOwnProperty(o)&&o!==\"children\"){var i=120-2*(a+1)-o.length-1,c=u.get(o.toLowerCase());if(c!==void 0){u.delete(o.toLowerCase());var s=t[o];c=n[c];var p=Rl(s,i);i=Rl(c,i),typeof s==\"object\"&&s!==null&&typeof c==\"object\"&&c!==null&&os(s)===\"Object\"&&os(c)===\"Object\"&&(2<Object.keys(s).length||2<Object.keys(c).length||-1<p.indexOf(\"...\")||-1<i.indexOf(\"...\"))?l+=Dt(a+1)+o+`={{\n`+mv(s,c,a+2)+Dt(a+1)+`}}\n`:(l+=El(a+1)+o+\"=\"+p+`\n`,l+=_a(a+1)+o+\"=\"+i+`\n`)}else l+=Dt(a+1)+o+\"=\"+Rl(t[o],i)+`\n`}u.forEach(function(v){if(v!==\"children\"){var m=120-2*(a+1)-v.length-1;l+=_a(a+1)+v+\"=\"+Rl(n[v],m)+`\n`}}),l=l===\"\"?Dt(a)+\"<\"+e+`>\n`:Dt(a)+\"<\"+e+`\n`+l+Dt(a)+`>\n`}return e=n.children,t=t.children,typeof e==\"string\"||typeof e==\"number\"||typeof e==\"bigint\"?(u=\"\",(typeof t==\"string\"||typeof t==\"number\"||typeof t==\"bigint\")&&(u=\"\"+t),l+=oi(u,\"\"+e,a+1)):(typeof t==\"string\"||typeof t==\"number\"||typeof t==\"bigint\")&&(l=e==null?l+oi(\"\"+t,null,a+1):l+oi(\"\"+t,void 0,a+1)),l}function th(e,t){var n=eh(e);if(n===null){for(n=\"\",e=e.child;e;)n+=th(e,t),e=e.sibling;return n}return Dt(t)+\"<\"+n+`>\n`}function cs(e,t){var n=Pd(e,t);if(n!==e&&(e.children.length!==1||e.children[0]!==n))return Dt(t)+`...\n`+cs(n,t+1);n=\"\";var a=e.fiber._debugInfo;if(a)for(var l=0;l<a.length;l++){var u=a[l].name;typeof u==\"string\"&&(n+=Dt(t)+\"<\"+u+`>\n`,t++)}if(a=\"\",l=e.fiber.pendingProps,e.fiber.tag===6)a=oi(l,e.serverProps,t),t++;else if(u=eh(e.fiber),u!==null)if(e.serverProps===void 0){a=t;var o=120-2*a-u.length-2,i=\"\";for(s in l)if(l.hasOwnProperty(s)&&s!==\"children\"){var c=Rl(l[s],15);if(o-=s.length+c.length+2,0>o){i+=\" ...\";break}i+=\" \"+s+\"=\"+c}a=Dt(a)+\"<\"+u+i+`>\n`,t++}else e.serverProps===null?(a=is(u,l,El(t)),t++):typeof e.serverProps==\"string\"?console.error(\"Should not have matched a non HostText fiber to a Text node. This is a bug in React.\"):(a=pv(u,l,e.serverProps,t),t++);var s=\"\";for(l=e.fiber.child,u=0;l&&u<e.children.length;)o=e.children[u],o.fiber===l?(s+=cs(o,t),u++):s+=th(l,t),l=l.sibling;for(l&&0<e.children.length&&(s+=Dt(t)+`...\n`),l=e.serverTail,e.serverProps===null&&t--,e=0;e<l.length;e++)u=l[e],s=typeof u==\"string\"?s+(_a(t)+wu(u,120-2*t)+`\n`):s+is(u.type,u.props,_a(t));return n+a+s}function ss(e){try{return`\n\n`+cs(e,0)}catch{return\"\"}}function nh(e,t,n){for(var a=t,l=null,u=0;a;)a===e&&(u=0),l={fiber:a,children:l!==null?[l]:[],serverProps:a===t?n:a===e?null:void 0,serverTail:[],distanceFromLeaf:u},u++,a=a.return;return l!==null?ss(l).replaceAll(/^[+-]/gm,\">\"):\"\"}function ah(e,t){var n=W({},e||Gy),a={tag:t};return Vy.indexOf(t)!==-1&&(n.aTagInScope=null,n.buttonTagInScope=null,n.nobrTagInScope=null),fS.indexOf(t)!==-1&&(n.pTagInButtonScope=null),rS.indexOf(t)!==-1&&t!==\"address\"&&t!==\"div\"&&t!==\"p\"&&(n.listItemTagAutoclosing=null,n.dlItemTagAutoclosing=null),n.current=a,t===\"form\"&&(n.formTag=a),t===\"a\"&&(n.aTagInScope=a),t===\"button\"&&(n.buttonTagInScope=a),t===\"nobr\"&&(n.nobrTagInScope=a),t===\"p\"&&(n.pTagInButtonScope=a),t===\"li\"&&(n.listItemTagAutoclosing=a),(t===\"dd\"||t===\"dt\")&&(n.dlItemTagAutoclosing=a),t===\"#document\"||t===\"html\"?n.containerTagInScope=null:n.containerTagInScope||(n.containerTagInScope=a),e!==null||t!==\"#document\"&&t!==\"html\"&&t!==\"body\"?n.implicitRootScope===!0&&(n.implicitRootScope=!1):n.implicitRootScope=!0,n}function lh(e,t,n){switch(t){case\"select\":return e===\"hr\"||e===\"option\"||e===\"optgroup\"||e===\"script\"||e===\"template\"||e===\"#text\";case\"optgroup\":return e===\"option\"||e===\"#text\";case\"option\":return e===\"#text\";case\"tr\":return e===\"th\"||e===\"td\"||e===\"style\"||e===\"script\"||e===\"template\";case\"tbody\":case\"thead\":case\"tfoot\":return e===\"tr\"||e===\"style\"||e===\"script\"||e===\"template\";case\"colgroup\":return e===\"col\"||e===\"template\";case\"table\":return e===\"caption\"||e===\"colgroup\"||e===\"tbody\"||e===\"tfoot\"||e===\"thead\"||e===\"style\"||e===\"script\"||e===\"template\";case\"head\":return e===\"base\"||e===\"basefont\"||e===\"bgsound\"||e===\"link\"||e===\"meta\"||e===\"title\"||e===\"noscript\"||e===\"noframes\"||e===\"style\"||e===\"script\"||e===\"template\";case\"html\":if(n)break;return e===\"head\"||e===\"body\"||e===\"frameset\";case\"frameset\":return e===\"frame\";case\"#document\":if(!n)return e===\"html\"}switch(e){case\"h1\":case\"h2\":case\"h3\":case\"h4\":case\"h5\":case\"h6\":return t!==\"h1\"&&t!==\"h2\"&&t!==\"h3\"&&t!==\"h4\"&&t!==\"h5\"&&t!==\"h6\";case\"rp\":case\"rt\":return dS.indexOf(t)===-1;case\"caption\":case\"col\":case\"colgroup\":case\"frameset\":case\"frame\":case\"tbody\":case\"td\":case\"tfoot\":case\"th\":case\"thead\":case\"tr\":return t==null;case\"head\":return n||t===null;case\"html\":return n&&t===\"#document\"||t===null;case\"body\":return n&&(t===\"#document\"||t===\"html\")||t===null}return!0}function yv(e,t){switch(e){case\"address\":case\"article\":case\"aside\":case\"blockquote\":case\"center\":case\"details\":case\"dialog\":case\"dir\":case\"div\":case\"dl\":case\"fieldset\":case\"figcaption\":case\"figure\":case\"footer\":case\"header\":case\"hgroup\":case\"main\":case\"menu\":case\"nav\":case\"ol\":case\"p\":case\"section\":case\"summary\":case\"ul\":case\"pre\":case\"listing\":case\"table\":case\"hr\":case\"xmp\":case\"h1\":case\"h2\":case\"h3\":case\"h4\":case\"h5\":case\"h6\":return t.pTagInButtonScope;case\"form\":return t.formTag||t.pTagInButtonScope;case\"li\":return t.listItemTagAutoclosing;case\"dd\":case\"dt\":return t.dlItemTagAutoclosing;case\"button\":return t.buttonTagInScope;case\"a\":return t.aTagInScope;case\"nobr\":return t.nobrTagInScope}return null}function uh(e,t){for(;e;){switch(e.tag){case 5:case 26:case 27:if(e.type===t)return e}e=e.return}return null}function rs(e,t){t=t||Gy;var n=t.current;if(t=(n=lh(e,n&&n.tag,t.implicitRootScope)?null:n)?null:yv(e,t),t=n||t,!t)return!0;var a=t.tag;if(t=String(!!n)+\"|\"+e+\"|\"+a,sc[t])return!1;sc[t]=!0;var l=(t=jt)?uh(t.return,a):null,u=t!==null&&l!==null?nh(l,t,null):\"\",o=\"<\"+e+\">\";return n?(n=\"\",a===\"table\"&&e===\"tr\"&&(n+=\" Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.\"),console.error(`In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s`,o,a,n,u)):console.error(`In HTML, %s cannot be a descendant of <%s>.\nThis will cause a hydration error.%s`,o,a,u),t&&(e=t.return,l===null||e===null||l===e&&e._debugOwner===t._debugOwner||H(l,function(){console.error(`<%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace.`,a,o)})),!1}function ii(e,t,n){if(n||lh(\"#text\",t,!1))return!0;if(n=\"#text|\"+t,sc[n])return!1;sc[n]=!0;var a=(n=jt)?uh(n,t):null;return n=n!==null&&a!==null?nh(a,n,n.tag!==6?{children:null}:null):\"\",/\\S/.test(e)?console.error(`In HTML, text nodes cannot be a child of <%s>.\nThis will cause a hydration error.%s`,t,n):console.error(`In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\nThis will cause a hydration error.%s`,t,n),!1}function Mu(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&n.nodeType===3){n.nodeValue=t;return}}e.textContent=t}function gv(e){return e.replace(pS,function(t,n){return n.toUpperCase()})}function oh(e,t,n){var a=t.indexOf(\"--\")===0;a||(-1<t.indexOf(\"-\")?Gl.hasOwnProperty(t)&&Gl[t]||(Gl[t]=!0,console.error(\"Unsupported style property %s. Did you mean %s?\",t,gv(t.replace(mS,\"ms-\")))):hS.test(t)?Gl.hasOwnProperty(t)&&Gl[t]||(Gl[t]=!0,console.error(\"Unsupported vendor-prefixed style property %s. Did you mean %s?\",t,t.charAt(0).toUpperCase()+t.slice(1))):!Qy.test(n)||Tf.hasOwnProperty(n)&&Tf[n]||(Tf[n]=!0,console.error(`Style property values shouldn't contain a semicolon. Try \"%s: %s\" instead.`,t,n.replace(Qy,\"\"))),typeof n==\"number\"&&(isNaN(n)?Zy||(Zy=!0,console.error(\"`NaN` is an invalid value for the `%s` css style property.\",t)):isFinite(n)||$y||($y=!0,console.error(\"`Infinity` is an invalid value for the `%s` css style property.\",t)))),n==null||typeof n==\"boolean\"||n===\"\"?a?e.setProperty(t,\"\"):t===\"float\"?e.cssFloat=\"\":e[t]=\"\":a?e.setProperty(t,n):typeof n!=\"number\"||n===0||Jy.has(t)?t===\"float\"?e.cssFloat=n:(Re(n,t),e[t]=(\"\"+n).trim()):e[t]=n+\"px\"}function ih(e,t,n){if(t!=null&&typeof t!=\"object\")throw Error(\"The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.\");if(t&&Object.freeze(t),e=e.style,n!=null){if(t){var a={};if(n){for(var l in n)if(n.hasOwnProperty(l)&&!t.hasOwnProperty(l))for(var u=xf[l]||[l],o=0;o<u.length;o++)a[u[o]]=l}for(var i in t)if(t.hasOwnProperty(i)&&(!n||n[i]!==t[i]))for(l=xf[i]||[i],u=0;u<l.length;u++)a[l[u]]=i;i={};for(var c in t)for(l=xf[c]||[c],u=0;u<l.length;u++)i[l[u]]=c;c={};for(var s in a)if(l=a[s],(u=i[s])&&l!==u&&(o=l+\",\"+u,!c[o])){c[o]=!0,o=console;var p=t[l];o.error.call(o,\"%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.\",p==null||typeof p==\"boolean\"||p===\"\"?\"Removing\":\"Updating\",l,u)}}for(var v in n)!n.hasOwnProperty(v)||t!=null&&t.hasOwnProperty(v)||(v.indexOf(\"--\")===0?e.setProperty(v,\"\"):v===\"float\"?e.cssFloat=\"\":e[v]=\"\");for(var m in t)s=t[m],t.hasOwnProperty(m)&&n[m]!==s&&oh(e,m,s)}else for(a in t)t.hasOwnProperty(a)&&oh(e,a,t[a])}function zu(e){if(e.indexOf(\"-\")===-1)return!1;switch(e){case\"annotation-xml\":case\"color-profile\":case\"font-face\":case\"font-face-src\":case\"font-face-uri\":case\"font-face-format\":case\"font-face-name\":case\"missing-glyph\":return!1;default:return!0}}function ch(e){return yS.get(e)||e}function vv(e,t){if(kn.call(Xl,t)&&Xl[t])return!0;if(vS.test(t)){if(e=\"aria-\"+t.slice(4).toLowerCase(),e=Ky.hasOwnProperty(e)?e:null,e==null)return console.error(\"Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.\",t),Xl[t]=!0;if(t!==e)return console.error(\"Invalid ARIA attribute `%s`. Did you mean `%s`?\",t,e),Xl[t]=!0}if(gS.test(t)){if(e=t.toLowerCase(),e=Ky.hasOwnProperty(e)?e:null,e==null)return Xl[t]=!0,!1;t!==e&&(console.error(\"Unknown ARIA attribute `%s`. Did you mean `%s`?\",t,e),Xl[t]=!0)}return!0}function bv(e,t){var n=[],a;for(a in t)vv(e,a)||n.push(a);t=n.map(function(l){return\"`\"+l+\"`\"}).join(\", \"),n.length===1?console.error(\"Invalid aria prop %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props\",t,e):1<n.length&&console.error(\"Invalid aria props %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props\",t,e)}function Sv(e,t,n,a){if(kn.call(ft,t)&&ft[t])return!0;var l=t.toLowerCase();if(l===\"onfocusin\"||l===\"onfocusout\")return console.error(\"React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.\"),ft[t]=!0;if(typeof n==\"function\"&&(e===\"form\"&&t===\"action\"||e===\"input\"&&t===\"formAction\"||e===\"button\"&&t===\"formAction\"))return!0;if(a!=null){if(e=a.possibleRegistrationNames,a.registrationNameDependencies.hasOwnProperty(t))return!0;if(a=e.hasOwnProperty(l)?e[l]:null,a!=null)return console.error(\"Invalid event handler property `%s`. Did you mean `%s`?\",t,a),ft[t]=!0;if(Fy.test(t))return console.error(\"Unknown event handler property `%s`. It will be ignored.\",t),ft[t]=!0}else if(Fy.test(t))return bS.test(t)&&console.error(\"Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.\",t),ft[t]=!0;if(SS.test(t)||xS.test(t))return!0;if(l===\"innerhtml\")return console.error(\"Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.\"),ft[t]=!0;if(l===\"aria\")return console.error(\"The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.\"),ft[t]=!0;if(l===\"is\"&&n!==null&&n!==void 0&&typeof n!=\"string\")return console.error(\"Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.\",typeof n),ft[t]=!0;if(typeof n==\"number\"&&isNaN(n))return console.error(\"Received NaN for the `%s` attribute. If this is expected, cast the value to a string.\",t),ft[t]=!0;if(fc.hasOwnProperty(l)){if(l=fc[l],l!==t)return console.error(\"Invalid DOM property `%s`. Did you mean `%s`?\",t,l),ft[t]=!0}else if(t!==l)return console.error(\"React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.\",t,l),ft[t]=!0;switch(t){case\"dangerouslySetInnerHTML\":case\"children\":case\"style\":case\"suppressContentEditableWarning\":case\"suppressHydrationWarning\":case\"defaultValue\":case\"defaultChecked\":case\"innerHTML\":case\"ref\":return!0;case\"innerText\":case\"textContent\":return!0}switch(typeof n){case\"boolean\":switch(t){case\"autoFocus\":case\"checked\":case\"multiple\":case\"muted\":case\"selected\":case\"contentEditable\":case\"spellCheck\":case\"draggable\":case\"value\":case\"autoReverse\":case\"externalResourcesRequired\":case\"focusable\":case\"preserveAlpha\":case\"allowFullScreen\":case\"async\":case\"autoPlay\":case\"controls\":case\"default\":case\"defer\":case\"disabled\":case\"disablePictureInPicture\":case\"disableRemotePlayback\":case\"formNoValidate\":case\"hidden\":case\"loop\":case\"noModule\":case\"noValidate\":case\"open\":case\"playsInline\":case\"readOnly\":case\"required\":case\"reversed\":case\"scoped\":case\"seamless\":case\"itemScope\":case\"capture\":case\"download\":case\"inert\":return!0;default:return l=t.toLowerCase().slice(0,5),l===\"data-\"||l===\"aria-\"?!0:(n?console.error('Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()}.',n,t,t,n,t):console.error('Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()}.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.',n,t,t,n,t,t,t),ft[t]=!0)}case\"function\":case\"symbol\":return ft[t]=!0,!1;case\"string\":if(n===\"false\"||n===\"true\"){switch(t){case\"checked\":case\"selected\":case\"multiple\":case\"muted\":case\"allowFullScreen\":case\"async\":case\"autoPlay\":case\"controls\":case\"default\":case\"defer\":case\"disabled\":case\"disablePictureInPicture\":case\"disableRemotePlayback\":case\"formNoValidate\":case\"hidden\":case\"loop\":case\"noModule\":case\"noValidate\":case\"open\":case\"playsInline\":case\"readOnly\":case\"required\":case\"reversed\":case\"scoped\":case\"seamless\":case\"itemScope\":case\"inert\":break;default:return!0}console.error(\"Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?\",n,t,n===\"false\"?\"The browser will interpret it as a truthy value.\":'Although this works, it will not work as expected if you pass the string \"false\".',t,n),ft[t]=!0}}return!0}function xv(e,t,n){var a=[],l;for(l in t)Sv(e,l,t[l],n)||a.push(l);t=a.map(function(u){return\"`\"+u+\"`\"}).join(\", \"),a.length===1?console.error(\"Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://react.dev/link/attribute-behavior \",t,e):1<a.length&&console.error(\"Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://react.dev/link/attribute-behavior \",t,e)}function Uu(e){return TS.test(\"\"+e)?\"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\":e}function fs(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}function sh(e){var t=Na(e);if(t&&(e=t.stateNode)){var n=e[Tt]||null;e:switch(e=t.stateNode,t.type){case\"input\":if(ls(e,n.value,n.defaultValue,n.defaultValue,n.checked,n.defaultChecked,n.type,n.name),t=n.name,n.type===\"radio\"&&t!=null){for(n=e;n.parentNode;)n=n.parentNode;for(_(t,\"name\"),n=n.querySelectorAll('input[name=\"'+Yt(\"\"+t)+'\"][type=\"radio\"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var l=a[Tt]||null;if(!l)throw Error(\"ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.\");ls(a,l.value,l.defaultValue,l.defaultValue,l.checked,l.defaultChecked,l.type,l.name)}}for(t=0;t<n.length;t++)a=n[t],a.form===e.form&&Xd(a)}break e;case\"textarea\":Fd(e,n.value,n.defaultValue);break e;case\"select\":t=n.value,t!=null&&Tl(e,!!n.multiple,t,!1)}}}function rh(e,t,n){if(Ef)return e(t,n);Ef=!0;try{var a=e(t);return a}finally{if(Ef=!1,(Ql!==null||Zl!==null)&&(Ul(),Ql&&(t=Ql,e=Zl,Zl=Ql=null,sh(t),e)))for(t=0;t<e.length;t++)sh(e[t])}}function ju(e,t){var n=e.stateNode;if(n===null)return null;var a=n[Tt]||null;if(a===null)return null;n=a[t];e:switch(t){case\"onClick\":case\"onClickCapture\":case\"onDoubleClick\":case\"onDoubleClickCapture\":case\"onMouseDown\":case\"onMouseDownCapture\":case\"onMouseMove\":case\"onMouseMoveCapture\":case\"onMouseUp\":case\"onMouseUpCapture\":case\"onMouseEnter\":(a=!a.disabled)||(e=e.type,a=!(e===\"button\"||e===\"input\"||e===\"select\"||e===\"textarea\")),e=!a;break e;default:e=!1}if(e)return null;if(n&&typeof n!=\"function\")throw Error(\"Expected `\"+t+\"` listener to be a function, instead got a value of `\"+typeof n+\"` type.\");return n}function fh(){if(dc)return dc;var e,t=Af,n=t.length,a,l=\"value\"in ga?ga.value:ga.textContent,u=l.length;for(e=0;e<n&&t[e]===l[e];e++);var o=n-e;for(a=1;a<=o&&t[n-a]===l[u-a];a++);return dc=l.slice(e,1<a?1-a:void 0)}function ci(e){var t=e.keyCode;return\"charCode\"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function si(){return!0}function dh(){return!1}function vt(e){function t(n,a,l,u,o){this._reactName=n,this._targetInst=l,this.type=a,this.nativeEvent=u,this.target=o,this.currentTarget=null;for(var i in e)e.hasOwnProperty(i)&&(n=e[i],this[i]=n?n(u):u[i]);return this.isDefaultPrevented=(u.defaultPrevented!=null?u.defaultPrevented:u.returnValue===!1)?si:dh,this.isPropagationStopped=dh,this}return W(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!=\"unknown\"&&(n.returnValue=!1),this.isDefaultPrevented=si)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!=\"unknown\"&&(n.cancelBubble=!0),this.isPropagationStopped=si)},persist:function(){},isPersistent:si}),t}function Tv(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=HS[e])?!!t[e]:!1}function ds(){return Tv}function hh(e,t){switch(e){case\"keyup\":return $S.indexOf(t.keyCode)!==-1;case\"keydown\":return t.keyCode!==tg;case\"keypress\":case\"mousedown\":case\"focusout\":return!0;default:return!1}}function mh(e){return e=e.detail,typeof e==\"object\"&&\"data\"in e?e.data:null}function Ev(e,t){switch(e){case\"compositionend\":return mh(t);case\"keypress\":return t.which!==ag?null:(ug=!0,lg);case\"textInput\":return e=t.data,e===lg&&ug?null:e;default:return null}}function Rv(e,t){if($l)return e===\"compositionend\"||!Of&&hh(e,t)?(e=fh(),dc=Af=ga=null,$l=!1,e):null;switch(e){case\"paste\":return null;case\"keypress\":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case\"compositionend\":return ng&&t.locale!==\"ko\"?null:t.data;default:return null}}function ph(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t===\"input\"?!!KS[e.type]:t===\"textarea\"}function Av(e){if(!Dn)return!1;e=\"on\"+e;var t=e in document;return t||(t=document.createElement(\"div\"),t.setAttribute(e,\"return;\"),t=typeof t[e]==\"function\"),t}function yh(e,t,n,a){Ql?Zl?Zl.push(a):Zl=[a]:Ql=a,t=$i(t,\"onChange\"),0<t.length&&(n=new hc(\"onChange\",\"change\",null,n,a),e.push({event:n,listeners:t}))}function Cv(e){Lp(e,0)}function ri(e){var t=Du(e);if(Xd(t))return e}function gh(e,t){if(e===\"change\")return t}function vh(){vo&&(vo.detachEvent(\"onpropertychange\",bh),bo=vo=null)}function bh(e){if(e.propertyName===\"value\"&&ri(bo)){var t=[];yh(t,bo,e,fs(e)),rh(Cv,t)}}function Dv(e,t,n){e===\"focusin\"?(vh(),vo=t,bo=n,vo.attachEvent(\"onpropertychange\",bh)):e===\"focusout\"&&vh()}function wv(e){if(e===\"selectionchange\"||e===\"keyup\"||e===\"keydown\")return ri(bo)}function Ov(e,t){if(e===\"click\")return ri(t)}function Mv(e,t){if(e===\"input\"||e===\"change\")return ri(t)}function zv(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}function Nu(e,t){if(dt(e,t))return!0;if(typeof e!=\"object\"||e===null||typeof t!=\"object\"||t===null)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var l=n[a];if(!kn.call(t,l)||!dt(e[l],t[l]))return!1}return!0}function Sh(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function xh(e,t){var n=Sh(e);e=0;for(var a;n;){if(n.nodeType===3){if(a=e+n.textContent.length,e<=t&&a>=t)return{node:n,offset:t-e};e=a}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=Sh(n)}}function Th(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?Th(e,t.parentNode):\"contains\"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function Eh(e){e=e!=null&&e.ownerDocument!=null&&e.ownerDocument.defaultView!=null?e.ownerDocument.defaultView:window;for(var t=ui(e.document);t instanceof e.HTMLIFrameElement;){try{var n=typeof t.contentWindow.location.href==\"string\"}catch{n=!1}if(n)e=t.contentWindow;else break;t=ui(e.document)}return t}function hs(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t===\"input\"&&(e.type===\"text\"||e.type===\"search\"||e.type===\"tel\"||e.type===\"url\"||e.type===\"password\")||t===\"textarea\"||e.contentEditable===\"true\")}function Rh(e,t,n){var a=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;zf||Jl==null||Jl!==ui(a)||(a=Jl,\"selectionStart\"in a&&hs(a)?a={start:a.selectionStart,end:a.selectionEnd}:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection(),a={anchorNode:a.anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset}),So&&Nu(So,a)||(So=a,a=$i(Mf,\"onSelect\"),0<a.length&&(t=new hc(\"onSelect\",\"select\",null,t,n),e.push({event:t,listeners:a}),t.target=Jl)))}function La(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n[\"Webkit\"+e]=\"webkit\"+t,n[\"Moz\"+e]=\"moz\"+t,n}function Ba(e){if(Uf[e])return Uf[e];if(!Kl[e])return e;var t=Kl[e],n;for(n in t)if(t.hasOwnProperty(n)&&n in ig)return Uf[e]=t[n];return e}function un(e,t){dg.set(e,t),Ha(t,[e])}function wt(e,t){if(typeof e==\"object\"&&e!==null){var n=Nf.get(e);return n!==void 0?n:(t={value:e,source:t,stack:Vd(t)},Nf.set(e,t),t)}return{value:e,source:t,stack:Vd(t)}}function fi(){for(var e=Wl,t=Hf=Wl=0;t<e;){var n=Xt[t];Xt[t++]=null;var a=Xt[t];Xt[t++]=null;var l=Xt[t];Xt[t++]=null;var u=Xt[t];if(Xt[t++]=null,a!==null&&l!==null){var o=a.pending;o===null?l.next=l:(l.next=o.next,o.next=l),a.pending=l}u!==0&&Ah(n,l,u)}}function di(e,t,n,a){Xt[Wl++]=e,Xt[Wl++]=t,Xt[Wl++]=n,Xt[Wl++]=a,Hf|=a,e.lanes|=a,e=e.alternate,e!==null&&(e.lanes|=a)}function ms(e,t,n,a){return di(e,t,n,a),hi(e)}function bt(e,t){return di(e,null,null,t),hi(e)}function Ah(e,t,n){e.lanes|=n;var a=e.alternate;a!==null&&(a.lanes|=n);for(var l=!1,u=e.return;u!==null;)u.childLanes|=n,a=u.alternate,a!==null&&(a.childLanes|=n),u.tag===22&&(e=u.stateNode,e===null||e._visibility&pc||(l=!0)),e=u,u=u.return;return e.tag===3?(u=e.stateNode,l&&t!==null&&(l=31-rt(n),e=u.hiddenUpdates,a=e[l],a===null?e[l]=[t]:a.push(t),t.lane=n|536870912),u):null}function hi(e){if(Go>vx)throw dl=Go=0,ko=fd=null,Error(\"Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.\");dl>bx&&(dl=0,ko=null,console.error(\"Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\")),e.alternate===null&&(e.flags&4098)!==0&&Mp(e);for(var t=e,n=t.return;n!==null;)t.alternate===null&&(t.flags&4098)!==0&&Mp(e),t=n,n=t.return;return t.tag===3?t.stateNode:null}function qa(e){if(Qt===null)return e;var t=Qt(e);return t===void 0?e:t.current}function ps(e){if(Qt===null)return e;var t=Qt(e);return t===void 0?e!=null&&typeof e.render==\"function\"&&(t=qa(e.render),e.render!==t)?(t={$$typeof:co,render:t},e.displayName!==void 0&&(t.displayName=e.displayName),t):e:t.current}function Ch(e,t){if(Qt===null)return!1;var n=e.elementType;t=t.type;var a=!1,l=typeof t==\"object\"&&t!==null?t.$$typeof:null;switch(e.tag){case 1:typeof t==\"function\"&&(a=!0);break;case 0:(typeof t==\"function\"||l===Ut)&&(a=!0);break;case 11:(l===co||l===Ut)&&(a=!0);break;case 14:case 15:(l===lc||l===Ut)&&(a=!0);break;default:return!1}return!!(a&&(e=Qt(n),e!==void 0&&e===Qt(t)))}function Dh(e){Qt!==null&&typeof WeakSet==\"function\"&&(Fl===null&&(Fl=new WeakSet),Fl.add(e))}function ys(e,t,n){var a=e.alternate,l=e.child,u=e.sibling,o=e.tag,i=e.type,c=null;switch(o){case 0:case 15:case 1:c=i;break;case 11:c=i.render}if(Qt===null)throw Error(\"Expected resolveFamily to be set during hot reload.\");var s=!1;i=!1,c!==null&&(c=Qt(c),c!==void 0&&(n.has(c)?i=!0:t.has(c)&&(o===1?i=!0:s=!0))),Fl!==null&&(Fl.has(e)||a!==null&&Fl.has(a))&&(i=!0),i&&(e._debugNeedsRemount=!0),(i||s)&&(a=bt(e,2),a!==null&&je(a,e,2)),l===null||i||ys(l,t,n),u!==null&&ys(u,t,n)}function Uv(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null,this.actualDuration=-0,this.actualStartTime=-1.1,this.treeBaseDuration=this.selfBaseDuration=-0,this._debugTask=this._debugStack=this._debugOwner=this._debugInfo=null,this._debugNeedsRemount=!1,this._debugHookTypes=null,mg||typeof Object.preventExtensions!=\"function\"||Object.preventExtensions(this)}function gs(e){return e=e.prototype,!(!e||!e.isReactComponent)}function jn(e,t){var n=e.alternate;switch(n===null?(n=G(e.tag,t,e.key,e.mode),n.elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n._debugOwner=e._debugOwner,n._debugStack=e._debugStack,n._debugTask=e._debugTask,n._debugHookTypes=e._debugHookTypes,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null,n.actualDuration=-0,n.actualStartTime=-1.1),n.flags=e.flags&65011712,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext,_debugThenableState:t._debugThenableState},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n.refCleanup=e.refCleanup,n.selfBaseDuration=e.selfBaseDuration,n.treeBaseDuration=e.treeBaseDuration,n._debugInfo=e._debugInfo,n._debugNeedsRemount=e._debugNeedsRemount,n.tag){case 0:case 15:n.type=qa(e.type);break;case 1:n.type=qa(e.type);break;case 11:n.type=ps(e.type)}return n}function wh(e,t){e.flags&=65011714;var n=e.alternate;return n===null?(e.childLanes=0,e.lanes=t,e.child=null,e.subtreeFlags=0,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.stateNode=null,e.selfBaseDuration=0,e.treeBaseDuration=0):(e.childLanes=n.childLanes,e.lanes=n.lanes,e.child=n.child,e.subtreeFlags=0,e.deletions=null,e.memoizedProps=n.memoizedProps,e.memoizedState=n.memoizedState,e.updateQueue=n.updateQueue,e.type=n.type,t=n.dependencies,e.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext,_debugThenableState:t._debugThenableState},e.selfBaseDuration=n.selfBaseDuration,e.treeBaseDuration=n.treeBaseDuration),e}function vs(e,t,n,a,l,u){var o=0,i=e;if(typeof e==\"function\")gs(e)&&(o=1),i=qa(i);else if(typeof e==\"string\")o=w(),o=Ub(e,n,o)?26:e===\"html\"||e===\"head\"||e===\"body\"?27:5;else e:switch(e){case sf:return t=G(31,n,t,l),t.elementType=sf,t.lanes=u,t;case ql:return Ya(n.children,l,u,t);case ac:o=8,l|=st,l|=sn;break;case lf:return e=n,a=l,typeof e.id!=\"string\"&&console.error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',typeof e.id),t=G(12,e,t,a|at),t.elementType=lf,t.lanes=u,t.stateNode={effectDuration:0,passiveEffectDuration:0},t;case of:return t=G(13,n,t,l),t.elementType=of,t.lanes=u,t;case cf:return t=G(19,n,t,l),t.elementType=cf,t.lanes=u,t;default:if(typeof e==\"object\"&&e!==null)switch(e.$$typeof){case Zb:case Tn:o=10;break e;case uf:o=9;break e;case co:o=11,i=ps(i);break e;case lc:o=14;break e;case Ut:o=16,i=null;break e}i=\"\",(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(i+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\"),e===null?n=\"null\":nt(e)?n=\"array\":e!==void 0&&e.$$typeof===da?(n=\"<\"+(ce(e.type)||\"Unknown\")+\" />\",i=\" Did you accidentally export a JSX literal instead of a component?\"):n=typeof e,(o=a?Ct(a):null)&&(i+=`\n\nCheck the render method of \\``+o+\"`.\"),o=29,n=Error(\"Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: \"+(n+\".\"+i)),i=null}return t=G(o,n,t,l),t.elementType=e,t.type=i,t.lanes=u,t._debugOwner=a,t}function mi(e,t,n){return t=vs(e.type,e.key,e.props,e._owner,t,n),t._debugOwner=e._owner,t._debugStack=e._debugStack,t._debugTask=e._debugTask,t}function Ya(e,t,n,a){return e=G(7,e,a,t),e.lanes=n,e}function bs(e,t,n){return e=G(6,e,null,t),e.lanes=n,e}function Ss(e,t,n){return t=G(4,e.children!==null?e.children:[],e.key,t),t.lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Va(e,t){Ga(),Il[Pl++]=gc,Il[Pl++]=yc,yc=e,gc=t}function Oh(e,t,n){Ga(),Zt[$t++]=Zn,Zt[$t++]=$n,Zt[$t++]=el,el=e;var a=Zn;e=$n;var l=32-rt(a)-1;a&=~(1<<l),n+=1;var u=32-rt(t)+l;if(30<u){var o=l-l%5;u=(a&(1<<o)-1).toString(32),a>>=o,l-=o,Zn=1<<32-rt(t)+l|n<<l|a,$n=u+e}else Zn=1<<u|n<<l|a,$n=e}function xs(e){Ga(),e.return!==null&&(Va(e,1),Oh(e,1,0))}function Ts(e){for(;e===yc;)yc=Il[--Pl],Il[Pl]=null,gc=Il[--Pl],Il[Pl]=null;for(;e===el;)el=Zt[--$t],Zt[$t]=null,$n=Zt[--$t],Zt[$t]=null,Zn=Zt[--$t],Zt[$t]=null}function Ga(){ie||console.error(\"Expected to be hydrating. This is a bug in React. Please file an issue.\")}function ka(e,t){if(e.return===null){if(Jt===null)Jt={fiber:e,children:[],serverProps:void 0,serverTail:[],distanceFromLeaf:t};else{if(Jt.fiber!==e)throw Error(\"Saw multiple hydration diff roots in a pass. This is a bug in React.\");Jt.distanceFromLeaf>t&&(Jt.distanceFromLeaf=t)}return Jt}var n=ka(e.return,t+1).children;return 0<n.length&&n[n.length-1].fiber===e?(n=n[n.length-1],n.distanceFromLeaf>t&&(n.distanceFromLeaf=t),n):(t={fiber:e,children:[],serverProps:void 0,serverTail:[],distanceFromLeaf:t},n.push(t),t)}function Es(e,t){Jn||(e=ka(e,0),e.serverProps=null,t!==null&&(t=Fp(t),e.serverTail.push(t)))}function Xa(e){var t=\"\",n=Jt;throw n!==null&&(Jt=null,t=ss(n)),Lu(wt(Error(`Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch \\`if (typeof window !== 'undefined')\\`.\n- Variable input such as \\`Date.now()\\` or \\`Math.random()\\` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\nhttps://react.dev/link/hydration-mismatch`+t),e)),_f}function Mh(e){var t=e.stateNode,n=e.type,a=e.memoizedProps;switch(t[ct]=e,t[Tt]=a,Yr(n,a),n){case\"dialog\":ne(\"cancel\",t),ne(\"close\",t);break;case\"iframe\":case\"object\":case\"embed\":ne(\"load\",t);break;case\"video\":case\"audio\":for(n=0;n<Xo.length;n++)ne(Xo[n],t);break;case\"source\":ne(\"error\",t);break;case\"img\":case\"image\":case\"link\":ne(\"error\",t),ne(\"load\",t);break;case\"details\":ne(\"toggle\",t);break;case\"input\":xl(\"input\",a),ne(\"invalid\",t),Qd(t,a),Zd(t,a.value,a.defaultValue,a.checked,a.defaultChecked,a.type,a.name,!0),li(t);break;case\"option\":$d(t,a);break;case\"select\":xl(\"select\",a),ne(\"invalid\",t),Kd(t,a);break;case\"textarea\":xl(\"textarea\",a),ne(\"invalid\",t),Wd(t,a),Id(t,a.value,a.defaultValue,a.children),li(t)}n=a.children,typeof n!=\"string\"&&typeof n!=\"number\"&&typeof n!=\"bigint\"||t.textContent===\"\"+n||a.suppressHydrationWarning===!0||Vp(t.textContent,n)?(a.popover!=null&&(ne(\"beforetoggle\",t),ne(\"toggle\",t)),a.onScroll!=null&&ne(\"scroll\",t),a.onScrollEnd!=null&&ne(\"scrollend\",t),a.onClick!=null&&(t.onclick=Ji),t=!0):t=!1,t||Xa(e)}function zh(e){for(ht=e.return;ht;)switch(ht.tag){case 5:case 13:wn=!1;return;case 27:case 3:wn=!0;return;default:ht=ht.return}}function Hu(e){if(e!==ht)return!1;if(!ie)return zh(e),ie=!0,!1;var t=e.tag,n;if((n=t!==3&&t!==27)&&((n=t===5)&&(n=e.type,n=!(n!==\"form\"&&n!==\"button\")||Qr(e.type,e.memoizedProps)),n=!n),n&&we){for(n=we;n;){var a=ka(e,0),l=Fp(n);a.serverTail.push(l),n=l.type===\"Suspense\"?Pp(n):Gt(n.nextSibling)}Xa(e)}if(zh(e),t===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(\"Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.\");we=Pp(e)}else t===27?(t=we,fa(e.type)?(e=Ed,Ed=null,we=e):we=t):we=ht?Gt(e.stateNode.nextSibling):null;return!0}function _u(){we=ht=null,Jn=ie=!1}function Uh(){var e=tl;return e!==null&&(yt===null?yt=e:yt.push.apply(yt,e),tl=null),e}function Lu(e){tl===null?tl=[e]:tl.push(e)}function jh(){var e=Jt;if(e!==null){Jt=null;for(var t=ss(e);0<e.children.length;)e=e.children[0];H(e.fiber,function(){console.error(`A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch \\`if (typeof window !== 'undefined')\\`.\n- Variable input such as \\`Date.now()\\` or \\`Math.random()\\` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s`,\"https://react.dev/link/hydration-mismatch\",t)})}}function pi(){eu=vc=null,tu=!1}function aa(e,t,n){P(Lf,t._currentValue,e),t._currentValue=n,P(Bf,t._currentRenderer,e),t._currentRenderer!==void 0&&t._currentRenderer!==null&&t._currentRenderer!==vg&&console.error(\"Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.\"),t._currentRenderer=vg}function Nn(e,t){e._currentValue=Lf.current;var n=Bf.current;oe(Bf,t),e._currentRenderer=n,oe(Lf,t)}function Rs(e,t,n){for(;e!==null;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,a!==null&&(a.childLanes|=t)):a!==null&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}e!==n&&console.error(\"Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.\")}function As(e,t,n,a){var l=e.child;for(l!==null&&(l.return=e);l!==null;){var u=l.dependencies;if(u!==null){var o=l.child;u=u.firstContext;e:for(;u!==null;){var i=u;u=l;for(var c=0;c<t.length;c++)if(i.context===t[c]){u.lanes|=n,i=u.alternate,i!==null&&(i.lanes|=n),Rs(u.return,n,e),a||(o=null);break e}u=i.next}}else if(l.tag===18){if(o=l.return,o===null)throw Error(\"We just came from a parent so we must have had a parent. This is a bug in React.\");o.lanes|=n,u=o.alternate,u!==null&&(u.lanes|=n),Rs(o,n,e),o=null}else o=l.child;if(o!==null)o.return=l;else for(o=l;o!==null;){if(o===e){o=null;break}if(l=o.sibling,l!==null){l.return=o.return,o=l;break}o=o.return}l=o}}function Bu(e,t,n,a){e=null;for(var l=t,u=!1;l!==null;){if(!u){if((l.flags&524288)!==0)u=!0;else if((l.flags&262144)!==0)break}if(l.tag===10){var o=l.alternate;if(o===null)throw Error(\"Should have a current fiber. This is a bug in React.\");if(o=o.memoizedProps,o!==null){var i=l.type;dt(l.pendingProps.value,o.value)||(e!==null?e.push(i):e=[i])}}else if(l===uc.current){if(o=l.alternate,o===null)throw Error(\"Should have a current fiber. This is a bug in React.\");o.memoizedState.memoizedState!==l.memoizedState.memoizedState&&(e!==null?e.push(Jo):e=[Jo])}l=l.return}e!==null&&As(t,e,n,a),t.flags|=262144}function yi(e){for(e=e.firstContext;e!==null;){if(!dt(e.context._currentValue,e.memoizedValue))return!0;e=e.next}return!1}function Qa(e){vc=e,eu=null,e=e.dependencies,e!==null&&(e.firstContext=null)}function Ae(e){return tu&&console.error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\"),Nh(vc,e)}function gi(e,t){return vc===null&&Qa(e),Nh(e,t)}function Nh(e,t){var n=t._currentValue;if(t={context:t,memoizedValue:n,next:null},eu===null){if(e===null)throw Error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\");eu=t,e.dependencies={lanes:0,firstContext:t,_debugThenableState:null},e.flags|=524288}else eu=eu.next=t;return n}function Cs(){return{controller:new ax,data:new Map,refCount:0}}function Za(e){e.controller.signal.aborted&&console.warn(\"A cache instance was retained after it was already freed. This likely indicates a bug in React.\"),e.refCount++}function qu(e){e.refCount--,0>e.refCount&&console.warn(\"A cache instance was released after it was already freed. This likely indicates a bug in React.\"),e.refCount===0&&lx(ux,function(){e.controller.abort()})}function Hn(){var e=nl;return nl=0,e}function vi(e){var t=nl;return nl=e,t}function Yu(e){var t=nl;return nl+=e,t}function Ds(e){Et=nu(),0>e.actualStartTime&&(e.actualStartTime=Et)}function ws(e){if(0<=Et){var t=nu()-Et;e.actualDuration+=t,e.selfBaseDuration=t,Et=-1}}function Hh(e){if(0<=Et){var t=nu()-Et;e.actualDuration+=t,Et=-1}}function pn(){if(0<=Et){var e=nu()-Et;Et=-1,nl+=e}}function yn(){Et=nu()}function bi(e){for(var t=e.child;t;)e.actualDuration+=t.actualDuration,t=t.sibling}function jv(e,t){if(xo===null){var n=xo=[];qf=0,al=_r(),au={status:\"pending\",value:void 0,then:function(a){n.push(a)}}}return qf++,t.then(_h,_h),t}function _h(){if(--qf===0&&xo!==null){au!==null&&(au.status=\"fulfilled\");var e=xo;xo=null,al=0,au=null;for(var t=0;t<e.length;t++)(0,e[t])()}}function Nv(e,t){var n=[],a={status:\"pending\",value:null,reason:null,then:function(l){n.push(l)}};return e.then(function(){a.status=\"fulfilled\",a.value=t;for(var l=0;l<n.length;l++)(0,n[l])(t)},function(l){for(a.status=\"rejected\",a.reason=l,l=0;l<n.length;l++)(0,n[l])(void 0)}),a}function Os(){var e=ll.current;return e!==null?e:Se.pooledCache}function Si(e,t){t===null?P(ll,ll.current,e):P(ll,t.pool,e)}function Lh(){var e=Os();return e===null?null:{parent:Ge._currentValue,pool:e}}function Bh(){return{didWarnAboutUncachedPromise:!1,thenables:[]}}function qh(e){return e=e.status,e===\"fulfilled\"||e===\"rejected\"}function xi(){}function Yh(e,t,n){g.actQueue!==null&&(g.didUsePromise=!0);var a=e.thenables;switch(n=a[n],n===void 0?a.push(t):n!==t&&(e.didWarnAboutUncachedPromise||(e.didWarnAboutUncachedPromise=!0,console.error(\"A component was suspended by an uncached promise. Creating promises inside a Client Component or hook is not yet supported, except via a Suspense-compatible library or framework.\")),t.then(xi,xi),t=n),t.status){case\"fulfilled\":return t.value;case\"rejected\":throw e=t.reason,Gh(e),e;default:if(typeof t.status==\"string\")t.then(xi,xi);else{if(e=Se,e!==null&&100<e.shellSuspendCounter)throw Error(\"An unknown Component is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\");e=t,e.status=\"pending\",e.then(function(l){if(t.status===\"pending\"){var u=t;u.status=\"fulfilled\",u.value=l}},function(l){if(t.status===\"pending\"){var u=t;u.status=\"rejected\",u.reason=l}})}switch(t.status){case\"fulfilled\":return t.value;case\"rejected\":throw e=t.reason,Gh(e),e}throw Oo=t,Rc=!0,wo}}function Vh(){if(Oo===null)throw Error(\"Expected a suspended thenable. This is a bug in React. Please file an issue.\");var e=Oo;return Oo=null,Rc=!1,e}function Gh(e){if(e===wo||e===Ec)throw Error(\"Hooks are not supported inside an async component. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\")}function Ms(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function zs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,callbacks:null})}function la(e){return{lane:e,tag:Eg,payload:null,callback:null,next:null}}function ua(e,t,n){var a=e.updateQueue;if(a===null)return null;if(a=a.shared,Gf===a&&!Cg){var l=C(e);console.error(`An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.\n\nPlease update the following component: %s`,l),Cg=!0}return(re&pt)!==Nt?(l=a.pending,l===null?t.next=t:(t.next=l.next,l.next=t),a.pending=t,t=hi(e),Ah(e,null,n),t):(di(e,a,t,n),hi(e))}function Vu(e,t,n){if(t=t.updateQueue,t!==null&&(t=t.shared,(n&4194048)!==0)){var a=t.lanes;a&=e.pendingLanes,n|=a,t.lanes=n,Nd(e,n)}}function Ti(e,t){var n=e.updateQueue,a=e.alternate;if(a!==null&&(a=a.updateQueue,n===a)){var l=null,u=null;if(n=n.firstBaseUpdate,n!==null){do{var o={lane:n.lane,tag:n.tag,payload:n.payload,callback:null,next:null};u===null?l=u=o:u=u.next=o,n=n.next}while(n!==null);u===null?l=u=t:u=u.next=t}else l=u=t;n={baseState:a.baseState,firstBaseUpdate:l,lastBaseUpdate:u,shared:a.shared,callbacks:a.callbacks},e.updateQueue=n;return}e=n.lastBaseUpdate,e===null?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Gu(){if(kf){var e=au;if(e!==null)throw e}}function ku(e,t,n,a){kf=!1;var l=e.updateQueue;ba=!1,Gf=l.shared;var u=l.firstBaseUpdate,o=l.lastBaseUpdate,i=l.shared.pending;if(i!==null){l.shared.pending=null;var c=i,s=c.next;c.next=null,o===null?u=s:o.next=s,o=c;var p=e.alternate;p!==null&&(p=p.updateQueue,i=p.lastBaseUpdate,i!==o&&(i===null?p.firstBaseUpdate=s:i.next=s,p.lastBaseUpdate=c))}if(u!==null){var v=l.baseState;o=0,p=s=c=null,i=u;do{var m=i.lane&-536870913,b=m!==i.lane;if(b?(te&m)===m:(a&m)===m){m!==0&&m===al&&(kf=!0),p!==null&&(p=p.next={lane:0,tag:i.tag,payload:i.payload,callback:null,next:null});e:{m=e;var U=i,q=t,xe=n;switch(U.tag){case Rg:if(U=U.payload,typeof U==\"function\"){tu=!0;var ae=U.call(xe,v,q);if(m.mode&st){pe(!0);try{U.call(xe,v,q)}finally{pe(!1)}}tu=!1,v=ae;break e}v=U;break e;case Vf:m.flags=m.flags&-65537|128;case Eg:if(ae=U.payload,typeof ae==\"function\"){if(tu=!0,U=ae.call(xe,v,q),m.mode&st){pe(!0);try{ae.call(xe,v,q)}finally{pe(!1)}}tu=!1}else U=ae;if(U==null)break e;v=W({},v,U);break e;case Ag:ba=!0}}m=i.callback,m!==null&&(e.flags|=64,b&&(e.flags|=8192),b=l.callbacks,b===null?l.callbacks=[m]:b.push(m))}else b={lane:m,tag:i.tag,payload:i.payload,callback:i.callback,next:null},p===null?(s=p=b,c=v):p=p.next=b,o|=m;if(i=i.next,i===null){if(i=l.shared.pending,i===null)break;b=i,i=b.next,b.next=null,l.lastBaseUpdate=b,l.shared.pending=null}}while(!0);p===null&&(c=v),l.baseState=c,l.firstBaseUpdate=s,l.lastBaseUpdate=p,u===null&&(l.shared.lanes=0),Ea|=o,e.lanes=o,e.memoizedState=v}Gf=null}function kh(e,t){if(typeof e!=\"function\")throw Error(\"Invalid argument passed as callback. Expected a function. Instead received: \"+e);e.call(t)}function Hv(e,t){var n=e.shared.hiddenCallbacks;if(n!==null)for(e.shared.hiddenCallbacks=null,e=0;e<n.length;e++)kh(n[e],t)}function Xh(e,t){var n=e.callbacks;if(n!==null)for(e.callbacks=null,e=0;e<n.length;e++)kh(n[e],t)}function Qh(e,t){var n=zn;P(Ac,n,e),P(lu,t,e),zn=n|t.baseLanes}function Us(e){P(Ac,zn,e),P(lu,lu.current,e)}function js(e){zn=Ac.current,oe(lu,e),oe(Ac,e)}function ee(){var e=y;Ft===null?Ft=[e]:Ft.push(e)}function R(){var e=y;if(Ft!==null&&(Wn++,Ft[Wn]!==e)){var t=C(V);if(!Dg.has(t)&&(Dg.add(t),Ft!==null)){for(var n=\"\",a=0;a<=Wn;a++){var l=Ft[a],u=a===Wn?e:l;for(l=a+1+\". \"+l;30>l.length;)l+=\" \";l+=u+`\n`,n+=l}console.error(`React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n`,t,n)}}}function Al(e){e==null||nt(e)||console.error(\"%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.\",y,typeof e)}function Ei(){var e=C(V);Og.has(e)||(Og.add(e),console.error(\"ReactDOM.useFormState has been renamed to React.useActionState. Please update %s to use React.useActionState.\",e))}function Ue(){throw Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.`)}function Ns(e,t){if(zo)return!1;if(t===null)return console.error(\"%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.\",y),!1;e.length!==t.length&&console.error(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s`,y,\"[\"+t.join(\", \")+\"]\",\"[\"+e.join(\", \")+\"]\");for(var n=0;n<t.length&&n<e.length;n++)if(!dt(e[n],t[n]))return!1;return!0}function Hs(e,t,n,a,l,u){Sa=u,V=t,Ft=e!==null?e._debugHookTypes:null,Wn=-1,zo=e!==null&&e.type!==t.type,(Object.prototype.toString.call(n)===\"[object AsyncFunction]\"||Object.prototype.toString.call(n)===\"[object AsyncGeneratorFunction]\")&&(u=C(V),Xf.has(u)||(Xf.add(u),console.error(\"%s is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\",u===null?\"An unknown Component\":\"<\"+u+\">\"))),t.memoizedState=null,t.updateQueue=null,t.lanes=0,g.H=e!==null&&e.memoizedState!==null?Zf:Ft!==null?Mg:Qf,ol=u=(t.mode&st)!==Te;var o=$f(n,a,l);if(ol=!1,ou&&(o=_s(t,n,a,l)),u){pe(!0);try{o=_s(t,n,a,l)}finally{pe(!1)}}return Zh(e,t),o}function Zh(e,t){t._debugHookTypes=Ft,t.dependencies===null?Kn!==null&&(t.dependencies={lanes:0,firstContext:null,_debugThenableState:Kn}):t.dependencies._debugThenableState=Kn,g.H=wc;var n=ve!==null&&ve.next!==null;if(Sa=0,Ft=y=qe=ve=V=null,Wn=-1,e!==null&&(e.flags&65011712)!==(t.flags&65011712)&&console.error(\"Internal React error: Expected static flag was missing. Please notify the React team.\"),Cc=!1,Mo=0,Kn=null,n)throw Error(\"Rendered fewer hooks than expected. This may be caused by an accidental early return statement.\");e===null||$e||(e=e.dependencies,e!==null&&yi(e)&&($e=!0)),Rc?(Rc=!1,e=!0):e=!1,e&&(t=C(t)||\"Unknown\",wg.has(t)||Xf.has(t)||(wg.add(t),console.error(\"`use` was called from inside a try/catch block. This is not allowed and can lead to unexpected behavior. To handle errors triggered by `use`, wrap your component in a error boundary.\")))}function _s(e,t,n,a){V=e;var l=0;do{if(ou&&(Kn=null),Mo=0,ou=!1,l>=ix)throw Error(\"Too many re-renders. React limits the number of renders to prevent an infinite loop.\");if(l+=1,zo=!1,qe=ve=null,e.updateQueue!=null){var u=e.updateQueue;u.lastEffect=null,u.events=null,u.stores=null,u.memoCache!=null&&(u.memoCache.index=0)}Wn=-1,g.H=zg,u=$f(t,n,a)}while(ou);return u}function _v(){var e=g.H,t=e.useState()[0];return t=typeof t.then==\"function\"?Xu(t):t,e=e.useState()[0],(ve!==null?ve.memoizedState:null)!==e&&(V.flags|=1024),t}function Ls(){var e=Dc!==0;return Dc=0,e}function Bs(e,t,n){t.updateQueue=e.updateQueue,t.flags=(t.mode&sn)!==Te?t.flags&-402655237:t.flags&-2053,e.lanes&=~n}function qs(e){if(Cc){for(e=e.memoizedState;e!==null;){var t=e.queue;t!==null&&(t.pending=null),e=e.next}Cc=!1}Sa=0,Ft=qe=ve=V=null,Wn=-1,y=null,ou=!1,Mo=Dc=0,Kn=null}function St(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return qe===null?V.memoizedState=qe=e:qe=qe.next=e,qe}function he(){if(ve===null){var e=V.alternate;e=e!==null?e.memoizedState:null}else e=ve.next;var t=qe===null?V.memoizedState:qe.next;if(t!==null)qe=t,ve=e;else{if(e===null)throw V.alternate===null?Error(\"Update hook called on initial render. This is likely a bug in React. Please file an issue.\"):Error(\"Rendered more hooks than during the previous render.\");ve=e,e={memoizedState:ve.memoizedState,baseState:ve.baseState,baseQueue:ve.baseQueue,queue:ve.queue,next:null},qe===null?V.memoizedState=qe=e:qe=qe.next=e}return qe}function Ys(){return{lastEffect:null,events:null,stores:null,memoCache:null}}function Xu(e){var t=Mo;return Mo+=1,Kn===null&&(Kn=Bh()),e=Yh(Kn,e,t),t=V,(qe===null?t.memoizedState:qe.next)===null&&(t=t.alternate,g.H=t!==null&&t.memoizedState!==null?Zf:Qf),e}function oa(e){if(e!==null&&typeof e==\"object\"){if(typeof e.then==\"function\")return Xu(e);if(e.$$typeof===Tn)return Ae(e)}throw Error(\"An unsupported type was passed to use(): \"+String(e))}function $a(e){var t=null,n=V.updateQueue;if(n!==null&&(t=n.memoCache),t==null){var a=V.alternate;a!==null&&(a=a.updateQueue,a!==null&&(a=a.memoCache,a!=null&&(t={data:a.data.map(function(l){return l.slice()}),index:0})))}if(t==null&&(t={data:[],index:0}),n===null&&(n=Ys(),V.updateQueue=n),n.memoCache=t,n=t.data[t.index],n===void 0||zo)for(n=t.data[t.index]=Array(e),a=0;a<e;a++)n[a]=$b;else n.length!==e&&console.error(\"Expected a constant size argument for each invocation of useMemoCache. The previous cache was allocated with size %s but size %s was requested.\",n.length,e);return t.index++,n}function on(e,t){return typeof t==\"function\"?t(e):t}function Vs(e,t,n){var a=St();if(n!==void 0){var l=n(t);if(ol){pe(!0);try{n(t)}finally{pe(!1)}}}else l=t;return a.memoizedState=a.baseState=l,e={pending:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:l},a.queue=e,e=e.dispatch=Yv.bind(null,V,e),[a.memoizedState,e]}function Cl(e){var t=he();return Gs(t,ve,e)}function Gs(e,t,n){var a=e.queue;if(a===null)throw Error(\"Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)\");a.lastRenderedReducer=n;var l=e.baseQueue,u=a.pending;if(u!==null){if(l!==null){var o=l.next;l.next=u.next,u.next=o}t.baseQueue!==l&&console.error(\"Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.\"),t.baseQueue=l=u,a.pending=null}if(u=e.baseState,l===null)e.memoizedState=u;else{t=l.next;var i=o=null,c=null,s=t,p=!1;do{var v=s.lane&-536870913;if(v!==s.lane?(te&v)===v:(Sa&v)===v){var m=s.revertLane;if(m===0)c!==null&&(c=c.next={lane:0,revertLane:0,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null}),v===al&&(p=!0);else if((Sa&m)===m){s=s.next,m===al&&(p=!0);continue}else v={lane:0,revertLane:s.revertLane,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null},c===null?(i=c=v,o=u):c=c.next=v,V.lanes|=m,Ea|=m;v=s.action,ol&&n(u,v),u=s.hasEagerState?s.eagerState:n(u,v)}else m={lane:v,revertLane:s.revertLane,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null},c===null?(i=c=m,o=u):c=c.next=m,V.lanes|=v,Ea|=v;s=s.next}while(s!==null&&s!==t);if(c===null?o=u:c.next=i,!dt(u,e.memoizedState)&&($e=!0,p&&(n=au,n!==null)))throw n;e.memoizedState=u,e.baseState=o,e.baseQueue=c,a.lastRenderedState=u}return l===null&&(a.lanes=0),[e.memoizedState,a.dispatch]}function Qu(e){var t=he(),n=t.queue;if(n===null)throw Error(\"Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)\");n.lastRenderedReducer=e;var a=n.dispatch,l=n.pending,u=t.memoizedState;if(l!==null){n.pending=null;var o=l=l.next;do u=e(u,o.action),o=o.next;while(o!==l);dt(u,t.memoizedState)||($e=!0),t.memoizedState=u,t.baseQueue===null&&(t.baseState=u),n.lastRenderedState=u}return[u,a]}function ks(e,t,n){var a=V,l=St();if(ie){if(n===void 0)throw Error(\"Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.\");var u=n();uu||u===n()||(console.error(\"The result of getServerSnapshot should be cached to avoid an infinite loop\"),uu=!0)}else{if(u=t(),uu||(n=t(),dt(u,n)||(console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\"),uu=!0)),Se===null)throw Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");(te&124)!==0||$h(a,t,u)}return l.memoizedState=u,n={value:u,getSnapshot:t},l.queue=n,wi(Kh.bind(null,a,n,e),[e]),a.flags|=2048,wl(Wt|ke,Di(),Jh.bind(null,a,n,u,t),null),u}function Ri(e,t,n){var a=V,l=he(),u=ie;if(u){if(n===void 0)throw Error(\"Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.\");n=n()}else if(n=t(),!uu){var o=t();dt(n,o)||(console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\"),uu=!0)}(o=!dt((ve||l).memoizedState,n))&&(l.memoizedState=n,$e=!0),l=l.queue;var i=Kh.bind(null,a,l,e);if(xt(2048,ke,i,[e]),l.getSnapshot!==t||o||qe!==null&&qe.memoizedState.tag&Wt){if(a.flags|=2048,wl(Wt|ke,Di(),Jh.bind(null,a,l,n,t),null),Se===null)throw Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");u||(Sa&124)!==0||$h(a,t,n)}return n}function $h(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},t=V.updateQueue,t===null?(t=Ys(),V.updateQueue=t,t.stores=[e]):(n=t.stores,n===null?t.stores=[e]:n.push(e))}function Jh(e,t,n,a){t.value=n,t.getSnapshot=a,Wh(t)&&Fh(e)}function Kh(e,t,n){return n(function(){Wh(t)&&Fh(e)})}function Wh(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!dt(e,n)}catch{return!0}}function Fh(e){var t=bt(e,2);t!==null&&je(t,e,2)}function Xs(e){var t=St();if(typeof e==\"function\"){var n=e;if(e=n(),ol){pe(!0);try{n()}finally{pe(!1)}}}return t.memoizedState=t.baseState=e,t.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:on,lastRenderedState:e},t}function Qs(e){e=Xs(e);var t=e.queue,n=ym.bind(null,V,t);return t.dispatch=n,[e.memoizedState,n]}function Zs(e){var t=St();t.memoizedState=t.baseState=e;var n={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return t.queue=n,t=ur.bind(null,V,!0,n),n.dispatch=t,[e,t]}function Ih(e,t){var n=he();return Ph(n,ve,e,t)}function Ph(e,t,n,a){return e.baseState=n,Gs(e,ve,typeof a==\"function\"?a:on)}function em(e,t){var n=he();return ve!==null?Ph(n,ve,e,t):(n.baseState=e,[e,n.queue.dispatch])}function Lv(e,t,n,a,l){if(Ui(e))throw Error(\"Cannot update form state while rendering.\");if(e=t.action,e!==null){var u={payload:l,action:e,next:null,isTransition:!0,status:\"pending\",value:null,reason:null,listeners:[],then:function(o){u.listeners.push(o)}};g.T!==null?n(!0):u.isTransition=!1,a(u),n=t.pending,n===null?(u.next=t.pending=u,tm(t,u)):(u.next=n.next,t.pending=n.next=u)}}function tm(e,t){var n=t.action,a=t.payload,l=e.state;if(t.isTransition){var u=g.T,o={};g.T=o,g.T._updatedFibers=new Set;try{var i=n(l,a),c=g.S;c!==null&&c(o,i),nm(e,t,i)}catch(s){$s(e,t,s)}finally{g.T=u,u===null&&o._updatedFibers&&(e=o._updatedFibers.size,o._updatedFibers.clear(),10<e&&console.warn(\"Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.\"))}}else try{o=n(l,a),nm(e,t,o)}catch(s){$s(e,t,s)}}function nm(e,t,n){n!==null&&typeof n==\"object\"&&typeof n.then==\"function\"?(n.then(function(a){am(e,t,a)},function(a){return $s(e,t,a)}),t.isTransition||console.error(\"An async function with useActionState was called outside of a transition. This is likely not what you intended (for example, isPending will not update correctly). Either call the returned function inside startTransition, or pass it to an `action` or `formAction` prop.\")):am(e,t,n)}function am(e,t,n){t.status=\"fulfilled\",t.value=n,lm(t),e.state=n,t=e.pending,t!==null&&(n=t.next,n===t?e.pending=null:(n=n.next,t.next=n,tm(e,n)))}function $s(e,t,n){var a=e.pending;if(e.pending=null,a!==null){a=a.next;do t.status=\"rejected\",t.reason=n,lm(t),t=t.next;while(t!==a)}e.action=null}function lm(e){e=e.listeners;for(var t=0;t<e.length;t++)(0,e[t])()}function um(e,t){return t}function Dl(e,t){if(ie){var n=Se.formState;if(n!==null){e:{var a=V;if(ie){if(we){t:{for(var l=we,u=wn;l.nodeType!==8;){if(!u){l=null;break t}if(l=Gt(l.nextSibling),l===null){l=null;break t}}u=l.data,l=u===bd||u===O0?l:null}if(l){we=Gt(l.nextSibling),a=l.data===bd;break e}}Xa(a)}a=!1}a&&(t=n[0])}}return n=St(),n.memoizedState=n.baseState=t,a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:um,lastRenderedState:t},n.queue=a,n=ym.bind(null,V,a),a.dispatch=n,a=Xs(!1),u=ur.bind(null,V,!1,a.queue),a=St(),l={state:t,dispatch:null,action:e,pending:null},a.queue=l,n=Lv.bind(null,V,l,u,n),l.dispatch=n,a.memoizedState=e,[t,n,!1]}function Ai(e){var t=he();return om(t,ve,e)}function om(e,t,n){if(t=Gs(e,t,um)[0],e=Cl(on)[0],typeof t==\"object\"&&t!==null&&typeof t.then==\"function\")try{var a=Xu(t)}catch(o){throw o===wo?Ec:o}else a=t;t=he();var l=t.queue,u=l.dispatch;return n!==t.memoizedState&&(V.flags|=2048,wl(Wt|ke,Di(),Bv.bind(null,l,n),null)),[a,u,e]}function Bv(e,t){e.action=t}function Ci(e){var t=he(),n=ve;if(n!==null)return om(t,n,e);he(),t=t.memoizedState,n=he();var a=n.queue.dispatch;return n.memoizedState=e,[t,a,!1]}function wl(e,t,n,a){return e={tag:e,create:n,deps:a,inst:t,next:null},t=V.updateQueue,t===null&&(t=Ys(),V.updateQueue=t),n=t.lastEffect,n===null?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Di(){return{destroy:void 0,resource:void 0}}function Js(e){var t=St();return e={current:e},t.memoizedState=e}function Ja(e,t,n,a){var l=St();a=a===void 0?null:a,V.flags|=e,l.memoizedState=wl(Wt|t,Di(),n,a)}function xt(e,t,n,a){var l=he();a=a===void 0?null:a;var u=l.memoizedState.inst;ve!==null&&a!==null&&Ns(a,ve.memoizedState.deps)?l.memoizedState=wl(t,u,n,a):(V.flags|=e,l.memoizedState=wl(Wt|t,u,n,a))}function wi(e,t){(V.mode&sn)!==Te&&(V.mode&hg)===Te?Ja(276826112,ke,e,t):Ja(8390656,ke,e,t)}function Ks(e,t){var n=4194308;return(V.mode&sn)!==Te&&(n|=134217728),Ja(n,lt,e,t)}function im(e,t){if(typeof t==\"function\"){e=e();var n=t(e);return function(){typeof n==\"function\"?n():t(null)}}if(t!=null)return t.hasOwnProperty(\"current\")||console.error(\"Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.\",\"an object with keys {\"+Object.keys(t).join(\", \")+\"}\"),e=e(),t.current=e,function(){t.current=null}}function Ws(e,t,n){typeof t!=\"function\"&&console.error(\"Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.\",t!==null?typeof t:\"null\"),n=n!=null?n.concat([e]):null;var a=4194308;(V.mode&sn)!==Te&&(a|=134217728),Ja(a,lt,im.bind(null,t,e),n)}function Oi(e,t,n){typeof t!=\"function\"&&console.error(\"Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.\",t!==null?typeof t:\"null\"),n=n!=null?n.concat([e]):null,xt(4,lt,im.bind(null,t,e),n)}function Fs(e,t){return St().memoizedState=[e,t===void 0?null:t],e}function Mi(e,t){var n=he();t=t===void 0?null:t;var a=n.memoizedState;return t!==null&&Ns(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Is(e,t){var n=St();t=t===void 0?null:t;var a=e();if(ol){pe(!0);try{e()}finally{pe(!1)}}return n.memoizedState=[a,t],a}function zi(e,t){var n=he();t=t===void 0?null:t;var a=n.memoizedState;if(t!==null&&Ns(t,a[1]))return a[0];if(a=e(),ol){pe(!0);try{e()}finally{pe(!1)}}return n.memoizedState=[a,t],a}function Ps(e,t){var n=St();return er(n,e,t)}function cm(e,t){var n=he();return rm(n,ve.memoizedState,e,t)}function sm(e,t){var n=he();return ve===null?er(n,e,t):rm(n,ve.memoizedState,e,t)}function er(e,t,n){return n===void 0||(Sa&1073741824)!==0?e.memoizedState=t:(e.memoizedState=n,e=fp(),V.lanes|=e,Ea|=e,n)}function rm(e,t,n,a){return dt(n,t)?n:lu.current!==null?(e=er(e,n,a),dt(e,t)||($e=!0),e):(Sa&42)===0?($e=!0,e.memoizedState=n):(e=fp(),V.lanes|=e,Ea|=e,t)}function fm(e,t,n,a,l){var u=se.p;se.p=u!==0&&u<An?u:An;var o=g.T,i={};g.T=i,ur(e,!1,t,n),i._updatedFibers=new Set;try{var c=l(),s=g.S;if(s!==null&&s(i,c),c!==null&&typeof c==\"object\"&&typeof c.then==\"function\"){var p=Nv(c,a);Zu(e,t,p,zt(e))}else Zu(e,t,a,zt(e))}catch(v){Zu(e,t,{then:function(){},status:\"rejected\",reason:v},zt(e))}finally{se.p=u,g.T=o,o===null&&i._updatedFibers&&(e=i._updatedFibers.size,i._updatedFibers.clear(),10<e&&console.warn(\"Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.\"))}}function tr(e,t,n,a){if(e.tag!==5)throw Error(\"Expected the form instance to be a HostComponent. This is a bug in React.\");var l=dm(e).queue;fm(e,l,t,gl,n===null?Ke:function(){return hm(e),n(a)})}function dm(e){var t=e.memoizedState;if(t!==null)return t;t={memoizedState:gl,baseState:gl,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:on,lastRenderedState:gl},next:null};var n={};return t.next={memoizedState:n,baseState:n,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:on,lastRenderedState:n},next:null},e.memoizedState=t,e=e.alternate,e!==null&&(e.memoizedState=t),t}function hm(e){g.T===null&&console.error(\"requestFormReset was called outside a transition or action. To fix, move to an action, or wrap with startTransition.\");var t=dm(e).next.queue;Zu(e,t,{},zt(e))}function nr(){var e=Xs(!1);return e=fm.bind(null,V,e.queue,!0,!1),St().memoizedState=e,[!1,e]}function mm(){var e=Cl(on)[0],t=he().memoizedState;return[typeof e==\"boolean\"?e:Xu(e),t]}function pm(){var e=Qu(on)[0],t=he().memoizedState;return[typeof e==\"boolean\"?e:Xu(e),t]}function Ka(){return Ae(Jo)}function ar(){var e=St(),t=Se.identifierPrefix;if(ie){var n=$n,a=Zn;n=(a&~(1<<32-rt(a)-1)).toString(32)+n,t=\"«\"+t+\"R\"+n,n=Dc++,0<n&&(t+=\"H\"+n.toString(32)),t+=\"»\"}else n=ox++,t=\"«\"+t+\"r\"+n.toString(32)+\"»\";return e.memoizedState=t}function lr(){return St().memoizedState=qv.bind(null,V)}function qv(e,t){for(var n=e.return;n!==null;){switch(n.tag){case 24:case 3:var a=zt(n);e=la(a);var l=ua(n,e,a);l!==null&&(je(l,n,a),Vu(l,n,a)),n=Cs(),t!=null&&l!==null&&console.error(\"The seed argument is not enabled outside experimental channels.\"),e.payload={cache:n};return}n=n.return}}function Yv(e,t,n){var a=arguments;typeof a[3]==\"function\"&&console.error(\"State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().\"),a=zt(e);var l={lane:a,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null};Ui(e)?gm(t,l):(l=ms(e,t,l,a),l!==null&&(je(l,e,a),vm(l,t,a))),Ru(e,a)}function ym(e,t,n){var a=arguments;typeof a[3]==\"function\"&&console.error(\"State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().\"),a=zt(e),Zu(e,t,n,a),Ru(e,a)}function Zu(e,t,n,a){var l={lane:a,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null};if(Ui(e))gm(t,l);else{var u=e.alternate;if(e.lanes===0&&(u===null||u.lanes===0)&&(u=t.lastRenderedReducer,u!==null)){var o=g.H;g.H=fn;try{var i=t.lastRenderedState,c=u(i,n);if(l.hasEagerState=!0,l.eagerState=c,dt(c,i))return di(e,t,l,0),Se===null&&fi(),!1}catch{}finally{g.H=o}}if(n=ms(e,t,l,a),n!==null)return je(n,e,a),vm(n,t,a),!0}return!1}function ur(e,t,n,a){if(g.T===null&&al===0&&console.error(\"An optimistic state update occurred outside a transition or action. To fix, move the update to an action, or wrap with startTransition.\"),a={lane:2,revertLane:_r(),action:a,hasEagerState:!1,eagerState:null,next:null},Ui(e)){if(t)throw Error(\"Cannot update optimistic state while rendering.\");console.error(\"Cannot call startTransition while rendering.\")}else t=ms(e,n,a,2),t!==null&&je(t,e,2);Ru(e,2)}function Ui(e){var t=e.alternate;return e===V||t!==null&&t===V}function gm(e,t){ou=Cc=!0;var n=e.pending;n===null?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function vm(e,t,n){if((n&4194048)!==0){var a=t.lanes;a&=e.pendingLanes,n|=a,t.lanes=n,Nd(e,n)}}function Pe(e){var t=K;return e!=null&&(K=t===null?e:t.concat(e)),t}function ji(e,t,n){for(var a=Object.keys(e.props),l=0;l<a.length;l++){var u=a[l];if(u!==\"children\"&&u!==\"key\"){t===null&&(t=mi(e,n.mode,0),t._debugInfo=K,t.return=n),H(t,function(o){console.error(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",o)},u);break}}}function Ni(e){var t=Uo;return Uo+=1,iu===null&&(iu=Bh()),Yh(iu,e,t)}function $u(e,t){t=t.props.ref,e.ref=t!==void 0?t:null}function Hi(e,t){throw t.$$typeof===Qb?Error(`A React Element from an older version of React was rendered. This is not supported. It can happen if:\n- Multiple copies of the \"react\" package is used.\n- A library pre-bundled an old copy of \"react\" or \"react/jsx-runtime\".\n- A compiler tries to \"inline\" JSX instead of using the runtime.`):(e=Object.prototype.toString.call(t),Error(\"Objects are not valid as a React child (found: \"+(e===\"[object Object]\"?\"object with keys {\"+Object.keys(t).join(\", \")+\"}\":e)+\"). If you meant to render a collection of children, use an array instead.\"))}function _i(e,t){var n=C(e)||\"Component\";Zg[n]||(Zg[n]=!0,t=t.displayName||t.name||\"Component\",e.tag===3?console.error(`Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  root.render(%s)`,t,t,t):console.error(`Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  <%s>{%s}</%s>`,t,t,n,t,n))}function Li(e,t){var n=C(e)||\"Component\";$g[n]||($g[n]=!0,t=String(t),e.tag===3?console.error(`Symbols are not valid as a React child.\n  root.render(%s)`,t):console.error(`Symbols are not valid as a React child.\n  <%s>%s</%s>`,n,t,n))}function bm(e){function t(f,d){if(e){var h=f.deletions;h===null?(f.deletions=[d],f.flags|=16):h.push(d)}}function n(f,d){if(!e)return null;for(;d!==null;)t(f,d),d=d.sibling;return null}function a(f){for(var d=new Map;f!==null;)f.key!==null?d.set(f.key,f):d.set(f.index,f),f=f.sibling;return d}function l(f,d){return f=jn(f,d),f.index=0,f.sibling=null,f}function u(f,d,h){return f.index=h,e?(h=f.alternate,h!==null?(h=h.index,h<d?(f.flags|=67108866,d):h):(f.flags|=67108866,d)):(f.flags|=1048576,d)}function o(f){return e&&f.alternate===null&&(f.flags|=67108866),f}function i(f,d,h,S){return d===null||d.tag!==6?(d=bs(h,f.mode,S),d.return=f,d._debugOwner=f,d._debugTask=f._debugTask,d._debugInfo=K,d):(d=l(d,h),d.return=f,d._debugInfo=K,d)}function c(f,d,h,S){var A=h.type;return A===ql?(d=p(f,d,h.props.children,S,h.key),ji(h,d,f),d):d!==null&&(d.elementType===A||Ch(d,h)||typeof A==\"object\"&&A!==null&&A.$$typeof===Ut&&xa(A)===d.type)?(d=l(d,h.props),$u(d,h),d.return=f,d._debugOwner=h._owner,d._debugInfo=K,d):(d=mi(h,f.mode,S),$u(d,h),d.return=f,d._debugInfo=K,d)}function s(f,d,h,S){return d===null||d.tag!==4||d.stateNode.containerInfo!==h.containerInfo||d.stateNode.implementation!==h.implementation?(d=Ss(h,f.mode,S),d.return=f,d._debugInfo=K,d):(d=l(d,h.children||[]),d.return=f,d._debugInfo=K,d)}function p(f,d,h,S,A){return d===null||d.tag!==7?(d=Ya(h,f.mode,S,A),d.return=f,d._debugOwner=f,d._debugTask=f._debugTask,d._debugInfo=K,d):(d=l(d,h),d.return=f,d._debugInfo=K,d)}function v(f,d,h){if(typeof d==\"string\"&&d!==\"\"||typeof d==\"number\"||typeof d==\"bigint\")return d=bs(\"\"+d,f.mode,h),d.return=f,d._debugOwner=f,d._debugTask=f._debugTask,d._debugInfo=K,d;if(typeof d==\"object\"&&d!==null){switch(d.$$typeof){case da:return h=mi(d,f.mode,h),$u(h,d),h.return=f,f=Pe(d._debugInfo),h._debugInfo=K,K=f,h;case Bl:return d=Ss(d,f.mode,h),d.return=f,d._debugInfo=K,d;case Ut:var S=Pe(d._debugInfo);return d=xa(d),f=v(f,d,h),K=S,f}if(nt(d)||ot(d))return h=Ya(d,f.mode,h,null),h.return=f,h._debugOwner=f,h._debugTask=f._debugTask,f=Pe(d._debugInfo),h._debugInfo=K,K=f,h;if(typeof d.then==\"function\")return S=Pe(d._debugInfo),f=v(f,Ni(d),h),K=S,f;if(d.$$typeof===Tn)return v(f,gi(f,d),h);Hi(f,d)}return typeof d==\"function\"&&_i(f,d),typeof d==\"symbol\"&&Li(f,d),null}function m(f,d,h,S){var A=d!==null?d.key:null;if(typeof h==\"string\"&&h!==\"\"||typeof h==\"number\"||typeof h==\"bigint\")return A!==null?null:i(f,d,\"\"+h,S);if(typeof h==\"object\"&&h!==null){switch(h.$$typeof){case da:return h.key===A?(A=Pe(h._debugInfo),f=c(f,d,h,S),K=A,f):null;case Bl:return h.key===A?s(f,d,h,S):null;case Ut:return A=Pe(h._debugInfo),h=xa(h),f=m(f,d,h,S),K=A,f}if(nt(h)||ot(h))return A!==null?null:(A=Pe(h._debugInfo),f=p(f,d,h,S,null),K=A,f);if(typeof h.then==\"function\")return A=Pe(h._debugInfo),f=m(f,d,Ni(h),S),K=A,f;if(h.$$typeof===Tn)return m(f,d,gi(f,h),S);Hi(f,h)}return typeof h==\"function\"&&_i(f,h),typeof h==\"symbol\"&&Li(f,h),null}function b(f,d,h,S,A){if(typeof S==\"string\"&&S!==\"\"||typeof S==\"number\"||typeof S==\"bigint\")return f=f.get(h)||null,i(d,f,\"\"+S,A);if(typeof S==\"object\"&&S!==null){switch(S.$$typeof){case da:return h=f.get(S.key===null?h:S.key)||null,f=Pe(S._debugInfo),d=c(d,h,S,A),K=f,d;case Bl:return f=f.get(S.key===null?h:S.key)||null,s(d,f,S,A);case Ut:var Q=Pe(S._debugInfo);return S=xa(S),d=b(f,d,h,S,A),K=Q,d}if(nt(S)||ot(S))return h=f.get(h)||null,f=Pe(S._debugInfo),d=p(d,h,S,A,null),K=f,d;if(typeof S.then==\"function\")return Q=Pe(S._debugInfo),d=b(f,d,h,Ni(S),A),K=Q,d;if(S.$$typeof===Tn)return b(f,d,h,gi(d,S),A);Hi(d,S)}return typeof S==\"function\"&&_i(d,S),typeof S==\"symbol\"&&Li(d,S),null}function U(f,d,h,S){if(typeof h!=\"object\"||h===null)return S;switch(h.$$typeof){case da:case Bl:De(f,d,h);var A=h.key;if(typeof A!=\"string\")break;if(S===null){S=new Set,S.add(A);break}if(!S.has(A)){S.add(A);break}H(d,function(){console.error(\"Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version.\",A)});break;case Ut:h=xa(h),U(f,d,h,S)}return S}function q(f,d,h,S){for(var A=null,Q=null,j=null,Z=d,$=d=0,Ee=null;Z!==null&&$<h.length;$++){Z.index>$?(Ee=Z,Z=null):Ee=Z.sibling;var He=m(f,Z,h[$],S);if(He===null){Z===null&&(Z=Ee);break}A=U(f,He,h[$],A),e&&Z&&He.alternate===null&&t(f,Z),d=u(He,d,$),j===null?Q=He:j.sibling=He,j=He,Z=Ee}if($===h.length)return n(f,Z),ie&&Va(f,$),Q;if(Z===null){for(;$<h.length;$++)Z=v(f,h[$],S),Z!==null&&(A=U(f,Z,h[$],A),d=u(Z,d,$),j===null?Q=Z:j.sibling=Z,j=Z);return ie&&Va(f,$),Q}for(Z=a(Z);$<h.length;$++)Ee=b(Z,f,$,h[$],S),Ee!==null&&(A=U(f,Ee,h[$],A),e&&Ee.alternate!==null&&Z.delete(Ee.key===null?$:Ee.key),d=u(Ee,d,$),j===null?Q=Ee:j.sibling=Ee,j=Ee);return e&&Z.forEach(function(na){return t(f,na)}),ie&&Va(f,$),Q}function xe(f,d,h,S){if(h==null)throw Error(\"An iterable object provided no iterator.\");for(var A=null,Q=null,j=d,Z=d=0,$=null,Ee=null,He=h.next();j!==null&&!He.done;Z++,He=h.next()){j.index>Z?($=j,j=null):$=j.sibling;var na=m(f,j,He.value,S);if(na===null){j===null&&(j=$);break}Ee=U(f,na,He.value,Ee),e&&j&&na.alternate===null&&t(f,j),d=u(na,d,Z),Q===null?A=na:Q.sibling=na,Q=na,j=$}if(He.done)return n(f,j),ie&&Va(f,Z),A;if(j===null){for(;!He.done;Z++,He=h.next())j=v(f,He.value,S),j!==null&&(Ee=U(f,j,He.value,Ee),d=u(j,d,Z),Q===null?A=j:Q.sibling=j,Q=j);return ie&&Va(f,Z),A}for(j=a(j);!He.done;Z++,He=h.next())$=b(j,f,Z,He.value,S),$!==null&&(Ee=U(f,$,He.value,Ee),e&&$.alternate!==null&&j.delete($.key===null?Z:$.key),d=u($,d,Z),Q===null?A=$:Q.sibling=$,Q=$);return e&&j.forEach(function(jx){return t(f,jx)}),ie&&Va(f,Z),A}function ae(f,d,h,S){if(typeof h==\"object\"&&h!==null&&h.type===ql&&h.key===null&&(ji(h,null,f),h=h.props.children),typeof h==\"object\"&&h!==null){switch(h.$$typeof){case da:var A=Pe(h._debugInfo);e:{for(var Q=h.key;d!==null;){if(d.key===Q){if(Q=h.type,Q===ql){if(d.tag===7){n(f,d.sibling),S=l(d,h.props.children),S.return=f,S._debugOwner=h._owner,S._debugInfo=K,ji(h,S,f),f=S;break e}}else if(d.elementType===Q||Ch(d,h)||typeof Q==\"object\"&&Q!==null&&Q.$$typeof===Ut&&xa(Q)===d.type){n(f,d.sibling),S=l(d,h.props),$u(S,h),S.return=f,S._debugOwner=h._owner,S._debugInfo=K,f=S;break e}n(f,d);break}else t(f,d);d=d.sibling}h.type===ql?(S=Ya(h.props.children,f.mode,S,h.key),S.return=f,S._debugOwner=f,S._debugTask=f._debugTask,S._debugInfo=K,ji(h,S,f),f=S):(S=mi(h,f.mode,S),$u(S,h),S.return=f,S._debugInfo=K,f=S)}return f=o(f),K=A,f;case Bl:e:{for(A=h,h=A.key;d!==null;){if(d.key===h)if(d.tag===4&&d.stateNode.containerInfo===A.containerInfo&&d.stateNode.implementation===A.implementation){n(f,d.sibling),S=l(d,A.children||[]),S.return=f,f=S;break e}else{n(f,d);break}else t(f,d);d=d.sibling}S=Ss(A,f.mode,S),S.return=f,f=S}return o(f);case Ut:return A=Pe(h._debugInfo),h=xa(h),f=ae(f,d,h,S),K=A,f}if(nt(h))return A=Pe(h._debugInfo),f=q(f,d,h,S),K=A,f;if(ot(h)){if(A=Pe(h._debugInfo),Q=ot(h),typeof Q!=\"function\")throw Error(\"An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.\");var j=Q.call(h);return j===h?(f.tag!==0||Object.prototype.toString.call(f.type)!==\"[object GeneratorFunction]\"||Object.prototype.toString.call(j)!==\"[object Generator]\")&&(Xg||console.error(\"Using Iterators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. You can also use an Iterable that can iterate multiple times over the same items.\"),Xg=!0):h.entries!==Q||Kf||(console.error(\"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\"),Kf=!0),f=xe(f,d,j,S),K=A,f}if(typeof h.then==\"function\")return A=Pe(h._debugInfo),f=ae(f,d,Ni(h),S),K=A,f;if(h.$$typeof===Tn)return ae(f,d,gi(f,h),S);Hi(f,h)}return typeof h==\"string\"&&h!==\"\"||typeof h==\"number\"||typeof h==\"bigint\"?(A=\"\"+h,d!==null&&d.tag===6?(n(f,d.sibling),S=l(d,A),S.return=f,f=S):(n(f,d),S=bs(A,f.mode,S),S.return=f,S._debugOwner=f,S._debugTask=f._debugTask,S._debugInfo=K,f=S),o(f)):(typeof h==\"function\"&&_i(f,h),typeof h==\"symbol\"&&Li(f,h),n(f,d))}return function(f,d,h,S){var A=K;K=null;try{Uo=0;var Q=ae(f,d,h,S);return iu=null,Q}catch(Ee){if(Ee===wo||Ee===Ec)throw Ee;var j=G(29,Ee,null,f.mode);j.lanes=S,j.return=f;var Z=j._debugInfo=K;if(j._debugOwner=f._debugOwner,j._debugTask=f._debugTask,Z!=null){for(var $=Z.length-1;0<=$;$--)if(typeof Z[$].stack==\"string\"){j._debugOwner=Z[$],j._debugTask=Z[$].debugTask;break}}return j}finally{K=A}}}function ia(e){var t=e.alternate;P(Xe,Xe.current&su,e),P(It,e,e),Mn===null&&(t===null||lu.current!==null||t.memoizedState!==null)&&(Mn=e)}function Sm(e){if(e.tag===22){if(P(Xe,Xe.current,e),P(It,e,e),Mn===null){var t=e.alternate;t!==null&&t.memoizedState!==null&&(Mn=e)}}else ca(e)}function ca(e){P(Xe,Xe.current,e),P(It,It.current,e)}function _n(e){oe(It,e),Mn===e&&(Mn=null),oe(Xe,e)}function Bi(e){for(var t=e;t!==null;){if(t.tag===13){var n=t.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data===Pn||$r(n)))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if((t.flags&128)!==0)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function or(e){if(e!==null&&typeof e!=\"function\"){var t=String(e);u0.has(t)||(u0.add(t),console.error(\"Expected the last optional `callback` argument to be a function. Instead received: %s.\",e))}}function ir(e,t,n,a){var l=e.memoizedState,u=n(a,l);if(e.mode&st){pe(!0);try{u=n(a,l)}finally{pe(!1)}}u===void 0&&(t=ce(t)||\"Component\",t0.has(t)||(t0.add(t),console.error(\"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.\",t))),l=u==null?l:W({},l,u),e.memoizedState=l,e.lanes===0&&(e.updateQueue.baseState=l)}function xm(e,t,n,a,l,u,o){var i=e.stateNode;if(typeof i.shouldComponentUpdate==\"function\"){if(n=i.shouldComponentUpdate(a,u,o),e.mode&st){pe(!0);try{n=i.shouldComponentUpdate(a,u,o)}finally{pe(!1)}}return n===void 0&&console.error(\"%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.\",ce(t)||\"Component\"),n}return t.prototype&&t.prototype.isPureReactComponent?!Nu(n,a)||!Nu(l,u):!0}function Tm(e,t,n,a){var l=t.state;typeof t.componentWillReceiveProps==\"function\"&&t.componentWillReceiveProps(n,a),typeof t.UNSAFE_componentWillReceiveProps==\"function\"&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==l&&(e=C(e)||\"Component\",Wg.has(e)||(Wg.add(e),console.error(\"%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.\",e)),Wf.enqueueReplaceState(t,t.state,null))}function Wa(e,t){var n=t;if(\"ref\"in t){n={};for(var a in t)a!==\"ref\"&&(n[a]=t[a])}if(e=e.defaultProps){n===t&&(n=W({},n));for(var l in e)n[l]===void 0&&(n[l]=e[l])}return n}function Em(e){Ff(e),console.warn(`%s\n\n%s\n`,ru?\"An error occurred in the <\"+ru+\"> component.\":\"An error occurred in one of your React components.\",`Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://react.dev/link/error-boundaries to learn more about error boundaries.`)}function Rm(e){var t=ru?\"The above error occurred in the <\"+ru+\"> component.\":\"The above error occurred in one of your React components.\",n=\"React will try to recreate this component tree from scratch using the error boundary you provided, \"+((If||\"Anonymous\")+\".\");if(typeof e==\"object\"&&e!==null&&typeof e.environmentName==\"string\"){var a=e.environmentName;e=[`%o\n\n%s\n\n%s\n`,e,t,n].slice(0),typeof e[0]==\"string\"?e.splice(0,1,L0+e[0],B0,$c+a+$c,q0):e.splice(0,0,L0,B0,$c+a+$c,q0),e.unshift(console),a=zx.apply(console.error,e),a()}else console.error(`%o\n\n%s\n\n%s\n`,e,t,n)}function Am(e){Ff(e)}function qi(e,t){try{ru=t.source?C(t.source):null,If=null;var n=t.value;if(g.actQueue!==null)g.thrownErrors.push(n);else{var a=e.onUncaughtError;a(n,{componentStack:t.stack})}}catch(l){setTimeout(function(){throw l})}}function Cm(e,t,n){try{ru=n.source?C(n.source):null,If=C(t);var a=e.onCaughtError;a(n.value,{componentStack:n.stack,errorBoundary:t.tag===1?t.stateNode:null})}catch(l){setTimeout(function(){throw l})}}function cr(e,t,n){return n=la(n),n.tag=Vf,n.payload={element:null},n.callback=function(){H(t.source,qi,e,t)},n}function sr(e){return e=la(e),e.tag=Vf,e}function rr(e,t,n,a){var l=n.type.getDerivedStateFromError;if(typeof l==\"function\"){var u=a.value;e.payload=function(){return l(u)},e.callback=function(){Dh(n),H(a.source,Cm,t,n,a)}}var o=n.stateNode;o!==null&&typeof o.componentDidCatch==\"function\"&&(e.callback=function(){Dh(n),H(a.source,Cm,t,n,a),typeof l!=\"function\"&&(Aa===null?Aa=new Set([this]):Aa.add(this)),cx(this,a),typeof l==\"function\"||(n.lanes&2)===0&&console.error(\"%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.\",C(n)||\"Unknown\")})}function Vv(e,t,n,a,l){if(n.flags|=32768,cn&&eo(e,l),a!==null&&typeof a==\"object\"&&typeof a.then==\"function\"){if(t=n.alternate,t!==null&&Bu(t,n,l,!0),ie&&(Jn=!0),n=It.current,n!==null){switch(n.tag){case 13:return Mn===null?Or():n.alternate===null&&Oe===In&&(Oe=nd),n.flags&=-257,n.flags|=65536,n.lanes=l,a===Yf?n.flags|=16384:(t=n.updateQueue,t===null?n.updateQueue=new Set([a]):t.add(a),Ur(e,a,l)),!1;case 22:return n.flags|=65536,a===Yf?n.flags|=16384:(t=n.updateQueue,t===null?(t={transitions:null,markerInstances:null,retryQueue:new Set([a])},n.updateQueue=t):(n=t.retryQueue,n===null?t.retryQueue=new Set([a]):n.add(a)),Ur(e,a,l)),!1}throw Error(\"Unexpected Suspense handler tag (\"+n.tag+\"). This is a bug in React.\")}return Ur(e,a,l),Or(),!1}if(ie)return Jn=!0,t=It.current,t!==null?((t.flags&65536)===0&&(t.flags|=256),t.flags|=65536,t.lanes=l,a!==_f&&Lu(wt(Error(\"There was an error while hydrating but React was able to recover by instead client rendering from the nearest Suspense boundary.\",{cause:a}),n))):(a!==_f&&Lu(wt(Error(\"There was an error while hydrating but React was able to recover by instead client rendering the entire root.\",{cause:a}),n)),e=e.current.alternate,e.flags|=65536,l&=-l,e.lanes|=l,a=wt(a,n),l=cr(e.stateNode,a,l),Ti(e,l),Oe!==il&&(Oe=mu)),!1;var u=wt(Error(\"There was an error during concurrent rendering but React was able to recover by instead synchronously rendering the entire root.\",{cause:a}),n);if(Yo===null?Yo=[u]:Yo.push(u),Oe!==il&&(Oe=mu),t===null)return!0;a=wt(a,n),n=t;do{switch(n.tag){case 3:return n.flags|=65536,e=l&-l,n.lanes|=e,e=cr(n.stateNode,a,e),Ti(n,e),!1;case 1:if(t=n.type,u=n.stateNode,(n.flags&128)===0&&(typeof t.getDerivedStateFromError==\"function\"||u!==null&&typeof u.componentDidCatch==\"function\"&&(Aa===null||!Aa.has(u))))return n.flags|=65536,l&=-l,n.lanes|=l,l=sr(l),rr(l,e,n,a),Ti(n,l),!1}n=n.return}while(n!==null);return!1}function et(e,t,n,a){t.child=e===null?Jg(t,null,n,a):cu(t,e.child,n,a)}function Dm(e,t,n,a,l){n=n.render;var u=t.ref;if(\"ref\"in a){var o={};for(var i in a)i!==\"ref\"&&(o[i]=a[i])}else o=a;return Qa(t),Lt(t),a=Hs(e,t,n,o,u,l),i=Ls(),mn(),e!==null&&!$e?(Bs(e,t,l),Ln(e,t,l)):(ie&&i&&xs(t),t.flags|=1,et(e,t,a,l),t.child)}function wm(e,t,n,a,l){if(e===null){var u=n.type;return typeof u==\"function\"&&!gs(u)&&u.defaultProps===void 0&&n.compare===null?(n=qa(u),t.tag=15,t.type=n,dr(t,u),Om(e,t,n,a,l)):(e=vs(n.type,null,a,t,t.mode,l),e.ref=t.ref,e.return=t,t.child=e)}if(u=e.child,!vr(e,l)){var o=u.memoizedProps;if(n=n.compare,n=n!==null?n:Nu,n(o,a)&&e.ref===t.ref)return Ln(e,t,l)}return t.flags|=1,e=jn(u,a),e.ref=t.ref,e.return=t,t.child=e}function Om(e,t,n,a,l){if(e!==null){var u=e.memoizedProps;if(Nu(u,a)&&e.ref===t.ref&&t.type===e.type)if($e=!1,t.pendingProps=a=u,vr(e,l))(e.flags&131072)!==0&&($e=!0);else return t.lanes=e.lanes,Ln(e,t,l)}return fr(e,t,n,a,l)}function Mm(e,t,n){var a=t.pendingProps,l=a.children,u=e!==null?e.memoizedState:null;if(a.mode===\"hidden\"){if((t.flags&128)!==0){if(a=u!==null?u.baseLanes|n:n,e!==null){for(l=t.child=e.child,u=0;l!==null;)u=u|l.lanes|l.childLanes,l=l.sibling;t.childLanes=u&~a}else t.childLanes=0,t.child=null;return zm(e,t,a,n)}if((n&536870912)!==0)t.memoizedState={baseLanes:0,cachePool:null},e!==null&&Si(t,u!==null?u.cachePool:null),u!==null?Qh(t,u):Us(t),Sm(t);else return t.lanes=t.childLanes=536870912,zm(e,t,u!==null?u.baseLanes|n:n,n)}else u!==null?(Si(t,u.cachePool),Qh(t,u),ca(t),t.memoizedState=null):(e!==null&&Si(t,null),Us(t),ca(t));return et(e,t,l,n),t.child}function zm(e,t,n,a){var l=Os();return l=l===null?null:{parent:Ge._currentValue,pool:l},t.memoizedState={baseLanes:n,cachePool:l},e!==null&&Si(t,null),Us(t),Sm(t),e!==null&&Bu(e,t,a,!0),null}function Yi(e,t){var n=t.ref;if(n===null)e!==null&&e.ref!==null&&(t.flags|=4194816);else{if(typeof n!=\"function\"&&typeof n!=\"object\")throw Error(\"Expected ref to be a function, an object returned by React.createRef(), or undefined/null.\");(e===null||e.ref!==n)&&(t.flags|=4194816)}}function fr(e,t,n,a,l){if(n.prototype&&typeof n.prototype.render==\"function\"){var u=ce(n)||\"Unknown\";i0[u]||(console.error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.\",u,u),i0[u]=!0)}return t.mode&st&&rn.recordLegacyContextWarning(t,null),e===null&&(dr(t,t.type),n.contextTypes&&(u=ce(n)||\"Unknown\",s0[u]||(s0[u]=!0,console.error(\"%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with React.useContext() instead. (https://react.dev/link/legacy-context)\",u)))),Qa(t),Lt(t),n=Hs(e,t,n,a,void 0,l),a=Ls(),mn(),e!==null&&!$e?(Bs(e,t,l),Ln(e,t,l)):(ie&&a&&xs(t),t.flags|=1,et(e,t,n,l),t.child)}function Um(e,t,n,a,l,u){return Qa(t),Lt(t),Wn=-1,zo=e!==null&&e.type!==t.type,t.updateQueue=null,n=_s(t,a,n,l),Zh(e,t),a=Ls(),mn(),e!==null&&!$e?(Bs(e,t,u),Ln(e,t,u)):(ie&&a&&xs(t),t.flags|=1,et(e,t,n,u),t.child)}function jm(e,t,n,a,l){switch(J(t)){case!1:var u=t.stateNode,o=new t.type(t.memoizedProps,u.context).state;u.updater.enqueueSetState(u,o,null);break;case!0:t.flags|=128,t.flags|=65536,u=Error(\"Simulated error coming from DevTools\");var i=l&-l;if(t.lanes|=i,o=Se,o===null)throw Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");i=sr(i),rr(i,o,t,wt(u,t)),Ti(t,i)}if(Qa(t),t.stateNode===null){if(o=va,u=n.contextType,\"contextType\"in n&&u!==null&&(u===void 0||u.$$typeof!==Tn)&&!l0.has(n)&&(l0.add(n),i=u===void 0?\" However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.\":typeof u!=\"object\"?\" However, it is set to a \"+typeof u+\".\":u.$$typeof===uf?\" Did you accidentally pass the Context.Consumer instead?\":\" However, it is set to an object with keys {\"+Object.keys(u).join(\", \")+\"}.\",console.error(\"%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s\",ce(n)||\"Component\",i)),typeof u==\"object\"&&u!==null&&(o=Ae(u)),u=new n(a,o),t.mode&st){pe(!0);try{u=new n(a,o)}finally{pe(!1)}}if(o=t.memoizedState=u.state!==null&&u.state!==void 0?u.state:null,u.updater=Wf,t.stateNode=u,u._reactInternals=t,u._reactInternalInstance=Kg,typeof n.getDerivedStateFromProps==\"function\"&&o===null&&(o=ce(n)||\"Component\",Fg.has(o)||(Fg.add(o),console.error(\"`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\",o,u.state===null?\"null\":\"undefined\",o))),typeof n.getDerivedStateFromProps==\"function\"||typeof u.getSnapshotBeforeUpdate==\"function\"){var c=i=o=null;if(typeof u.componentWillMount==\"function\"&&u.componentWillMount.__suppressDeprecationWarning!==!0?o=\"componentWillMount\":typeof u.UNSAFE_componentWillMount==\"function\"&&(o=\"UNSAFE_componentWillMount\"),typeof u.componentWillReceiveProps==\"function\"&&u.componentWillReceiveProps.__suppressDeprecationWarning!==!0?i=\"componentWillReceiveProps\":typeof u.UNSAFE_componentWillReceiveProps==\"function\"&&(i=\"UNSAFE_componentWillReceiveProps\"),typeof u.componentWillUpdate==\"function\"&&u.componentWillUpdate.__suppressDeprecationWarning!==!0?c=\"componentWillUpdate\":typeof u.UNSAFE_componentWillUpdate==\"function\"&&(c=\"UNSAFE_componentWillUpdate\"),o!==null||i!==null||c!==null){u=ce(n)||\"Component\";var s=typeof n.getDerivedStateFromProps==\"function\"?\"getDerivedStateFromProps()\":\"getSnapshotBeforeUpdate()\";Pg.has(u)||(Pg.add(u),console.error(`Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://react.dev/link/unsafe-component-lifecycles`,u,s,o!==null?`\n  `+o:\"\",i!==null?`\n  `+i:\"\",c!==null?`\n  `+c:\"\"))}}u=t.stateNode,o=ce(n)||\"Component\",u.render||(n.prototype&&typeof n.prototype.render==\"function\"?console.error(\"No `render` method found on the %s instance: did you accidentally return an object from the constructor?\",o):console.error(\"No `render` method found on the %s instance: you may have forgotten to define `render`.\",o)),!u.getInitialState||u.getInitialState.isReactClassApproved||u.state||console.error(\"getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?\",o),u.getDefaultProps&&!u.getDefaultProps.isReactClassApproved&&console.error(\"getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.\",o),u.contextType&&console.error(\"contextType was defined as an instance property on %s. Use a static property to define contextType instead.\",o),n.childContextTypes&&!a0.has(n)&&(a0.add(n),console.error(\"%s uses the legacy childContextTypes API which was removed in React 19. Use React.createContext() instead. (https://react.dev/link/legacy-context)\",o)),n.contextTypes&&!n0.has(n)&&(n0.add(n),console.error(\"%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with static contextType instead. (https://react.dev/link/legacy-context)\",o)),typeof u.componentShouldUpdate==\"function\"&&console.error(\"%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.\",o),n.prototype&&n.prototype.isPureReactComponent&&typeof u.shouldComponentUpdate<\"u\"&&console.error(\"%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.\",ce(n)||\"A pure component\"),typeof u.componentDidUnmount==\"function\"&&console.error(\"%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?\",o),typeof u.componentDidReceiveProps==\"function\"&&console.error(\"%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().\",o),typeof u.componentWillRecieveProps==\"function\"&&console.error(\"%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\",o),typeof u.UNSAFE_componentWillRecieveProps==\"function\"&&console.error(\"%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\",o),i=u.props!==a,u.props!==void 0&&i&&console.error(\"When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.\",o),u.defaultProps&&console.error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.\",o,o),typeof u.getSnapshotBeforeUpdate!=\"function\"||typeof u.componentDidUpdate==\"function\"||Ig.has(n)||(Ig.add(n),console.error(\"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.\",ce(n))),typeof u.getDerivedStateFromProps==\"function\"&&console.error(\"%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.\",o),typeof u.getDerivedStateFromError==\"function\"&&console.error(\"%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.\",o),typeof n.getSnapshotBeforeUpdate==\"function\"&&console.error(\"%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.\",o),(i=u.state)&&(typeof i!=\"object\"||nt(i))&&console.error(\"%s.state: must be set to an object or null\",o),typeof u.getChildContext==\"function\"&&typeof n.childContextTypes!=\"object\"&&console.error(\"%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().\",o),u=t.stateNode,u.props=a,u.state=t.memoizedState,u.refs={},Ms(t),o=n.contextType,u.context=typeof o==\"object\"&&o!==null?Ae(o):va,u.state===a&&(o=ce(n)||\"Component\",e0.has(o)||(e0.add(o),console.error(\"%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.\",o))),t.mode&st&&rn.recordLegacyContextWarning(t,u),rn.recordUnsafeLifecycleWarnings(t,u),u.state=t.memoizedState,o=n.getDerivedStateFromProps,typeof o==\"function\"&&(ir(t,n,o,a),u.state=t.memoizedState),typeof n.getDerivedStateFromProps==\"function\"||typeof u.getSnapshotBeforeUpdate==\"function\"||typeof u.UNSAFE_componentWillMount!=\"function\"&&typeof u.componentWillMount!=\"function\"||(o=u.state,typeof u.componentWillMount==\"function\"&&u.componentWillMount(),typeof u.UNSAFE_componentWillMount==\"function\"&&u.UNSAFE_componentWillMount(),o!==u.state&&(console.error(\"%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.\",C(t)||\"Component\"),Wf.enqueueReplaceState(u,u.state,null)),ku(t,a,u,l),Gu(),u.state=t.memoizedState),typeof u.componentDidMount==\"function\"&&(t.flags|=4194308),(t.mode&sn)!==Te&&(t.flags|=134217728),u=!0}else if(e===null){u=t.stateNode;var p=t.memoizedProps;i=Wa(n,p),u.props=i;var v=u.context;c=n.contextType,o=va,typeof c==\"object\"&&c!==null&&(o=Ae(c)),s=n.getDerivedStateFromProps,c=typeof s==\"function\"||typeof u.getSnapshotBeforeUpdate==\"function\",p=t.pendingProps!==p,c||typeof u.UNSAFE_componentWillReceiveProps!=\"function\"&&typeof u.componentWillReceiveProps!=\"function\"||(p||v!==o)&&Tm(t,u,a,o),ba=!1;var m=t.memoizedState;u.state=m,ku(t,a,u,l),Gu(),v=t.memoizedState,p||m!==v||ba?(typeof s==\"function\"&&(ir(t,n,s,a),v=t.memoizedState),(i=ba||xm(t,n,i,a,m,v,o))?(c||typeof u.UNSAFE_componentWillMount!=\"function\"&&typeof u.componentWillMount!=\"function\"||(typeof u.componentWillMount==\"function\"&&u.componentWillMount(),typeof u.UNSAFE_componentWillMount==\"function\"&&u.UNSAFE_componentWillMount()),typeof u.componentDidMount==\"function\"&&(t.flags|=4194308),(t.mode&sn)!==Te&&(t.flags|=134217728)):(typeof u.componentDidMount==\"function\"&&(t.flags|=4194308),(t.mode&sn)!==Te&&(t.flags|=134217728),t.memoizedProps=a,t.memoizedState=v),u.props=a,u.state=v,u.context=o,u=i):(typeof u.componentDidMount==\"function\"&&(t.flags|=4194308),(t.mode&sn)!==Te&&(t.flags|=134217728),u=!1)}else{u=t.stateNode,zs(e,t),o=t.memoizedProps,c=Wa(n,o),u.props=c,s=t.pendingProps,m=u.context,v=n.contextType,i=va,typeof v==\"object\"&&v!==null&&(i=Ae(v)),p=n.getDerivedStateFromProps,(v=typeof p==\"function\"||typeof u.getSnapshotBeforeUpdate==\"function\")||typeof u.UNSAFE_componentWillReceiveProps!=\"function\"&&typeof u.componentWillReceiveProps!=\"function\"||(o!==s||m!==i)&&Tm(t,u,a,i),ba=!1,m=t.memoizedState,u.state=m,ku(t,a,u,l),Gu();var b=t.memoizedState;o!==s||m!==b||ba||e!==null&&e.dependencies!==null&&yi(e.dependencies)?(typeof p==\"function\"&&(ir(t,n,p,a),b=t.memoizedState),(c=ba||xm(t,n,c,a,m,b,i)||e!==null&&e.dependencies!==null&&yi(e.dependencies))?(v||typeof u.UNSAFE_componentWillUpdate!=\"function\"&&typeof u.componentWillUpdate!=\"function\"||(typeof u.componentWillUpdate==\"function\"&&u.componentWillUpdate(a,b,i),typeof u.UNSAFE_componentWillUpdate==\"function\"&&u.UNSAFE_componentWillUpdate(a,b,i)),typeof u.componentDidUpdate==\"function\"&&(t.flags|=4),typeof u.getSnapshotBeforeUpdate==\"function\"&&(t.flags|=1024)):(typeof u.componentDidUpdate!=\"function\"||o===e.memoizedProps&&m===e.memoizedState||(t.flags|=4),typeof u.getSnapshotBeforeUpdate!=\"function\"||o===e.memoizedProps&&m===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=b),u.props=a,u.state=b,u.context=i,u=c):(typeof u.componentDidUpdate!=\"function\"||o===e.memoizedProps&&m===e.memoizedState||(t.flags|=4),typeof u.getSnapshotBeforeUpdate!=\"function\"||o===e.memoizedProps&&m===e.memoizedState||(t.flags|=1024),u=!1)}if(i=u,Yi(e,t),o=(t.flags&128)!==0,i||o){if(i=t.stateNode,as(t),o&&typeof n.getDerivedStateFromError!=\"function\")n=null,Et=-1;else{if(Lt(t),n=Ng(i),t.mode&st){pe(!0);try{Ng(i)}finally{pe(!1)}}mn()}t.flags|=1,e!==null&&o?(t.child=cu(t,e.child,null,l),t.child=cu(t,null,n,l)):et(e,t,n,l),t.memoizedState=i.state,e=t.child}else e=Ln(e,t,l);return l=t.stateNode,u&&l.props!==a&&(fu||console.error(\"It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.\",C(t)||\"a component\"),fu=!0),e}function Nm(e,t,n,a){return _u(),t.flags|=256,et(e,t,n,a),t.child}function dr(e,t){t&&t.childContextTypes&&console.error(`childContextTypes cannot be defined on a function component.\n  %s.childContextTypes = ...`,t.displayName||t.name||\"Component\"),typeof t.getDerivedStateFromProps==\"function\"&&(e=ce(t)||\"Unknown\",r0[e]||(console.error(\"%s: Function components do not support getDerivedStateFromProps.\",e),r0[e]=!0)),typeof t.contextType==\"object\"&&t.contextType!==null&&(t=ce(t)||\"Unknown\",c0[t]||(console.error(\"%s: Function components do not support contextType.\",t),c0[t]=!0))}function hr(e){return{baseLanes:e,cachePool:Lh()}}function mr(e,t,n){return e=e!==null?e.childLanes&~n:0,t&&(e|=_t),e}function Hm(e,t,n){var a,l=t.pendingProps;D(t)&&(t.flags|=128);var u=!1,o=(t.flags&128)!==0;if((a=o)||(a=e!==null&&e.memoizedState===null?!1:(Xe.current&jo)!==0),a&&(u=!0,t.flags&=-129),a=(t.flags&32)!==0,t.flags&=-33,e===null){if(ie){if(u?ia(t):ca(t),ie){var i=we,c;if(!(c=!i)){e:{var s=i;for(c=wn;s.nodeType!==8;){if(!c){c=null;break e}if(s=Gt(s.nextSibling),s===null){c=null;break e}}c=s}c!==null?(Ga(),t.memoizedState={dehydrated:c,treeContext:el!==null?{id:Zn,overflow:$n}:null,retryLane:536870912,hydrationErrors:null},s=G(18,null,null,Te),s.stateNode=c,s.return=t,t.child=s,ht=t,we=null,c=!0):c=!1,c=!c}c&&(Es(t,i),Xa(t))}if(i=t.memoizedState,i!==null&&(i=i.dehydrated,i!==null))return $r(i)?t.lanes=32:t.lanes=536870912,null;_n(t)}return i=l.children,l=l.fallback,u?(ca(t),u=t.mode,i=Vi({mode:\"hidden\",children:i},u),l=Ya(l,u,n,null),i.return=t,l.return=t,i.sibling=l,t.child=i,u=t.child,u.memoizedState=hr(n),u.childLanes=mr(e,a,n),t.memoizedState=ed,l):(ia(t),pr(t,i))}var p=e.memoizedState;if(p!==null&&(i=p.dehydrated,i!==null)){if(o)t.flags&256?(ia(t),t.flags&=-257,t=yr(e,t,n)):t.memoizedState!==null?(ca(t),t.child=e.child,t.flags|=128,t=null):(ca(t),u=l.fallback,i=t.mode,l=Vi({mode:\"visible\",children:l.children},i),u=Ya(u,i,n,null),u.flags|=2,l.return=t,u.return=t,l.sibling=u,t.child=l,cu(t,e.child,null,n),l=t.child,l.memoizedState=hr(n),l.childLanes=mr(e,a,n),t.memoizedState=ed,t=u);else if(ia(t),ie&&console.error(\"We should not be hydrating here. This is a bug in React. Please file a bug.\"),$r(i)){if(a=i.nextSibling&&i.nextSibling.dataset,a){c=a.dgst;var v=a.msg;s=a.stck;var m=a.cstck}i=v,a=c,l=s,c=u=m,u=Error(i||\"The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.\"),u.stack=l||\"\",u.digest=a,a=c===void 0?null:c,l={value:u,source:null,stack:a},typeof a==\"string\"&&Nf.set(u,l),Lu(l),t=yr(e,t,n)}else if($e||Bu(e,t,n,!1),a=(n&e.childLanes)!==0,$e||a){if(a=Se,a!==null&&(l=n&-n,l=(l&42)!==0?1:Ic(l),l=(l&(a.suspendedLanes|n))!==0?0:l,l!==0&&l!==p.retryLane))throw p.retryLane=l,bt(e,l),je(a,e,l),o0;i.data===Pn||Or(),t=yr(e,t,n)}else i.data===Pn?(t.flags|=192,t.child=e.child,t=null):(e=p.treeContext,we=Gt(i.nextSibling),ht=t,ie=!0,tl=null,Jn=!1,Jt=null,wn=!1,e!==null&&(Ga(),Zt[$t++]=Zn,Zt[$t++]=$n,Zt[$t++]=el,Zn=e.id,$n=e.overflow,el=t),t=pr(t,l.children),t.flags|=4096);return t}return u?(ca(t),u=l.fallback,i=t.mode,c=e.child,s=c.sibling,l=jn(c,{mode:\"hidden\",children:l.children}),l.subtreeFlags=c.subtreeFlags&65011712,s!==null?u=jn(s,u):(u=Ya(u,i,n,null),u.flags|=2),u.return=t,l.return=t,l.sibling=u,t.child=l,l=u,u=t.child,i=e.child.memoizedState,i===null?i=hr(n):(c=i.cachePool,c!==null?(s=Ge._currentValue,c=c.parent!==s?{parent:s,pool:s}:c):c=Lh(),i={baseLanes:i.baseLanes|n,cachePool:c}),u.memoizedState=i,u.childLanes=mr(e,a,n),t.memoizedState=ed,l):(ia(t),n=e.child,e=n.sibling,n=jn(n,{mode:\"visible\",children:l.children}),n.return=t,n.sibling=null,e!==null&&(a=t.deletions,a===null?(t.deletions=[e],t.flags|=16):a.push(e)),t.child=n,t.memoizedState=null,n)}function pr(e,t){return t=Vi({mode:\"visible\",children:t},e.mode),t.return=e,e.child=t}function Vi(e,t){return e=G(22,e,null,t),e.lanes=0,e.stateNode={_visibility:pc,_pendingMarkers:null,_retryCache:null,_transitions:null},e}function yr(e,t,n){return cu(t,e.child,null,n),e=pr(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function _m(e,t,n){e.lanes|=t;var a=e.alternate;a!==null&&(a.lanes|=t),Rs(e.return,t,n)}function Lm(e,t){var n=nt(e);return e=!n&&typeof ot(e)==\"function\",n||e?(n=n?\"array\":\"iterable\",console.error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>\",n,t,n),!1):!0}function gr(e,t,n,a,l){var u=e.memoizedState;u===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:l}:(u.isBackwards=t,u.rendering=null,u.renderingStartTime=0,u.last=a,u.tail=n,u.tailMode=l)}function Bm(e,t,n){var a=t.pendingProps,l=a.revealOrder,u=a.tail;if(a=a.children,l!==void 0&&l!==\"forwards\"&&l!==\"backwards\"&&l!==\"together\"&&!f0[l])if(f0[l]=!0,typeof l==\"string\")switch(l.toLowerCase()){case\"together\":case\"forwards\":case\"backwards\":console.error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.',l,l.toLowerCase());break;case\"forward\":case\"backward\":console.error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.',l,l.toLowerCase());break;default:console.error('\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?',l)}else console.error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?',l);u===void 0||Pf[u]||(u!==\"collapsed\"&&u!==\"hidden\"?(Pf[u]=!0,console.error('\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?',u)):l!==\"forwards\"&&l!==\"backwards\"&&(Pf[u]=!0,console.error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?',u)));e:if((l===\"forwards\"||l===\"backwards\")&&a!==void 0&&a!==null&&a!==!1)if(nt(a)){for(var o=0;o<a.length;o++)if(!Lm(a[o],o))break e}else if(o=ot(a),typeof o==\"function\"){if(o=o.call(a))for(var i=o.next(),c=0;!i.done;i=o.next()){if(!Lm(i.value,c))break e;c++}}else console.error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?',l);if(et(e,t,a,n),a=Xe.current,(a&jo)!==0)a=a&su|jo,t.flags|=128;else{if(e!==null&&(e.flags&128)!==0)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&_m(e,n,t);else if(e.tag===19)_m(e,n,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=su}switch(P(Xe,a,t),l){case\"forwards\":for(n=t.child,l=null;n!==null;)e=n.alternate,e!==null&&Bi(e)===null&&(l=n),n=n.sibling;n=l,n===null?(l=t.child,t.child=null):(l=n.sibling,n.sibling=null),gr(t,!1,l,n,u);break;case\"backwards\":for(n=null,l=t.child,t.child=null;l!==null;){if(e=l.alternate,e!==null&&Bi(e)===null){t.child=l;break}e=l.sibling,l.sibling=n,n=l,l=e}gr(t,!0,n,null,u);break;case\"together\":gr(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Ln(e,t,n){if(e!==null&&(t.dependencies=e.dependencies),Et=-1,Ea|=t.lanes,(n&t.childLanes)===0)if(e!==null){if(Bu(e,t,n,!1),(n&t.childLanes)===0)return null}else return null;if(e!==null&&t.child!==e.child)throw Error(\"Resuming work not yet implemented.\");if(t.child!==null){for(e=t.child,n=jn(e,e.pendingProps),t.child=n,n.return=t;e.sibling!==null;)e=e.sibling,n=n.sibling=jn(e,e.pendingProps),n.return=t;n.sibling=null}return t.child}function vr(e,t){return(e.lanes&t)!==0?!0:(e=e.dependencies,!!(e!==null&&yi(e)))}function Gv(e,t,n){switch(t.tag){case 3:an(t,t.stateNode.containerInfo),aa(t,Ge,e.memoizedState.cache),_u();break;case 27:case 5:X(t);break;case 4:an(t,t.stateNode.containerInfo);break;case 10:aa(t,t.type,t.memoizedProps.value);break;case 12:(n&t.childLanes)!==0&&(t.flags|=4),t.flags|=2048;var a=t.stateNode;a.effectDuration=-0,a.passiveEffectDuration=-0;break;case 13:if(a=t.memoizedState,a!==null)return a.dehydrated!==null?(ia(t),t.flags|=128,null):(n&t.child.childLanes)!==0?Hm(e,t,n):(ia(t),e=Ln(e,t,n),e!==null?e.sibling:null);ia(t);break;case 19:var l=(e.flags&128)!==0;if(a=(n&t.childLanes)!==0,a||(Bu(e,t,n,!1),a=(n&t.childLanes)!==0),l){if(a)return Bm(e,t,n);t.flags|=128}if(l=t.memoizedState,l!==null&&(l.rendering=null,l.tail=null,l.lastEffect=null),P(Xe,Xe.current,t),a)break;return null;case 22:case 23:return t.lanes=0,Mm(e,t,n);case 24:aa(t,Ge,e.memoizedState.cache)}return Ln(e,t,n)}function br(e,t,n){if(t._debugNeedsRemount&&e!==null){n=vs(t.type,t.key,t.pendingProps,t._debugOwner||null,t.mode,t.lanes),n._debugStack=t._debugStack,n._debugTask=t._debugTask;var a=t.return;if(a===null)throw Error(\"Cannot swap the root fiber.\");if(e.alternate=null,t.alternate=null,n.index=t.index,n.sibling=t.sibling,n.return=t.return,n.ref=t.ref,n._debugInfo=t._debugInfo,t===a.child)a.child=n;else{var l=a.child;if(l===null)throw Error(\"Expected parent to have a child.\");for(;l.sibling!==t;)if(l=l.sibling,l===null)throw Error(\"Expected to find the previous sibling.\");l.sibling=n}return t=a.deletions,t===null?(a.deletions=[e],a.flags|=16):t.push(e),n.flags|=2,n}if(e!==null)if(e.memoizedProps!==t.pendingProps||t.type!==e.type)$e=!0;else{if(!vr(e,n)&&(t.flags&128)===0)return $e=!1,Gv(e,t,n);$e=(e.flags&131072)!==0}else $e=!1,(a=ie)&&(Ga(),a=(t.flags&1048576)!==0),a&&(a=t.index,Ga(),Oh(t,gc,a));switch(t.lanes=0,t.tag){case 16:e:if(a=t.pendingProps,e=xa(t.elementType),t.type=e,typeof e==\"function\")gs(e)?(a=Wa(e,a),t.tag=1,t.type=e=qa(e),t=jm(null,t,e,a,n)):(t.tag=0,dr(t,e),t.type=e=qa(e),t=fr(null,t,e,a,n));else{if(e!=null){if(l=e.$$typeof,l===co){t.tag=11,t.type=e=ps(e),t=Dm(null,t,e,a,n);break e}else if(l===lc){t.tag=14,t=wm(null,t,e,a,n);break e}}throw t=\"\",e!==null&&typeof e==\"object\"&&e.$$typeof===Ut&&(t=\" Did you wrap a component in React.lazy() more than once?\"),e=ce(e)||e,Error(\"Element type is invalid. Received a promise that resolves to: \"+e+\". Lazy element type must resolve to a class or function.\"+t)}return t;case 0:return fr(e,t,t.type,t.pendingProps,n);case 1:return a=t.type,l=Wa(a,t.pendingProps),jm(e,t,a,l,n);case 3:e:{if(an(t,t.stateNode.containerInfo),e===null)throw Error(\"Should have a current fiber. This is a bug in React.\");a=t.pendingProps;var u=t.memoizedState;l=u.element,zs(e,t),ku(t,a,null,n);var o=t.memoizedState;if(a=o.cache,aa(t,Ge,a),a!==u.cache&&As(t,[Ge],n,!0),Gu(),a=o.element,u.isDehydrated)if(u={element:a,isDehydrated:!1,cache:o.cache},t.updateQueue.baseState=u,t.memoizedState=u,t.flags&256){t=Nm(e,t,a,n);break e}else if(a!==l){l=wt(Error(\"This root received an early update, before anything was able hydrate. Switched the entire root to client rendering.\"),t),Lu(l),t=Nm(e,t,a,n);break e}else{switch(e=t.stateNode.containerInfo,e.nodeType){case 9:e=e.body;break;default:e=e.nodeName===\"HTML\"?e.ownerDocument.body:e}for(we=Gt(e.firstChild),ht=t,ie=!0,tl=null,Jn=!1,Jt=null,wn=!0,e=Jg(t,null,a,n),t.child=e;e;)e.flags=e.flags&-3|4096,e=e.sibling}else{if(_u(),a===l){t=Ln(e,t,n);break e}et(e,t,a,n)}t=t.child}return t;case 26:return Yi(e,t),e===null?(e=ay(t.type,null,t.pendingProps,null))?t.memoizedState=e:ie||(e=t.type,n=t.pendingProps,a=Fe(ma.current),a=Ki(a).createElement(e),a[ct]=t,a[Tt]=n,tt(a,e,n),Qe(a),t.stateNode=a):t.memoizedState=ay(t.type,e.memoizedProps,t.pendingProps,e.memoizedState),null;case 27:return X(t),e===null&&ie&&(a=Fe(ma.current),l=w(),a=t.stateNode=ty(t.type,t.pendingProps,a,l,!1),Jn||(l=Zp(a,t.type,t.pendingProps,l),l!==null&&(ka(t,0).serverProps=l)),ht=t,wn=!0,l=we,fa(t.type)?(Ed=l,we=Gt(a.firstChild)):we=l),et(e,t,t.pendingProps.children,n),Yi(e,t),e===null&&(t.flags|=4194304),t.child;case 5:return e===null&&ie&&(u=w(),a=rs(t.type,u.ancestorInfo),l=we,(o=!l)||(o=Ab(l,t.type,t.pendingProps,wn),o!==null?(t.stateNode=o,Jn||(u=Zp(o,t.type,t.pendingProps,u),u!==null&&(ka(t,0).serverProps=u)),ht=t,we=Gt(o.firstChild),wn=!1,u=!0):u=!1,o=!u),o&&(a&&Es(t,l),Xa(t))),X(t),l=t.type,u=t.pendingProps,o=e!==null?e.memoizedProps:null,a=u.children,Qr(l,u)?a=null:o!==null&&Qr(l,o)&&(t.flags|=32),t.memoizedState!==null&&(l=Hs(e,t,_v,null,null,n),Jo._currentValue=l),Yi(e,t),et(e,t,a,n),t.child;case 6:return e===null&&ie&&(e=t.pendingProps,n=w(),a=n.ancestorInfo.current,e=a!=null?ii(e,a.tag,n.ancestorInfo.implicitRootScope):!0,n=we,(a=!n)||(a=Cb(n,t.pendingProps,wn),a!==null?(t.stateNode=a,ht=t,we=null,a=!0):a=!1,a=!a),a&&(e&&Es(t,n),Xa(t))),null;case 13:return Hm(e,t,n);case 4:return an(t,t.stateNode.containerInfo),a=t.pendingProps,e===null?t.child=cu(t,null,a,n):et(e,t,a,n),t.child;case 11:return Dm(e,t,t.type,t.pendingProps,n);case 7:return et(e,t,t.pendingProps,n),t.child;case 8:return et(e,t,t.pendingProps.children,n),t.child;case 12:return t.flags|=4,t.flags|=2048,a=t.stateNode,a.effectDuration=-0,a.passiveEffectDuration=-0,et(e,t,t.pendingProps.children,n),t.child;case 10:return a=t.type,l=t.pendingProps,u=l.value,\"value\"in l||d0||(d0=!0,console.error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\")),aa(t,a,u),et(e,t,l.children,n),t.child;case 9:return l=t.type._context,a=t.pendingProps.children,typeof a!=\"function\"&&console.error(\"A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.\"),Qa(t),l=Ae(l),Lt(t),a=$f(a,l,void 0),mn(),t.flags|=1,et(e,t,a,n),t.child;case 14:return wm(e,t,t.type,t.pendingProps,n);case 15:return Om(e,t,t.type,t.pendingProps,n);case 19:return Bm(e,t,n);case 31:return a=t.pendingProps,n=t.mode,a={mode:a.mode,children:a.children},e===null?(e=Vi(a,n),e.ref=t.ref,t.child=e,e.return=t,t=e):(e=jn(e.child,a),e.ref=t.ref,t.child=e,e.return=t,t=e),t;case 22:return Mm(e,t,n);case 24:return Qa(t),a=Ae(Ge),e===null?(l=Os(),l===null&&(l=Se,u=Cs(),l.pooledCache=u,Za(u),u!==null&&(l.pooledCacheLanes|=n),l=u),t.memoizedState={parent:a,cache:l},Ms(t),aa(t,Ge,l)):((e.lanes&n)!==0&&(zs(e,t),ku(t,null,null,n),Gu()),l=e.memoizedState,u=t.memoizedState,l.parent!==a?(l={parent:a,cache:a},t.memoizedState=l,t.lanes===0&&(t.memoizedState=t.updateQueue.baseState=l),aa(t,Ge,a)):(a=u.cache,aa(t,Ge,a),a!==l.cache&&As(t,[Ge],n,!0))),et(e,t,t.pendingProps.children,n),t.child;case 29:throw t.pendingProps}throw Error(\"Unknown unit of work tag (\"+t.tag+\"). This error is likely caused by a bug in React. Please file an issue.\")}function Bn(e){e.flags|=4}function qm(e,t){if(t.type!==\"stylesheet\"||(t.state.loading&Pt)!==yl)e.flags&=-16777217;else if(e.flags|=16777216,!cy(t)){if(t=It.current,t!==null&&((te&4194048)===te?Mn!==null:(te&62914560)!==te&&(te&536870912)===0||t!==Mn))throw Oo=Yf,Tg;e.flags|=8192}}function Gi(e,t){t!==null&&(e.flags|=4),e.flags&16384&&(t=e.tag!==22?Ud():536870912,e.lanes|=t,rl|=t)}function Ju(e,t){if(!ie)switch(e.tailMode){case\"hidden\":t=e.tail;for(var n=null;t!==null;)t.alternate!==null&&(n=t),t=t.sibling;n===null?e.tail=null:n.sibling=null;break;case\"collapsed\":n=e.tail;for(var a=null;n!==null;)n.alternate!==null&&(a=n),n=n.sibling;a===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:a.sibling=null}}function Ce(e){var t=e.alternate!==null&&e.alternate.child===e.child,n=0,a=0;if(t)if((e.mode&at)!==Te){for(var l=e.selfBaseDuration,u=e.child;u!==null;)n|=u.lanes|u.childLanes,a|=u.subtreeFlags&65011712,a|=u.flags&65011712,l+=u.treeBaseDuration,u=u.sibling;e.treeBaseDuration=l}else for(l=e.child;l!==null;)n|=l.lanes|l.childLanes,a|=l.subtreeFlags&65011712,a|=l.flags&65011712,l.return=e,l=l.sibling;else if((e.mode&at)!==Te){l=e.actualDuration,u=e.selfBaseDuration;for(var o=e.child;o!==null;)n|=o.lanes|o.childLanes,a|=o.subtreeFlags,a|=o.flags,l+=o.actualDuration,u+=o.treeBaseDuration,o=o.sibling;e.actualDuration=l,e.treeBaseDuration=u}else for(l=e.child;l!==null;)n|=l.lanes|l.childLanes,a|=l.subtreeFlags,a|=l.flags,l.return=e,l=l.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function kv(e,t,n){var a=t.pendingProps;switch(Ts(t),t.tag){case 31:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ce(t),null;case 1:return Ce(t),null;case 3:return n=t.stateNode,a=null,e!==null&&(a=e.memoizedState.cache),t.memoizedState.cache!==a&&(t.flags|=2048),Nn(Ge,t),ln(t),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),(e===null||e.child===null)&&(Hu(t)?(jh(),Bn(t)):e===null||e.memoizedState.isDehydrated&&(t.flags&256)===0||(t.flags|=1024,Uh())),Ce(t),null;case 26:return n=t.memoizedState,e===null?(Bn(t),n!==null?(Ce(t),qm(t,n)):(Ce(t),t.flags&=-16777217)):n?n!==e.memoizedState?(Bn(t),Ce(t),qm(t,n)):(Ce(t),t.flags&=-16777217):(e.memoizedProps!==a&&Bn(t),Ce(t),t.flags&=-16777217),null;case 27:Y(t),n=Fe(ma.current);var l=t.type;if(e!==null&&t.stateNode!=null)e.memoizedProps!==a&&Bn(t);else{if(!a){if(t.stateNode===null)throw Error(\"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\");return Ce(t),null}e=w(),Hu(t)?Mh(t):(e=ty(l,a,n,e,!0),t.stateNode=e,Bn(t))}return Ce(t),null;case 5:if(Y(t),n=t.type,e!==null&&t.stateNode!=null)e.memoizedProps!==a&&Bn(t);else{if(!a){if(t.stateNode===null)throw Error(\"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\");return Ce(t),null}if(l=w(),Hu(t))Mh(t);else{switch(e=Fe(ma.current),rs(n,l.ancestorInfo),l=l.context,e=Ki(e),l){case Su:e=e.createElementNS(kl,n);break;case Xc:e=e.createElementNS(rc,n);break;default:switch(n){case\"svg\":e=e.createElementNS(kl,n);break;case\"math\":e=e.createElementNS(rc,n);break;case\"script\":e=e.createElement(\"div\"),e.innerHTML=\"<script><\\/script>\",e=e.removeChild(e.firstChild);break;case\"select\":e=typeof a.is==\"string\"?e.createElement(\"select\",{is:a.is}):e.createElement(\"select\"),a.multiple?e.multiple=!0:a.size&&(e.size=a.size);break;default:e=typeof a.is==\"string\"?e.createElement(n,{is:a.is}):e.createElement(n),n.indexOf(\"-\")===-1&&(n!==n.toLowerCase()&&console.error(\"<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.\",n),Object.prototype.toString.call(e)!==\"[object HTMLUnknownElement]\"||kn.call(z0,n)||(z0[n]=!0,console.error(\"The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\",n)))}}e[ct]=t,e[Tt]=a;e:for(l=t.child;l!==null;){if(l.tag===5||l.tag===6)e.appendChild(l.stateNode);else if(l.tag!==4&&l.tag!==27&&l.child!==null){l.child.return=l,l=l.child;continue}if(l===t)break e;for(;l.sibling===null;){if(l.return===null||l.return===t)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}t.stateNode=e;e:switch(tt(e,n,a),n){case\"button\":case\"input\":case\"select\":case\"textarea\":e=!!a.autoFocus;break e;case\"img\":e=!0;break e;default:e=!1}e&&Bn(t)}}return Ce(t),t.flags&=-16777217,null;case 6:if(e&&t.stateNode!=null)e.memoizedProps!==a&&Bn(t);else{if(typeof a!=\"string\"&&t.stateNode===null)throw Error(\"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\");if(e=Fe(ma.current),n=w(),Hu(t)){e=t.stateNode,n=t.memoizedProps,l=!Jn,a=null;var u=ht;if(u!==null)switch(u.tag){case 3:l&&(l=Ip(e,n,a),l!==null&&(ka(t,0).serverProps=l));break;case 27:case 5:a=u.memoizedProps,l&&(l=Ip(e,n,a),l!==null&&(ka(t,0).serverProps=l))}e[ct]=t,e=!!(e.nodeValue===n||a!==null&&a.suppressHydrationWarning===!0||Vp(e.nodeValue,n)),e||Xa(t)}else l=n.ancestorInfo.current,l!=null&&ii(a,l.tag,n.ancestorInfo.implicitRootScope),e=Ki(e).createTextNode(a),e[ct]=t,t.stateNode=e}return Ce(t),null;case 13:if(a=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(l=Hu(t),a!==null&&a.dehydrated!==null){if(e===null){if(!l)throw Error(\"A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.\");if(l=t.memoizedState,l=l!==null?l.dehydrated:null,!l)throw Error(\"Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.\");l[ct]=t,Ce(t),(t.mode&at)!==Te&&a!==null&&(l=t.child,l!==null&&(t.treeBaseDuration-=l.treeBaseDuration))}else jh(),_u(),(t.flags&128)===0&&(t.memoizedState=null),t.flags|=4,Ce(t),(t.mode&at)!==Te&&a!==null&&(l=t.child,l!==null&&(t.treeBaseDuration-=l.treeBaseDuration));l=!1}else l=Uh(),e!==null&&e.memoizedState!==null&&(e.memoizedState.hydrationErrors=l),l=!0;if(!l)return t.flags&256?(_n(t),t):(_n(t),null)}return _n(t),(t.flags&128)!==0?(t.lanes=n,(t.mode&at)!==Te&&bi(t),t):(n=a!==null,e=e!==null&&e.memoizedState!==null,n&&(a=t.child,l=null,a.alternate!==null&&a.alternate.memoizedState!==null&&a.alternate.memoizedState.cachePool!==null&&(l=a.alternate.memoizedState.cachePool.pool),u=null,a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),u!==l&&(a.flags|=2048)),n!==e&&n&&(t.child.flags|=8192),Gi(t,t.updateQueue),Ce(t),(t.mode&at)!==Te&&n&&(e=t.child,e!==null&&(t.treeBaseDuration-=e.treeBaseDuration)),null);case 4:return ln(t),e===null&&Br(t.stateNode.containerInfo),Ce(t),null;case 10:return Nn(t.type,t),Ce(t),null;case 19:if(oe(Xe,t),l=t.memoizedState,l===null)return Ce(t),null;if(a=(t.flags&128)!==0,u=l.rendering,u===null)if(a)Ju(l,!1);else{if(Oe!==In||e!==null&&(e.flags&128)!==0)for(e=t.child;e!==null;){if(u=Bi(e),u!==null){for(t.flags|=128,Ju(l,!1),e=u.updateQueue,t.updateQueue=e,Gi(t,e),t.subtreeFlags=0,e=n,n=t.child;n!==null;)wh(n,e),n=n.sibling;return P(Xe,Xe.current&su|jo,t),t.child}e=e.sibling}l.tail!==null&&En()>Uc&&(t.flags|=128,a=!0,Ju(l,!1),t.lanes=4194304)}else{if(!a)if(e=Bi(u),e!==null){if(t.flags|=128,a=!0,e=e.updateQueue,t.updateQueue=e,Gi(t,e),Ju(l,!0),l.tail===null&&l.tailMode===\"hidden\"&&!u.alternate&&!ie)return Ce(t),null}else 2*En()-l.renderingStartTime>Uc&&n!==536870912&&(t.flags|=128,a=!0,Ju(l,!1),t.lanes=4194304);l.isBackwards?(u.sibling=t.child,t.child=u):(e=l.last,e!==null?e.sibling=u:t.child=u,l.last=u)}return l.tail!==null?(e=l.tail,l.rendering=e,l.tail=e.sibling,l.renderingStartTime=En(),e.sibling=null,n=Xe.current,n=a?n&su|jo:n&su,P(Xe,n,t),e):(Ce(t),null);case 22:case 23:return _n(t),js(t),a=t.memoizedState!==null,e!==null?e.memoizedState!==null!==a&&(t.flags|=8192):a&&(t.flags|=8192),a?(n&536870912)!==0&&(t.flags&128)===0&&(Ce(t),t.subtreeFlags&6&&(t.flags|=8192)):Ce(t),n=t.updateQueue,n!==null&&Gi(t,n.retryQueue),n=null,e!==null&&e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(n=e.memoizedState.cachePool.pool),a=null,t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(a=t.memoizedState.cachePool.pool),a!==n&&(t.flags|=2048),e!==null&&oe(ll,t),null;case 24:return n=null,e!==null&&(n=e.memoizedState.cache),t.memoizedState.cache!==n&&(t.flags|=2048),Nn(Ge,t),Ce(t),null;case 25:return null;case 30:return null}throw Error(\"Unknown unit of work tag (\"+t.tag+\"). This error is likely caused by a bug in React. Please file an issue.\")}function Xv(e,t){switch(Ts(t),t.tag){case 1:return e=t.flags,e&65536?(t.flags=e&-65537|128,(t.mode&at)!==Te&&bi(t),t):null;case 3:return Nn(Ge,t),ln(t),e=t.flags,(e&65536)!==0&&(e&128)===0?(t.flags=e&-65537|128,t):null;case 26:case 27:case 5:return Y(t),null;case 13:if(_n(t),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(\"Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.\");_u()}return e=t.flags,e&65536?(t.flags=e&-65537|128,(t.mode&at)!==Te&&bi(t),t):null;case 19:return oe(Xe,t),null;case 4:return ln(t),null;case 10:return Nn(t.type,t),null;case 22:case 23:return _n(t),js(t),e!==null&&oe(ll,t),e=t.flags,e&65536?(t.flags=e&-65537|128,(t.mode&at)!==Te&&bi(t),t):null;case 24:return Nn(Ge,t),null;case 25:return null;default:return null}}function Ym(e,t){switch(Ts(t),t.tag){case 3:Nn(Ge,t),ln(t);break;case 26:case 27:case 5:Y(t);break;case 4:ln(t);break;case 13:_n(t);break;case 19:oe(Xe,t);break;case 10:Nn(t.type,t);break;case 22:case 23:_n(t),js(t),e!==null&&oe(ll,t);break;case 24:Nn(Ge,t)}}function gn(e){return(e.mode&at)!==Te}function Vm(e,t){gn(e)?(yn(),Ku(t,e),pn()):Ku(t,e)}function Sr(e,t,n){gn(e)?(yn(),Ol(n,e,t),pn()):Ol(n,e,t)}function Ku(e,t){try{var n=t.updateQueue,a=n!==null?n.lastEffect:null;if(a!==null){var l=a.next;n=l;do{if((n.tag&e)===e&&((e&ke)!==Kt?z!==null&&typeof z.markComponentPassiveEffectMountStarted==\"function\"&&z.markComponentPassiveEffectMountStarted(t):(e&lt)!==Kt&&z!==null&&typeof z.markComponentLayoutEffectMountStarted==\"function\"&&z.markComponentLayoutEffectMountStarted(t),a=void 0,(e&mt)!==Kt&&(vu=!0),a=H(t,sx,n),(e&mt)!==Kt&&(vu=!1),(e&ke)!==Kt?z!==null&&typeof z.markComponentPassiveEffectMountStopped==\"function\"&&z.markComponentPassiveEffectMountStopped():(e&lt)!==Kt&&z!==null&&typeof z.markComponentLayoutEffectMountStopped==\"function\"&&z.markComponentLayoutEffectMountStopped(),a!==void 0&&typeof a!=\"function\")){var u=void 0;u=(n.tag&lt)!==0?\"useLayoutEffect\":(n.tag&mt)!==0?\"useInsertionEffect\":\"useEffect\";var o=void 0;o=a===null?\" You returned null. If your effect does not require clean up, return undefined (or nothing).\":typeof a.then==\"function\"?`\n\nIt looks like you wrote `+u+`(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n`+u+`(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://react.dev/link/hooks-data-fetching`:\" You returned: \"+a,H(t,function(i,c){console.error(\"%s must not return anything besides a function, which is used for clean-up.%s\",i,c)},u,o)}n=n.next}while(n!==l)}}catch(i){ye(t,t.return,i)}}function Ol(e,t,n){try{var a=t.updateQueue,l=a!==null?a.lastEffect:null;if(l!==null){var u=l.next;a=u;do{if((a.tag&e)===e){var o=a.inst,i=o.destroy;i!==void 0&&(o.destroy=void 0,(e&ke)!==Kt?z!==null&&typeof z.markComponentPassiveEffectUnmountStarted==\"function\"&&z.markComponentPassiveEffectUnmountStarted(t):(e&lt)!==Kt&&z!==null&&typeof z.markComponentLayoutEffectUnmountStarted==\"function\"&&z.markComponentLayoutEffectUnmountStarted(t),(e&mt)!==Kt&&(vu=!0),l=t,H(l,rx,l,n,i),(e&mt)!==Kt&&(vu=!1),(e&ke)!==Kt?z!==null&&typeof z.markComponentPassiveEffectUnmountStopped==\"function\"&&z.markComponentPassiveEffectUnmountStopped():(e&lt)!==Kt&&z!==null&&typeof z.markComponentLayoutEffectUnmountStopped==\"function\"&&z.markComponentLayoutEffectUnmountStopped())}a=a.next}while(a!==u)}}catch(c){ye(t,t.return,c)}}function Gm(e,t){gn(e)?(yn(),Ku(t,e),pn()):Ku(t,e)}function xr(e,t,n){gn(e)?(yn(),Ol(n,e,t),pn()):Ol(n,e,t)}function km(e){var t=e.updateQueue;if(t!==null){var n=e.stateNode;e.type.defaultProps||\"ref\"in e.memoizedProps||fu||(n.props!==e.memoizedProps&&console.error(\"Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",C(e)||\"instance\"),n.state!==e.memoizedState&&console.error(\"Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",C(e)||\"instance\"));try{H(e,Xh,t,n)}catch(a){ye(e,e.return,a)}}}function Qv(e,t,n){return e.getSnapshotBeforeUpdate(t,n)}function Zv(e,t){var n=t.memoizedProps,a=t.memoizedState;t=e.stateNode,e.type.defaultProps||\"ref\"in e.memoizedProps||fu||(t.props!==e.memoizedProps&&console.error(\"Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",C(e)||\"instance\"),t.state!==e.memoizedState&&console.error(\"Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",C(e)||\"instance\"));try{var l=Wa(e.type,n,e.elementType===e.type),u=H(e,Qv,t,l,a);n=h0,u!==void 0||n.has(e.type)||(n.add(e.type),H(e,function(){console.error(\"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.\",C(e))})),t.__reactInternalSnapshotBeforeUpdate=u}catch(o){ye(e,e.return,o)}}function Xm(e,t,n){n.props=Wa(e.type,e.memoizedProps),n.state=e.memoizedState,gn(e)?(yn(),H(e,Yg,e,t,n),pn()):H(e,Yg,e,t,n)}function $v(e){var t=e.ref;if(t!==null){switch(e.tag){case 26:case 27:case 5:var n=e.stateNode;break;case 30:n=e.stateNode;break;default:n=e.stateNode}if(typeof t==\"function\")if(gn(e))try{yn(),e.refCleanup=t(n)}finally{pn()}else e.refCleanup=t(n);else typeof t==\"string\"?console.error(\"String refs are no longer supported.\"):t.hasOwnProperty(\"current\")||console.error(\"Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().\",C(e)),t.current=n}}function Wu(e,t){try{H(e,$v,e)}catch(n){ye(e,t,n)}}function vn(e,t){var n=e.ref,a=e.refCleanup;if(n!==null)if(typeof a==\"function\")try{if(gn(e))try{yn(),H(e,a)}finally{pn(e)}else H(e,a)}catch(l){ye(e,t,l)}finally{e.refCleanup=null,e=e.alternate,e!=null&&(e.refCleanup=null)}else if(typeof n==\"function\")try{if(gn(e))try{yn(),H(e,n,null)}finally{pn(e)}else H(e,n,null)}catch(l){ye(e,t,l)}else n.current=null}function Qm(e,t,n,a){var l=e.memoizedProps,u=l.id,o=l.onCommit;l=l.onRender,t=t===null?\"mount\":\"update\",Sc&&(t=\"nested-update\"),typeof l==\"function\"&&l(u,t,e.actualDuration,e.treeBaseDuration,e.actualStartTime,n),typeof o==\"function\"&&o(e.memoizedProps.id,t,a,n)}function Jv(e,t,n,a){var l=e.memoizedProps;e=l.id,l=l.onPostCommit,t=t===null?\"mount\":\"update\",Sc&&(t=\"nested-update\"),typeof l==\"function\"&&l(e,t,a,n)}function Zm(e){var t=e.type,n=e.memoizedProps,a=e.stateNode;try{H(e,yb,a,t,n,e)}catch(l){ye(e,e.return,l)}}function Tr(e,t,n){try{H(e,gb,e.stateNode,e.type,n,t,e)}catch(a){ye(e,e.return,a)}}function $m(e){return e.tag===5||e.tag===3||e.tag===26||e.tag===27&&fa(e.type)||e.tag===4}function Er(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||$m(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.tag===27&&fa(e.type)||e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function Rr(e,t,n){var a=e.tag;if(a===5||a===6)e=e.stateNode,t?(n.nodeType===9?n.body:n.nodeName===\"HTML\"?n.ownerDocument.body:n).insertBefore(e,t):(t=n.nodeType===9?n.body:n.nodeName===\"HTML\"?n.ownerDocument.body:n,t.appendChild(e),n=n._reactRootContainer,n!=null||t.onclick!==null||(t.onclick=Ji));else if(a!==4&&(a===27&&fa(e.type)&&(n=e.stateNode,t=null),e=e.child,e!==null))for(Rr(e,t,n),e=e.sibling;e!==null;)Rr(e,t,n),e=e.sibling}function ki(e,t,n){var a=e.tag;if(a===5||a===6)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(a!==4&&(a===27&&fa(e.type)&&(n=e.stateNode),e=e.child,e!==null))for(ki(e,t,n),e=e.sibling;e!==null;)ki(e,t,n),e=e.sibling}function Kv(e){for(var t,n=e.return;n!==null;){if($m(n)){t=n;break}n=n.return}if(t==null)throw Error(\"Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.\");switch(t.tag){case 27:t=t.stateNode,n=Er(e),ki(e,n,t);break;case 5:n=t.stateNode,t.flags&32&&(Kp(n),t.flags&=-33),t=Er(e),ki(e,t,n);break;case 3:case 4:t=t.stateNode.containerInfo,n=Er(e),Rr(e,n,t);break;default:throw Error(\"Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.\")}}function Jm(e){var t=e.stateNode,n=e.memoizedProps;try{H(e,Mb,e.type,n,t,e)}catch(a){ye(e,e.return,a)}}function Wv(e,t){if(e=e.containerInfo,Sd=Jc,e=Eh(e),hs(e)){if(\"selectionStart\"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{n=(n=e.ownerDocument)&&n.defaultView||window;var a=n.getSelection&&n.getSelection();if(a&&a.rangeCount!==0){n=a.anchorNode;var l=a.anchorOffset,u=a.focusNode;a=a.focusOffset;try{n.nodeType,u.nodeType}catch{n=null;break e}var o=0,i=-1,c=-1,s=0,p=0,v=e,m=null;t:for(;;){for(var b;v!==n||l!==0&&v.nodeType!==3||(i=o+l),v!==u||a!==0&&v.nodeType!==3||(c=o+a),v.nodeType===3&&(o+=v.nodeValue.length),(b=v.firstChild)!==null;)m=v,v=b;for(;;){if(v===e)break t;if(m===n&&++s===l&&(i=o),m===u&&++p===a&&(c=o),(b=v.nextSibling)!==null)break;v=m,m=v.parentNode}v=b}n=i===-1||c===-1?null:{start:i,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(xd={focusedElem:e,selectionRange:n},Jc=!1,Je=t;Je!==null;)if(t=Je,e=t.child,(t.subtreeFlags&1024)!==0&&e!==null)e.return=t,Je=e;else for(;Je!==null;){switch(e=t=Je,n=e.alternate,l=e.flags,e.tag){case 0:break;case 11:case 15:break;case 1:(l&1024)!==0&&n!==null&&Zv(e,n);break;case 3:if((l&1024)!==0){if(e=e.stateNode.containerInfo,n=e.nodeType,n===9)Zr(e);else if(n===1)switch(e.nodeName){case\"HEAD\":case\"HTML\":case\"BODY\":Zr(e);break;default:e.textContent=\"\"}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((l&1024)!==0)throw Error(\"This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.\")}if(e=t.sibling,e!==null){e.return=t.return,Je=e;break}Je=t.return}}function Km(e,t,n){var a=n.flags;switch(n.tag){case 0:case 11:case 15:Yn(e,n),a&4&&Vm(n,lt|Wt);break;case 1:if(Yn(e,n),a&4)if(e=n.stateNode,t===null)n.type.defaultProps||\"ref\"in n.memoizedProps||fu||(e.props!==n.memoizedProps&&console.error(\"Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",C(n)||\"instance\"),e.state!==n.memoizedState&&console.error(\"Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",C(n)||\"instance\")),gn(n)?(yn(),H(n,Jf,n,e),pn()):H(n,Jf,n,e);else{var l=Wa(n.type,t.memoizedProps);t=t.memoizedState,n.type.defaultProps||\"ref\"in n.memoizedProps||fu||(e.props!==n.memoizedProps&&console.error(\"Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\",C(n)||\"instance\"),e.state!==n.memoizedState&&console.error(\"Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\",C(n)||\"instance\")),gn(n)?(yn(),H(n,Lg,n,e,l,t,e.__reactInternalSnapshotBeforeUpdate),pn()):H(n,Lg,n,e,l,t,e.__reactInternalSnapshotBeforeUpdate)}a&64&&km(n),a&512&&Wu(n,n.return);break;case 3:if(t=Hn(),Yn(e,n),a&64&&(a=n.updateQueue,a!==null)){if(l=null,n.child!==null)switch(n.child.tag){case 27:case 5:l=n.child.stateNode;break;case 1:l=n.child.stateNode}try{H(n,Xh,a,l)}catch(o){ye(n,n.return,o)}}e.effectDuration+=vi(t);break;case 27:t===null&&a&4&&Jm(n);case 26:case 5:Yn(e,n),t===null&&a&4&&Zm(n),a&512&&Wu(n,n.return);break;case 12:if(a&4){a=Hn(),Yn(e,n),e=n.stateNode,e.effectDuration+=Yu(a);try{H(n,Qm,n,t,bc,e.effectDuration)}catch(o){ye(n,n.return,o)}}else Yn(e,n);break;case 13:Yn(e,n),a&4&&Im(e,n),a&64&&(e=n.memoizedState,e!==null&&(e=e.dehydrated,e!==null&&(n=ub.bind(null,n),Db(e,n))));break;case 22:if(a=n.memoizedState!==null||Fn,!a){t=t!==null&&t.memoizedState!==null||Ne,l=Fn;var u=Ne;Fn=a,(Ne=t)&&!u?Vn(e,n,(n.subtreeFlags&8772)!==0):Yn(e,n),Fn=l,Ne=u}break;case 30:break;default:Yn(e,n)}}function Wm(e){var t=e.alternate;t!==null&&(e.alternate=null,Wm(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&es(t)),e.stateNode=null,e._debugOwner=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function qn(e,t,n){for(n=n.child;n!==null;)Fm(e,t,n),n=n.sibling}function Fm(e,t,n){if(it&&typeof it.onCommitFiberUnmount==\"function\")try{it.onCommitFiberUnmount(Vl,n)}catch(u){Rn||(Rn=!0,console.error(\"React instrumentation encountered an error: %s\",u))}switch(n.tag){case 26:Ne||vn(n,t),qn(e,t,n),n.memoizedState?n.memoizedState.count--:n.stateNode&&(n=n.stateNode,n.parentNode.removeChild(n));break;case 27:Ne||vn(n,t);var a=Ye,l=Rt;fa(n.type)&&(Ye=n.stateNode,Rt=!1),qn(e,t,n),H(n,ao,n.stateNode),Ye=a,Rt=l;break;case 5:Ne||vn(n,t);case 6:if(a=Ye,l=Rt,Ye=null,qn(e,t,n),Ye=a,Rt=l,Ye!==null)if(Rt)try{H(n,Sb,Ye,n.stateNode)}catch(u){ye(n,t,u)}else try{H(n,bb,Ye,n.stateNode)}catch(u){ye(n,t,u)}break;case 18:Ye!==null&&(Rt?(e=Ye,Wp(e.nodeType===9?e.body:e.nodeName===\"HTML\"?e.ownerDocument.body:e,n.stateNode),io(e)):Wp(Ye,n.stateNode));break;case 4:a=Ye,l=Rt,Ye=n.stateNode.containerInfo,Rt=!0,qn(e,t,n),Ye=a,Rt=l;break;case 0:case 11:case 14:case 15:Ne||Ol(mt,n,t),Ne||Sr(n,t,lt),qn(e,t,n);break;case 1:Ne||(vn(n,t),a=n.stateNode,typeof a.componentWillUnmount==\"function\"&&Xm(n,t,a)),qn(e,t,n);break;case 21:qn(e,t,n);break;case 22:Ne=(a=Ne)||n.memoizedState!==null,qn(e,t,n),Ne=a;break;default:qn(e,t,n)}}function Im(e,t){if(t.memoizedState===null&&(e=t.alternate,e!==null&&(e=e.memoizedState,e!==null&&(e=e.dehydrated,e!==null))))try{H(t,Ob,e)}catch(n){ye(t,t.return,n)}}function Fv(e){switch(e.tag){case 13:case 19:var t=e.stateNode;return t===null&&(t=e.stateNode=new m0),t;case 22:return e=e.stateNode,t=e._retryCache,t===null&&(t=e._retryCache=new m0),t;default:throw Error(\"Unexpected Suspense handler tag (\"+e.tag+\"). This is a bug in React.\")}}function Ar(e,t){var n=Fv(e);t.forEach(function(a){var l=ob.bind(null,e,a);if(!n.has(a)){if(n.add(a),cn)if(du!==null&&hu!==null)eo(hu,du);else throw Error(\"Expected finished root and lanes to be set. This is a bug in React.\");a.then(l,l)}})}function Ot(e,t){var n=t.deletions;if(n!==null)for(var a=0;a<n.length;a++){var l=e,u=t,o=n[a],i=u;e:for(;i!==null;){switch(i.tag){case 27:if(fa(i.type)){Ye=i.stateNode,Rt=!1;break e}break;case 5:Ye=i.stateNode,Rt=!1;break e;case 3:case 4:Ye=i.stateNode.containerInfo,Rt=!0;break e}i=i.return}if(Ye===null)throw Error(\"Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.\");Fm(l,u,o),Ye=null,Rt=!1,l=o,u=l.alternate,u!==null&&(u.return=null),l.return=null}if(t.subtreeFlags&13878)for(t=t.child;t!==null;)Pm(t,e),t=t.sibling}function Pm(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:Ot(t,e),Mt(e),a&4&&(Ol(mt|Wt,e,e.return),Ku(mt|Wt,e),Sr(e,e.return,lt|Wt));break;case 1:Ot(t,e),Mt(e),a&512&&(Ne||n===null||vn(n,n.return)),a&64&&Fn&&(e=e.updateQueue,e!==null&&(a=e.callbacks,a!==null&&(n=e.shared.hiddenCallbacks,e.shared.hiddenCallbacks=n===null?a:n.concat(a))));break;case 26:var l=dn;if(Ot(t,e),Mt(e),a&512&&(Ne||n===null||vn(n,n.return)),a&4)if(t=n!==null?n.memoizedState:null,a=e.memoizedState,n===null)if(a===null)if(e.stateNode===null){e:{a=e.type,n=e.memoizedProps,t=l.ownerDocument||l;t:switch(a){case\"title\":l=t.getElementsByTagName(\"title\")[0],(!l||l[ro]||l[ct]||l.namespaceURI===kl||l.hasAttribute(\"itemprop\"))&&(l=t.createElement(a),t.head.insertBefore(l,t.querySelector(\"head > title\"))),tt(l,a,n),l[ct]=e,Qe(l),a=l;break e;case\"link\":var u=oy(\"link\",\"href\",t).get(a+(n.href||\"\"));if(u){for(var o=0;o<u.length;o++)if(l=u[o],l.getAttribute(\"href\")===(n.href==null||n.href===\"\"?null:n.href)&&l.getAttribute(\"rel\")===(n.rel==null?null:n.rel)&&l.getAttribute(\"title\")===(n.title==null?null:n.title)&&l.getAttribute(\"crossorigin\")===(n.crossOrigin==null?null:n.crossOrigin)){u.splice(o,1);break t}}l=t.createElement(a),tt(l,a,n),t.head.appendChild(l);break;case\"meta\":if(u=oy(\"meta\",\"content\",t).get(a+(n.content||\"\"))){for(o=0;o<u.length;o++)if(l=u[o],_(n.content,\"content\"),l.getAttribute(\"content\")===(n.content==null?null:\"\"+n.content)&&l.getAttribute(\"name\")===(n.name==null?null:n.name)&&l.getAttribute(\"property\")===(n.property==null?null:n.property)&&l.getAttribute(\"http-equiv\")===(n.httpEquiv==null?null:n.httpEquiv)&&l.getAttribute(\"charset\")===(n.charSet==null?null:n.charSet)){u.splice(o,1);break t}}l=t.createElement(a),tt(l,a,n),t.head.appendChild(l);break;default:throw Error('getNodesForType encountered a type it did not expect: \"'+a+'\". This is a bug in React.')}l[ct]=e,Qe(l),a=l}e.stateNode=a}else iy(l,e.type,e.stateNode);else e.stateNode=uy(l,a,e.memoizedProps);else t!==a?(t===null?n.stateNode!==null&&(n=n.stateNode,n.parentNode.removeChild(n)):t.count--,a===null?iy(l,e.type,e.stateNode):uy(l,a,e.memoizedProps)):a===null&&e.stateNode!==null&&Tr(e,e.memoizedProps,n.memoizedProps);break;case 27:Ot(t,e),Mt(e),a&512&&(Ne||n===null||vn(n,n.return)),n!==null&&a&4&&Tr(e,e.memoizedProps,n.memoizedProps);break;case 5:if(Ot(t,e),Mt(e),a&512&&(Ne||n===null||vn(n,n.return)),e.flags&32){t=e.stateNode;try{H(e,Kp,t)}catch(p){ye(e,e.return,p)}}a&4&&e.stateNode!=null&&(t=e.memoizedProps,Tr(e,t,n!==null?n.memoizedProps:t)),a&1024&&(td=!0,e.type!==\"form\"&&console.error(\"Unexpected host component type. Expected a form. This is a bug in React.\"));break;case 6:if(Ot(t,e),Mt(e),a&4){if(e.stateNode===null)throw Error(\"This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.\");a=e.memoizedProps,n=n!==null?n.memoizedProps:a,t=e.stateNode;try{H(e,vb,t,n,a)}catch(p){ye(e,e.return,p)}}break;case 3:if(l=Hn(),Qc=null,u=dn,dn=Wi(t.containerInfo),Ot(t,e),dn=u,Mt(e),a&4&&n!==null&&n.memoizedState.isDehydrated)try{H(e,wb,t.containerInfo)}catch(p){ye(e,e.return,p)}td&&(td=!1,ep(e)),t.effectDuration+=vi(l);break;case 4:a=dn,dn=Wi(e.stateNode.containerInfo),Ot(t,e),Mt(e),dn=a;break;case 12:a=Hn(),Ot(t,e),Mt(e),e.stateNode.effectDuration+=Yu(a);break;case 13:Ot(t,e),Mt(e),e.child.flags&8192&&e.memoizedState!==null!=(n!==null&&n.memoizedState!==null)&&(id=En()),a&4&&(a=e.updateQueue,a!==null&&(e.updateQueue=null,Ar(e,a)));break;case 22:l=e.memoizedState!==null;var i=n!==null&&n.memoizedState!==null,c=Fn,s=Ne;if(Fn=c||l,Ne=s||i,Ot(t,e),Ne=s,Fn=c,Mt(e),a&8192)e:for(t=e.stateNode,t._visibility=l?t._visibility&~pc:t._visibility|pc,l&&(n===null||i||Fn||Ne||Fa(e)),n=null,t=e;;){if(t.tag===5||t.tag===26){if(n===null){i=n=t;try{u=i.stateNode,l?H(i,xb,u):H(i,Eb,i.stateNode,i.memoizedProps)}catch(p){ye(i,i.return,p)}}}else if(t.tag===6){if(n===null){i=t;try{o=i.stateNode,l?H(i,Tb,o):H(i,Rb,o,i.memoizedProps)}catch(p){ye(i,i.return,p)}}}else if((t.tag!==22&&t.tag!==23||t.memoizedState===null||t===e)&&t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;n===t&&(n=null),t=t.return}n===t&&(n=null),t.sibling.return=t.return,t=t.sibling}a&4&&(a=e.updateQueue,a!==null&&(n=a.retryQueue,n!==null&&(a.retryQueue=null,Ar(e,n))));break;case 19:Ot(t,e),Mt(e),a&4&&(a=e.updateQueue,a!==null&&(e.updateQueue=null,Ar(e,a)));break;case 30:break;case 21:break;default:Ot(t,e),Mt(e)}}function Mt(e){var t=e.flags;if(t&2){try{H(e,Kv,e)}catch(n){ye(e,e.return,n)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function ep(e){if(e.subtreeFlags&1024)for(e=e.child;e!==null;){var t=e;ep(t),t.tag===5&&t.flags&1024&&t.stateNode.reset(),e=e.sibling}}function Yn(e,t){if(t.subtreeFlags&8772)for(t=t.child;t!==null;)Km(e,t.alternate,t),t=t.sibling}function tp(e){switch(e.tag){case 0:case 11:case 14:case 15:Sr(e,e.return,lt),Fa(e);break;case 1:vn(e,e.return);var t=e.stateNode;typeof t.componentWillUnmount==\"function\"&&Xm(e,e.return,t),Fa(e);break;case 27:H(e,ao,e.stateNode);case 26:case 5:vn(e,e.return),Fa(e);break;case 22:e.memoizedState===null&&Fa(e);break;case 30:Fa(e);break;default:Fa(e)}}function Fa(e){for(e=e.child;e!==null;)tp(e),e=e.sibling}function np(e,t,n,a){var l=n.flags;switch(n.tag){case 0:case 11:case 15:Vn(e,n,a),Vm(n,lt);break;case 1:if(Vn(e,n,a),t=n.stateNode,typeof t.componentDidMount==\"function\"&&H(n,Jf,n,t),t=n.updateQueue,t!==null){e=n.stateNode;try{H(n,Hv,t,e)}catch(u){ye(n,n.return,u)}}a&&l&64&&km(n),Wu(n,n.return);break;case 27:Jm(n);case 26:case 5:Vn(e,n,a),a&&t===null&&l&4&&Zm(n),Wu(n,n.return);break;case 12:if(a&&l&4){l=Hn(),Vn(e,n,a),a=n.stateNode,a.effectDuration+=Yu(l);try{H(n,Qm,n,t,bc,a.effectDuration)}catch(u){ye(n,n.return,u)}}else Vn(e,n,a);break;case 13:Vn(e,n,a),a&&l&4&&Im(e,n);break;case 22:n.memoizedState===null&&Vn(e,n,a),Wu(n,n.return);break;case 30:break;default:Vn(e,n,a)}}function Vn(e,t,n){for(n=n&&(t.subtreeFlags&8772)!==0,t=t.child;t!==null;)np(e,t.alternate,t,n),t=t.sibling}function Cr(e,t){var n=null;e!==null&&e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(n=e.memoizedState.cachePool.pool),e=null,t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(e=t.memoizedState.cachePool.pool),e!==n&&(e!=null&&Za(e),n!=null&&qu(n))}function Dr(e,t){e=null,t.alternate!==null&&(e=t.alternate.memoizedState.cache),t=t.memoizedState.cache,t!==e&&(Za(t),e!=null&&qu(e))}function bn(e,t,n,a){if(t.subtreeFlags&10256)for(t=t.child;t!==null;)ap(e,t,n,a),t=t.sibling}function ap(e,t,n,a){var l=t.flags;switch(t.tag){case 0:case 11:case 15:bn(e,t,n,a),l&2048&&Gm(t,ke|Wt);break;case 1:bn(e,t,n,a);break;case 3:var u=Hn();bn(e,t,n,a),l&2048&&(n=null,t.alternate!==null&&(n=t.alternate.memoizedState.cache),t=t.memoizedState.cache,t!==n&&(Za(t),n!=null&&qu(n))),e.passiveEffectDuration+=vi(u);break;case 12:if(l&2048){l=Hn(),bn(e,t,n,a),e=t.stateNode,e.passiveEffectDuration+=Yu(l);try{H(t,Jv,t,t.alternate,bc,e.passiveEffectDuration)}catch(i){ye(t,t.return,i)}}else bn(e,t,n,a);break;case 13:bn(e,t,n,a);break;case 23:break;case 22:u=t.stateNode;var o=t.alternate;t.memoizedState!==null?u._visibility&Qn?bn(e,t,n,a):Fu(e,t):u._visibility&Qn?bn(e,t,n,a):(u._visibility|=Qn,Ml(e,t,n,a,(t.subtreeFlags&10256)!==0)),l&2048&&Cr(o,t);break;case 24:bn(e,t,n,a),l&2048&&Dr(t.alternate,t);break;default:bn(e,t,n,a)}}function Ml(e,t,n,a,l){for(l=l&&(t.subtreeFlags&10256)!==0,t=t.child;t!==null;)lp(e,t,n,a,l),t=t.sibling}function lp(e,t,n,a,l){var u=t.flags;switch(t.tag){case 0:case 11:case 15:Ml(e,t,n,a,l),Gm(t,ke);break;case 23:break;case 22:var o=t.stateNode;t.memoizedState!==null?o._visibility&Qn?Ml(e,t,n,a,l):Fu(e,t):(o._visibility|=Qn,Ml(e,t,n,a,l)),l&&u&2048&&Cr(t.alternate,t);break;case 24:Ml(e,t,n,a,l),l&&u&2048&&Dr(t.alternate,t);break;default:Ml(e,t,n,a,l)}}function Fu(e,t){if(t.subtreeFlags&10256)for(t=t.child;t!==null;){var n=e,a=t,l=a.flags;switch(a.tag){case 22:Fu(n,a),l&2048&&Cr(a.alternate,a);break;case 24:Fu(n,a),l&2048&&Dr(a.alternate,a);break;default:Fu(n,a)}t=t.sibling}}function zl(e){if(e.subtreeFlags&No)for(e=e.child;e!==null;)up(e),e=e.sibling}function up(e){switch(e.tag){case 26:zl(e),e.flags&No&&e.memoizedState!==null&&Nb(dn,e.memoizedState,e.memoizedProps);break;case 5:zl(e);break;case 3:case 4:var t=dn;dn=Wi(e.stateNode.containerInfo),zl(e),dn=t;break;case 22:e.memoizedState===null&&(t=e.alternate,t!==null&&t.memoizedState!==null?(t=No,No=16777216,zl(e),No=t):zl(e));break;default:zl(e)}}function op(e){var t=e.alternate;if(t!==null&&(e=t.child,e!==null)){t.child=null;do t=e.sibling,e.sibling=null,e=t;while(e!==null)}}function Iu(e){var t=e.deletions;if((e.flags&16)!==0){if(t!==null)for(var n=0;n<t.length;n++){var a=t[n];Je=a,sp(a,e)}op(e)}if(e.subtreeFlags&10256)for(e=e.child;e!==null;)ip(e),e=e.sibling}function ip(e){switch(e.tag){case 0:case 11:case 15:Iu(e),e.flags&2048&&xr(e,e.return,ke|Wt);break;case 3:var t=Hn();Iu(e),e.stateNode.passiveEffectDuration+=vi(t);break;case 12:t=Hn(),Iu(e),e.stateNode.passiveEffectDuration+=Yu(t);break;case 22:t=e.stateNode,e.memoizedState!==null&&t._visibility&Qn&&(e.return===null||e.return.tag!==13)?(t._visibility&=~Qn,Xi(e)):Iu(e);break;default:Iu(e)}}function Xi(e){var t=e.deletions;if((e.flags&16)!==0){if(t!==null)for(var n=0;n<t.length;n++){var a=t[n];Je=a,sp(a,e)}op(e)}for(e=e.child;e!==null;)cp(e),e=e.sibling}function cp(e){switch(e.tag){case 0:case 11:case 15:xr(e,e.return,ke),Xi(e);break;case 22:var t=e.stateNode;t._visibility&Qn&&(t._visibility&=~Qn,Xi(e));break;default:Xi(e)}}function sp(e,t){for(;Je!==null;){var n=Je,a=n;switch(a.tag){case 0:case 11:case 15:xr(a,t,ke);break;case 23:case 22:a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(a=a.memoizedState.cachePool.pool,a!=null&&Za(a));break;case 24:qu(a.memoizedState.cache)}if(a=n.child,a!==null)a.return=n,Je=a;else e:for(n=e;Je!==null;){a=Je;var l=a.sibling,u=a.return;if(Wm(a),a===n){Je=null;break e}if(l!==null){l.return=u,Je=l;break e}Je=u}}}function Iv(){dx.forEach(function(e){return e()})}function rp(){var e=typeof IS_REACT_ACT_ENVIRONMENT<\"u\"?IS_REACT_ACT_ENVIRONMENT:void 0;return e||g.actQueue===null||console.error(\"The current testing environment is not configured to support act(...)\"),e}function zt(e){if((re&pt)!==Nt&&te!==0)return te&-te;var t=g.T;return t!==null?(t._updatedFibers||(t._updatedFibers=new Set),t._updatedFibers.add(e),e=al,e!==0?e:_r()):Ld()}function fp(){_t===0&&(_t=(te&536870912)===0||ie?zd():536870912);var e=It.current;return e!==null&&(e.flags|=32),_t}function je(e,t,n){if(vu&&console.error(\"useInsertionEffect must not schedule updates.\"),dd&&(jc=!0),(e===Se&&(fe===cl||fe===sl)||e.cancelPendingCommit!==null)&&(jl(e,0),sa(e,te,_t,!1)),Cu(e,n),(re&pt)!==0&&e===Se){if(Cn)switch(t.tag){case 0:case 11:case 15:e=I&&C(I)||\"Unknown\",R0.has(e)||(R0.add(e),t=C(t)||\"Unknown\",console.error(\"Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://react.dev/link/setstate-in-render\",t,e,e));break;case 1:E0||(console.error(\"Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.\"),E0=!0)}}else cn&&Hd(e,t,n),cb(t),e===Se&&((re&pt)===Nt&&(Ra|=n),Oe===il&&sa(e,te,_t,!1)),Sn(e)}function dp(e,t,n){if((re&(pt|hn))!==Nt)throw Error(\"Should not already be working.\");var a=!n&&(t&124)===0&&(t&e.expiredLanes)===0||Au(e,t),l=a?eb(e,t):Mr(e,t,!0),u=a;do{if(l===In){yu&&!a&&sa(e,t,0,!1);break}else{if(n=e.current.alternate,u&&!Pv(n)){l=Mr(e,t,!1),u=!1;continue}if(l===mu){if(u=t,e.errorRecoveryDisabledLanes&u)var o=0;else o=e.pendingLanes&-536870913,o=o!==0?o:o&536870912?536870912:0;if(o!==0){t=o;e:{l=e;var i=o;o=Yo;var c=l.current.memoizedState.isDehydrated;if(c&&(jl(l,i).flags|=256),i=Mr(l,i,!1),i!==mu){if(ud&&!c){l.errorRecoveryDisabledLanes|=u,Ra|=u,l=il;break e}l=yt,yt=o,l!==null&&(yt===null?yt=l:yt.push.apply(yt,l))}l=i}if(u=!1,l!==mu)continue}}if(l===_o){jl(e,0),sa(e,t,0,!0);break}e:{switch(a=e,l){case In:case _o:throw Error(\"Root did not complete. This is a bug in React.\");case il:if((t&4194048)!==t)break;case Mc:sa(a,t,_t,!Ta);break e;case mu:yt=null;break;case nd:case p0:break;default:throw Error(\"Unknown root exit status.\")}if(g.actQueue!==null)zr(a,n,t,yt,Vo,zc,_t,Ra,rl);else{if((t&62914560)===t&&(u=id+g0-En(),10<u)){if(sa(a,t,_t,!Ta),ei(a,0,!0)!==0)break e;a.timeoutHandle=U0(hp.bind(null,a,n,yt,Vo,zc,t,_t,Ra,rl,Ta,l,yx,bg,0),u);break e}hp(a,n,yt,Vo,zc,t,_t,Ra,rl,Ta,l,mx,bg,0)}}}break}while(!0);Sn(e)}function hp(e,t,n,a,l,u,o,i,c,s,p,v,m,b){if(e.timeoutHandle=pl,v=t.subtreeFlags,(v&8192||(v&16785408)===16785408)&&($o={stylesheets:null,count:0,unsuspend:jb},up(t),v=Hb(),v!==null)){e.cancelPendingCommit=v(zr.bind(null,e,t,u,n,a,l,o,i,c,p,px,m,b)),sa(e,u,o,!s);return}zr(e,t,u,n,a,l,o,i,c)}function Pv(e){for(var t=e;;){var n=t.tag;if((n===0||n===11||n===15)&&t.flags&16384&&(n=t.updateQueue,n!==null&&(n=n.stores,n!==null)))for(var a=0;a<n.length;a++){var l=n[a],u=l.getSnapshot;l=l.value;try{if(!dt(u(),l))return!1}catch{return!1}}if(n=t.child,t.subtreeFlags&16384&&n!==null)n.return=t,t=n;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function sa(e,t,n,a){t&=~od,t&=~Ra,e.suspendedLanes|=t,e.pingedLanes&=~t,a&&(e.warmLanes|=t),a=e.expirationTimes;for(var l=t;0<l;){var u=31-rt(l),o=1<<u;a[u]=-1,l&=~o}n!==0&&jd(e,n,t)}function Ul(){return(re&(pt|hn))===Nt?(to(0),!1):!0}function wr(){if(I!==null){if(fe===At)var e=I.return;else e=I,pi(),qs(e),iu=null,Uo=0,e=I;for(;e!==null;)Ym(e.alternate,e),e=e.return;I=null}}function jl(e,t){var n=e.timeoutHandle;n!==pl&&(e.timeoutHandle=pl,Ox(n)),n=e.cancelPendingCommit,n!==null&&(e.cancelPendingCommit=null,n()),wr(),Se=e,I=n=jn(e.current,null),te=t,fe=At,Ht=null,Ta=!1,yu=Au(e,t),ud=!1,Oe=In,rl=_t=od=Ra=Ea=0,yt=Yo=null,zc=!1,(t&8)!==0&&(t|=t&32);var a=e.entangledLanes;if(a!==0)for(e=e.entanglements,a&=t;0<a;){var l=31-rt(a),u=1<<l;t|=e[l],a&=~u}return zn=t,fi(),t=gg(),1e3<t-yg&&(g.recentlyCreatedOwnerStacks=0,yg=t),rn.discardPendingWarnings(),n}function mp(e,t){V=null,g.H=wc,g.getCurrentStack=null,Cn=!1,jt=null,t===wo||t===Ec?(t=Vh(),fe=Bo):t===Tg?(t=Vh(),fe=y0):fe=t===o0?ld:t!==null&&typeof t==\"object\"&&typeof t.then==\"function\"?pu:Lo,Ht=t;var n=I;if(n===null)Oe=_o,qi(e,wt(t,e.current));else switch(n.mode&at&&ws(n),mn(),fe){case Lo:z!==null&&typeof z.markComponentErrored==\"function\"&&z.markComponentErrored(n,t,te);break;case cl:case sl:case Bo:case pu:case qo:z!==null&&typeof z.markComponentSuspended==\"function\"&&z.markComponentSuspended(n,t,te)}}function pp(){var e=g.H;return g.H=wc,e===null?wc:e}function yp(){var e=g.A;return g.A=fx,e}function Or(){Oe=il,Ta||(te&4194048)!==te&&It.current!==null||(yu=!0),(Ea&134217727)===0&&(Ra&134217727)===0||Se===null||sa(Se,te,_t,!1)}function Mr(e,t,n){var a=re;re|=pt;var l=pp(),u=yp();if(Se!==e||te!==t){if(cn){var o=e.memoizedUpdaters;0<o.size&&(eo(e,te),o.clear()),_d(e,t)}Vo=null,jl(e,t)}Po(t),t=!1,o=Oe;e:do try{if(fe!==At&&I!==null){var i=I,c=Ht;switch(fe){case ld:wr(),o=Mc;break e;case Bo:case cl:case sl:case pu:It.current===null&&(t=!0);var s=fe;if(fe=At,Ht=null,Nl(e,i,c,s),n&&yu){o=In;break e}break;default:s=fe,fe=At,Ht=null,Nl(e,i,c,s)}}gp(),o=Oe;break}catch(p){mp(e,p)}while(!0);return t&&e.shellSuspendCounter++,pi(),re=a,g.H=l,g.A=u,Md(),I===null&&(Se=null,te=0,fi()),o}function gp(){for(;I!==null;)vp(I)}function eb(e,t){var n=re;re|=pt;var a=pp(),l=yp();if(Se!==e||te!==t){if(cn){var u=e.memoizedUpdaters;0<u.size&&(eo(e,te),u.clear()),_d(e,t)}Vo=null,Uc=En()+v0,jl(e,t)}else yu=Au(e,t);Po(t);e:do try{if(fe!==At&&I!==null)t:switch(t=I,u=Ht,fe){case Lo:fe=At,Ht=null,Nl(e,t,u,Lo);break;case cl:case sl:if(qh(u)){fe=At,Ht=null,bp(t);break}t=function(){fe!==cl&&fe!==sl||Se!==e||(fe=qo),Sn(e)},u.then(t,t);break e;case Bo:fe=qo;break e;case y0:fe=ad;break e;case qo:qh(u)?(fe=At,Ht=null,bp(t)):(fe=At,Ht=null,Nl(e,t,u,qo));break;case ad:var o=null;switch(I.tag){case 26:o=I.memoizedState;case 5:case 27:var i=I;if(!o||cy(o)){fe=At,Ht=null;var c=i.sibling;if(c!==null)I=c;else{var s=i.return;s!==null?(I=s,Qi(s)):I=null}break t}break;default:console.error(\"Unexpected type of fiber triggered a suspensey commit. This is a bug in React.\")}fe=At,Ht=null,Nl(e,t,u,ad);break;case pu:fe=At,Ht=null,Nl(e,t,u,pu);break;case ld:wr(),Oe=Mc;break e;default:throw Error(\"Unexpected SuspendedReason. This is a bug in React.\")}g.actQueue!==null?gp():tb();break}catch(p){mp(e,p)}while(!0);return pi(),g.H=a,g.A=l,re=n,I!==null?(z!==null&&typeof z.markRenderYielded==\"function\"&&z.markRenderYielded(),In):(Md(),Se=null,te=0,fi(),Oe)}function tb(){for(;I!==null&&!Fb();)vp(I)}function vp(e){var t=e.alternate;(e.mode&at)!==Te?(Ds(e),t=H(e,br,t,e,zn),ws(e)):t=H(e,br,t,e,zn),e.memoizedProps=e.pendingProps,t===null?Qi(e):I=t}function bp(e){var t=H(e,nb,e);e.memoizedProps=e.pendingProps,t===null?Qi(e):I=t}function nb(e){var t=e.alternate,n=(e.mode&at)!==Te;switch(n&&Ds(e),e.tag){case 15:case 0:t=Um(t,e,e.pendingProps,e.type,void 0,te);break;case 11:t=Um(t,e,e.pendingProps,e.type.render,e.ref,te);break;case 5:qs(e);default:Ym(t,e),e=I=wh(e,zn),t=br(t,e,zn)}return n&&ws(e),t}function Nl(e,t,n,a){pi(),qs(t),iu=null,Uo=0;var l=t.return;try{if(Vv(e,l,t,n,te)){Oe=_o,qi(e,wt(n,e.current)),I=null;return}}catch(u){if(l!==null)throw I=l,u;Oe=_o,qi(e,wt(n,e.current)),I=null;return}t.flags&32768?(ie||a===Lo?e=!0:yu||(te&536870912)!==0?e=!1:(Ta=e=!0,(a===cl||a===sl||a===Bo||a===pu)&&(a=It.current,a!==null&&a.tag===13&&(a.flags|=16384))),Sp(t,e)):Qi(t)}function Qi(e){var t=e;do{if((t.flags&32768)!==0){Sp(t,Ta);return}var n=t.alternate;if(e=t.return,Ds(t),n=H(t,kv,n,t,zn),(t.mode&at)!==Te&&Hh(t),n!==null){I=n;return}if(t=t.sibling,t!==null){I=t;return}I=t=e}while(t!==null);Oe===In&&(Oe=p0)}function Sp(e,t){do{var n=Xv(e.alternate,e);if(n!==null){n.flags&=32767,I=n;return}if((e.mode&at)!==Te){Hh(e),n=e.actualDuration;for(var a=e.child;a!==null;)n+=a.actualDuration,a=a.sibling;e.actualDuration=n}if(n=e.return,n!==null&&(n.flags|=32768,n.subtreeFlags=0,n.deletions=null),!t&&(e=e.sibling,e!==null)){I=e;return}I=e=n}while(e!==null);Oe=Mc,I=null}function zr(e,t,n,a,l,u,o,i,c){e.cancelPendingCommit=null;do Pu();while(ut!==fl);if(rn.flushLegacyContextWarning(),rn.flushPendingUnsafeLifecycleWarnings(),(re&(pt|hn))!==Nt)throw Error(\"Should not already be working.\");if(z!==null&&typeof z.markCommitStarted==\"function\"&&z.markCommitStarted(n),t===null)Ve();else{if(n===0&&console.error(\"finishedLanes should not be empty during a commit. This is a bug in React.\"),t===e.current)throw Error(\"Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.\");if(u=t.lanes|t.childLanes,u|=Hf,iv(e,n,u,o,i,c),e===Se&&(I=Se=null,te=0),gu=t,Ca=e,Da=n,sd=u,rd=l,T0=a,(t.subtreeFlags&10256)!==0||(t.flags&10256)!==0?(e.callbackNode=null,e.callbackPriority=0,ib(Yl,function(){return Ap(),null})):(e.callbackNode=null,e.callbackPriority=0),bc=nu(),a=(t.flags&13878)!==0,(t.subtreeFlags&13878)!==0||a){a=g.T,g.T=null,l=se.p,se.p=kt,o=re,re|=hn;try{Wv(e,t,n)}finally{re=o,se.p=l,g.T=a}}ut=b0,xp(),Tp(),Ep()}}function xp(){if(ut===b0){ut=fl;var e=Ca,t=gu,n=Da,a=(t.flags&13878)!==0;if((t.subtreeFlags&13878)!==0||a){a=g.T,g.T=null;var l=se.p;se.p=kt;var u=re;re|=hn;try{du=n,hu=e,Pm(t,e),hu=du=null,n=xd;var o=Eh(e.containerInfo),i=n.focusedElem,c=n.selectionRange;if(o!==i&&i&&i.ownerDocument&&Th(i.ownerDocument.documentElement,i)){if(c!==null&&hs(i)){var s=c.start,p=c.end;if(p===void 0&&(p=s),\"selectionStart\"in i)i.selectionStart=s,i.selectionEnd=Math.min(p,i.value.length);else{var v=i.ownerDocument||document,m=v&&v.defaultView||window;if(m.getSelection){var b=m.getSelection(),U=i.textContent.length,q=Math.min(c.start,U),xe=c.end===void 0?q:Math.min(c.end,U);!b.extend&&q>xe&&(o=xe,xe=q,q=o);var ae=xh(i,q),f=xh(i,xe);if(ae&&f&&(b.rangeCount!==1||b.anchorNode!==ae.node||b.anchorOffset!==ae.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var d=v.createRange();d.setStart(ae.node,ae.offset),b.removeAllRanges(),q>xe?(b.addRange(d),b.extend(f.node,f.offset)):(d.setEnd(f.node,f.offset),b.addRange(d))}}}}for(v=[],b=i;b=b.parentNode;)b.nodeType===1&&v.push({element:b,left:b.scrollLeft,top:b.scrollTop});for(typeof i.focus==\"function\"&&i.focus(),i=0;i<v.length;i++){var h=v[i];h.element.scrollLeft=h.left,h.element.scrollTop=h.top}}Jc=!!Sd,xd=Sd=null}finally{re=u,se.p=l,g.T=a}}e.current=t,ut=S0}}function Tp(){if(ut===S0){ut=fl;var e=Ca,t=gu,n=Da,a=(t.flags&8772)!==0;if((t.subtreeFlags&8772)!==0||a){a=g.T,g.T=null;var l=se.p;se.p=kt;var u=re;re|=hn;try{z!==null&&typeof z.markLayoutEffectsStarted==\"function\"&&z.markLayoutEffectsStarted(n),du=n,hu=e,Km(e,t.alternate,t),hu=du=null,z!==null&&typeof z.markLayoutEffectsStopped==\"function\"&&z.markLayoutEffectsStopped()}finally{re=u,se.p=l,g.T=a}}ut=x0}}function Ep(){if(ut===gx||ut===x0){ut=fl,Ib();var e=Ca,t=gu,n=Da,a=T0,l=(t.subtreeFlags&10256)!==0||(t.flags&10256)!==0;l?ut=cd:(ut=fl,gu=Ca=null,Rp(e,e.pendingLanes),dl=0,ko=null);var u=e.pendingLanes;if(u===0&&(Aa=null),l||Op(e),l=Pc(n),t=t.stateNode,it&&typeof it.onCommitFiberRoot==\"function\")try{var o=(t.current.flags&128)===128;switch(l){case kt:var i=hf;break;case An:i=mf;break;case Xn:i=Yl;break;case cc:i=pf;break;default:i=Yl}it.onCommitFiberRoot(Vl,t,i,o)}catch(v){Rn||(Rn=!0,console.error(\"React instrumentation encountered an error: %s\",v))}if(cn&&e.memoizedUpdaters.clear(),Iv(),a!==null){o=g.T,i=se.p,se.p=kt,g.T=null;try{var c=e.onRecoverableError;for(t=0;t<a.length;t++){var s=a[t],p=ab(s.stack);H(s.source,c,s.value,p)}}finally{g.T=o,se.p=i}}(Da&3)!==0&&Pu(),Sn(e),u=e.pendingLanes,(n&4194090)!==0&&(u&42)!==0?(xc=!0,e===fd?Go++:(Go=0,fd=e)):Go=0,to(0),Ve()}}function ab(e){return e={componentStack:e},Object.defineProperty(e,\"digest\",{get:function(){console.error('You are accessing \"digest\" from the errorInfo object passed to onRecoverableError. This property is no longer provided as part of errorInfo but can be accessed as a property of the Error instance itself.')}}),e}function Rp(e,t){(e.pooledCacheLanes&=t)===0&&(t=e.pooledCache,t!=null&&(e.pooledCache=null,qu(t)))}function Pu(e){return xp(),Tp(),Ep(),Ap()}function Ap(){if(ut!==cd)return!1;var e=Ca,t=sd;sd=0;var n=Pc(Da),a=Xn>n?Xn:n;n=g.T;var l=se.p;try{se.p=a,g.T=null,a=rd,rd=null;var u=Ca,o=Da;if(ut=fl,gu=Ca=null,Da=0,(re&(pt|hn))!==Nt)throw Error(\"Cannot flush passive effects while already rendering.\");dd=!0,jc=!1,z!==null&&typeof z.markPassiveEffectsStarted==\"function\"&&z.markPassiveEffectsStarted(o);var i=re;if(re|=hn,ip(u.current),ap(u,u.current,o,a),z!==null&&typeof z.markPassiveEffectsStopped==\"function\"&&z.markPassiveEffectsStopped(),Op(u),re=i,to(0,!1),jc?u===ko?dl++:(dl=0,ko=u):dl=0,jc=dd=!1,it&&typeof it.onPostCommitFiberRoot==\"function\")try{it.onPostCommitFiberRoot(Vl,u)}catch(s){Rn||(Rn=!0,console.error(\"React instrumentation encountered an error: %s\",s))}var c=u.current.stateNode;return c.effectDuration=0,c.passiveEffectDuration=0,!0}finally{se.p=l,g.T=n,Rp(e,t)}}function Cp(e,t,n){t=wt(n,t),t=cr(e.stateNode,t,2),e=ua(e,t,2),e!==null&&(Cu(e,2),Sn(e))}function ye(e,t,n){if(vu=!1,e.tag===3)Cp(e,e,n);else{for(;t!==null;){if(t.tag===3){Cp(t,e,n);return}if(t.tag===1){var a=t.stateNode;if(typeof t.type.getDerivedStateFromError==\"function\"||typeof a.componentDidCatch==\"function\"&&(Aa===null||!Aa.has(a))){e=wt(n,e),n=sr(2),a=ua(t,n,2),a!==null&&(rr(n,a,t,e),Cu(a,2),Sn(a));return}}t=t.return}console.error(`Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Potential causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s`,n)}}function Ur(e,t,n){var a=e.pingCache;if(a===null){a=e.pingCache=new hx;var l=new Set;a.set(t,l)}else l=a.get(t),l===void 0&&(l=new Set,a.set(t,l));l.has(n)||(ud=!0,l.add(n),a=lb.bind(null,e,t,n),cn&&eo(e,n),t.then(a,a))}function lb(e,t,n){var a=e.pingCache;a!==null&&a.delete(t),e.pingedLanes|=e.suspendedLanes&n,e.warmLanes&=~n,rp()&&g.actQueue===null&&console.error(`A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act`),Se===e&&(te&n)===n&&(Oe===il||Oe===nd&&(te&62914560)===te&&En()-id<g0?(re&pt)===Nt&&jl(e,0):od|=n,rl===te&&(rl=0)),Sn(e)}function Dp(e,t){t===0&&(t=Ud()),e=bt(e,t),e!==null&&(Cu(e,t),Sn(e))}function ub(e){var t=e.memoizedState,n=0;t!==null&&(n=t.retryLane),Dp(e,n)}function ob(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,l=e.memoizedState;l!==null&&(n=l.retryLane);break;case 19:a=e.stateNode;break;case 22:a=e.stateNode._retryCache;break;default:throw Error(\"Pinged unknown suspense boundary type. This is probably a bug in React.\")}a!==null&&a.delete(t),Dp(e,n)}function jr(e,t,n){if((t.subtreeFlags&67117056)!==0)for(t=t.child;t!==null;){var a=e,l=t,u=l.type===ac;u=n||u,l.tag!==22?l.flags&67108864?u&&H(l,wp,a,l,(l.mode&hg)===Te):jr(a,l,u):l.memoizedState===null&&(u&&l.flags&8192?H(l,wp,a,l):l.subtreeFlags&67108864&&H(l,jr,a,l,u)),t=t.sibling}}function wp(e,t){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:!0;pe(!0);try{tp(t),n&&cp(t),np(e,t.alternate,t,!1),n&&lp(e,t,0,null,!1,0)}finally{pe(!1)}}function Op(e){var t=!0;e.current.mode&(st|sn)||(t=!1),jr(e,e.current,t)}function Mp(e){if((re&pt)===Nt){var t=e.tag;if(t===3||t===1||t===0||t===11||t===14||t===15){if(t=C(e)||\"ReactComponent\",Nc!==null){if(Nc.has(t))return;Nc.add(t)}else Nc=new Set([t]);H(e,function(){console.error(\"Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.\")})}}}function eo(e,t){cn&&e.memoizedUpdaters.forEach(function(n){Hd(e,n,t)})}function ib(e,t){var n=g.actQueue;return n!==null?(n.push(t),Sx):df(e,t)}function cb(e){rp()&&g.actQueue===null&&H(e,function(){console.error(`An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act`,C(e))})}function Sn(e){e!==bu&&e.next===null&&(bu===null?Hc=bu=e:bu=bu.next=e),_c=!0,g.actQueue!==null?md||(md=!0,Np()):hd||(hd=!0,Np())}function to(e,t){if(!pd&&_c){pd=!0;do for(var n=!1,a=Hc;a!==null;){if(e!==0){var l=a.pendingLanes;if(l===0)var u=0;else{var o=a.suspendedLanes,i=a.pingedLanes;u=(1<<31-rt(42|e)+1)-1,u&=l&~(o&~i),u=u&201326741?u&201326741|1:u?u|2:0}u!==0&&(n=!0,jp(a,u))}else u=te,u=ei(a,a===Se?u:0,a.cancelPendingCommit!==null||a.timeoutHandle!==pl),(u&3)===0||Au(a,u)||(n=!0,jp(a,u));a=a.next}while(n);pd=!1}}function sb(){Nr()}function Nr(){_c=md=hd=!1;var e=0;hl!==0&&(mb()&&(e=hl),hl=0);for(var t=En(),n=null,a=Hc;a!==null;){var l=a.next,u=zp(a,t);u===0?(a.next=null,n===null?Hc=l:n.next=l,l===null&&(bu=n)):(n=a,(e!==0||(u&3)!==0)&&(_c=!0)),a=l}to(e)}function zp(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,l=e.expirationTimes,u=e.pendingLanes&-62914561;0<u;){var o=31-rt(u),i=1<<o,c=l[o];c===-1?((i&n)===0||(i&a)!==0)&&(l[o]=ov(i,t)):c<=t&&(e.expiredLanes|=i),u&=~i}if(t=Se,n=te,n=ei(e,e===t?n:0,e.cancelPendingCommit!==null||e.timeoutHandle!==pl),a=e.callbackNode,n===0||e===t&&(fe===cl||fe===sl)||e.cancelPendingCommit!==null)return a!==null&&Hr(a),e.callbackNode=null,e.callbackPriority=0;if((n&3)===0||Au(e,n)){if(t=n&-n,t!==e.callbackPriority||g.actQueue!==null&&a!==yd)Hr(a);else return t;switch(Pc(n)){case kt:case An:n=mf;break;case Xn:n=Yl;break;case cc:n=pf;break;default:n=Yl}return a=Up.bind(null,e),g.actQueue!==null?(g.actQueue.push(a),n=yd):n=df(n,a),e.callbackPriority=t,e.callbackNode=n,t}return a!==null&&Hr(a),e.callbackPriority=2,e.callbackNode=null,2}function Up(e,t){if(xc=Sc=!1,ut!==fl&&ut!==cd)return e.callbackNode=null,e.callbackPriority=0,null;var n=e.callbackNode;if(Pu()&&e.callbackNode!==n)return null;var a=te;return a=ei(e,e===Se?a:0,e.cancelPendingCommit!==null||e.timeoutHandle!==pl),a===0?null:(dp(e,a,t),zp(e,En()),e.callbackNode!=null&&e.callbackNode===n?Up.bind(null,e):null)}function jp(e,t){if(Pu())return null;Sc=xc,xc=!1,dp(e,t,!0)}function Hr(e){e!==yd&&e!==null&&Wb(e)}function Np(){g.actQueue!==null&&g.actQueue.push(function(){return Nr(),null}),Mx(function(){(re&(pt|hn))!==Nt?df(hf,sb):Nr()})}function _r(){return hl===0&&(hl=zd()),hl}function Hp(e){return e==null||typeof e==\"symbol\"||typeof e==\"boolean\"?null:typeof e==\"function\"?e:(_(e,\"action\"),Uu(\"\"+e))}function _p(e,t){var n=t.ownerDocument.createElement(\"input\");return n.name=t.name,n.value=t.value,e.id&&n.setAttribute(\"form\",e.id),t.parentNode.insertBefore(n,t),e=new FormData(e),n.parentNode.removeChild(n),e}function rb(e,t,n,a,l){if(t===\"submit\"&&n&&n.stateNode===l){var u=Hp((l[Tt]||null).action),o=a.submitter;o&&(t=(t=o[Tt]||null)?Hp(t.formAction):o.getAttribute(\"formAction\"),t!==null&&(u=t,o=null));var i=new hc(\"action\",\"action\",null,a,l);e.push({event:i,listeners:[{instance:null,listener:function(){if(a.defaultPrevented){if(hl!==0){var c=o?_p(l,o):new FormData(l),s={pending:!0,data:c,method:l.method,action:u};Object.freeze(s),tr(n,s,null,c)}}else typeof u==\"function\"&&(i.preventDefault(),c=o?_p(l,o):new FormData(l),s={pending:!0,data:c,method:l.method,action:u},Object.freeze(s),tr(n,s,u,c))},currentTarget:l}]})}}function Zi(e,t,n){e.currentTarget=n;try{t(e)}catch(a){Ff(a)}e.currentTarget=null}function Lp(e,t){t=(t&4)!==0;for(var n=0;n<e.length;n++){var a=e[n];e:{var l=void 0,u=a.event;if(a=a.listeners,t)for(var o=a.length-1;0<=o;o--){var i=a[o],c=i.instance,s=i.currentTarget;if(i=i.listener,c!==l&&u.isPropagationStopped())break e;c!==null?H(c,Zi,u,i,s):Zi(u,i,s),l=c}else for(o=0;o<a.length;o++){if(i=a[o],c=i.instance,s=i.currentTarget,i=i.listener,c!==l&&u.isPropagationStopped())break e;c!==null?H(c,Zi,u,i,s):Zi(u,i,s),l=c}}}}function ne(e,t){gd.has(e)||console.error('Did not expect a listenToNonDelegatedEvent() call for \"%s\". This is a bug in React. Please file an issue.',e);var n=t[yf];n===void 0&&(n=t[yf]=new Set);var a=e+\"__bubble\";n.has(a)||(Bp(t,e,2,!1),n.add(a))}function Lr(e,t,n){gd.has(e)&&!t&&console.error('Did not expect a listenToNativeEvent() call for \"%s\" in the bubble phase. This is a bug in React. Please file an issue.',e);var a=0;t&&(a|=4),Bp(n,e,a,t)}function Br(e){if(!e[Lc]){e[Lc]=!0,xy.forEach(function(n){n!==\"selectionchange\"&&(gd.has(n)||Lr(n,!1,e),Lr(n,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[Lc]||(t[Lc]=!0,Lr(\"selectionchange\",!1,t))}}function Bp(e,t,n,a){switch(hy(t)){case kt:var l=Yb;break;case An:l=Vb;break;default:l=Pr}n=l.bind(null,t,n,e),l=void 0,!Rf||t!==\"touchstart\"&&t!==\"touchmove\"&&t!==\"wheel\"||(l=!0),a?l!==void 0?e.addEventListener(t,n,{capture:!0,passive:l}):e.addEventListener(t,n,!0):l!==void 0?e.addEventListener(t,n,{passive:l}):e.addEventListener(t,n,!1)}function qr(e,t,n,a,l){var u=a;if((t&1)===0&&(t&2)===0&&a!==null)e:for(;;){if(a===null)return;var o=a.tag;if(o===3||o===4){var i=a.stateNode.containerInfo;if(i===l)break;if(o===4)for(o=a.return;o!==null;){var c=o.tag;if((c===3||c===4)&&o.stateNode.containerInfo===l)return;o=o.return}for(;i!==null;){if(o=vl(i),o===null)return;if(c=o.tag,c===5||c===6||c===26||c===27){a=u=o;continue e}i=i.parentNode}}a=a.return}rh(function(){var s=u,p=fs(n),v=[];e:{var m=dg.get(e);if(m!==void 0){var b=hc,U=e;switch(e){case\"keypress\":if(ci(n)===0)break e;case\"keydown\":case\"keyup\":b=LS;break;case\"focusin\":U=\"focus\",b=wf;break;case\"focusout\":U=\"blur\",b=wf;break;case\"beforeblur\":case\"afterblur\":b=wf;break;case\"click\":if(n.button===2)break e;case\"auxclick\":case\"dblclick\":case\"mousedown\":case\"mousemove\":case\"mouseup\":case\"mouseout\":case\"mouseover\":case\"contextmenu\":b=Iy;break;case\"drag\":case\"dragend\":case\"dragenter\":case\"dragexit\":case\"dragleave\":case\"dragover\":case\"dragstart\":case\"drop\":b=AS;break;case\"touchcancel\":case\"touchend\":case\"touchmove\":case\"touchstart\":b=YS;break;case cg:case sg:case rg:b=wS;break;case fg:b=GS;break;case\"scroll\":case\"scrollend\":b=ES;break;case\"wheel\":b=XS;break;case\"copy\":case\"cut\":case\"paste\":b=MS;break;case\"gotpointercapture\":case\"lostpointercapture\":case\"pointercancel\":case\"pointerdown\":case\"pointermove\":case\"pointerout\":case\"pointerover\":case\"pointerup\":b=eg;break;case\"toggle\":case\"beforetoggle\":b=ZS}var q=(t&4)!==0,xe=!q&&(e===\"scroll\"||e===\"scrollend\"),ae=q?m!==null?m+\"Capture\":null:m;q=[];for(var f=s,d;f!==null;){var h=f;if(d=h.stateNode,h=h.tag,h!==5&&h!==26&&h!==27||d===null||ae===null||(h=ju(f,ae),h!=null&&q.push(no(f,h,d))),xe)break;f=f.return}0<q.length&&(m=new b(m,U,null,n,p),v.push({event:m,listeners:q}))}}if((t&7)===0){e:{if(m=e===\"mouseover\"||e===\"pointerover\",b=e===\"mouseout\"||e===\"pointerout\",m&&n!==ho&&(U=n.relatedTarget||n.fromElement)&&(vl(U)||U[ya]))break e;if((b||m)&&(m=p.window===p?p:(m=p.ownerDocument)?m.defaultView||m.parentWindow:window,b?(U=n.relatedTarget||n.toElement,b=s,U=U?vl(U):null,U!==null&&(xe=ue(U),q=U.tag,U!==xe||q!==5&&q!==27&&q!==6)&&(U=null)):(b=null,U=s),b!==U)){if(q=Iy,h=\"onMouseLeave\",ae=\"onMouseEnter\",f=\"mouse\",(e===\"pointerout\"||e===\"pointerover\")&&(q=eg,h=\"onPointerLeave\",ae=\"onPointerEnter\",f=\"pointer\"),xe=b==null?m:Du(b),d=U==null?m:Du(U),m=new q(h,f+\"leave\",b,n,p),m.target=xe,m.relatedTarget=d,h=null,vl(p)===s&&(q=new q(ae,f+\"enter\",U,n,p),q.target=d,q.relatedTarget=xe,h=q),xe=h,b&&U)t:{for(q=b,ae=U,f=0,d=q;d;d=Hl(d))f++;for(d=0,h=ae;h;h=Hl(h))d++;for(;0<f-d;)q=Hl(q),f--;for(;0<d-f;)ae=Hl(ae),d--;for(;f--;){if(q===ae||ae!==null&&q===ae.alternate)break t;q=Hl(q),ae=Hl(ae)}q=null}else q=null;b!==null&&qp(v,m,b,q,!1),U!==null&&xe!==null&&qp(v,xe,U,q,!0)}}e:{if(m=s?Du(s):window,b=m.nodeName&&m.nodeName.toLowerCase(),b===\"select\"||b===\"input\"&&m.type===\"file\")var S=gh;else if(ph(m))if(og)S=Mv;else{S=wv;var A=Dv}else b=m.nodeName,!b||b.toLowerCase()!==\"input\"||m.type!==\"checkbox\"&&m.type!==\"radio\"?s&&zu(s.elementType)&&(S=gh):S=Ov;if(S&&(S=S(e,s))){yh(v,S,n,p);break e}A&&A(e,m,s),e===\"focusout\"&&s&&m.type===\"number\"&&s.memoizedProps.value!=null&&us(m,\"number\",m.value)}switch(A=s?Du(s):window,e){case\"focusin\":(ph(A)||A.contentEditable===\"true\")&&(Jl=A,Mf=s,So=null);break;case\"focusout\":So=Mf=Jl=null;break;case\"mousedown\":zf=!0;break;case\"contextmenu\":case\"mouseup\":case\"dragend\":zf=!1,Rh(v,n,p);break;case\"selectionchange\":if(WS)break;case\"keydown\":case\"keyup\":Rh(v,n,p)}var Q;if(Of)e:{switch(e){case\"compositionstart\":var j=\"onCompositionStart\";break e;case\"compositionend\":j=\"onCompositionEnd\";break e;case\"compositionupdate\":j=\"onCompositionUpdate\";break e}j=void 0}else $l?hh(e,n)&&(j=\"onCompositionEnd\"):e===\"keydown\"&&n.keyCode===tg&&(j=\"onCompositionStart\");j&&(ng&&n.locale!==\"ko\"&&($l||j!==\"onCompositionStart\"?j===\"onCompositionEnd\"&&$l&&(Q=fh()):(ga=p,Af=\"value\"in ga?ga.value:ga.textContent,$l=!0)),A=$i(s,j),0<A.length&&(j=new Py(j,e,null,n,p),v.push({event:j,listeners:A}),Q?j.data=Q:(Q=mh(n),Q!==null&&(j.data=Q)))),(Q=JS?Ev(e,n):Rv(e,n))&&(j=$i(s,\"onBeforeInput\"),0<j.length&&(A=new US(\"onBeforeInput\",\"beforeinput\",null,n,p),v.push({event:A,listeners:j}),A.data=Q)),rb(v,e,s,n,p)}Lp(v,t)})}function no(e,t,n){return{instance:e,listener:t,currentTarget:n}}function $i(e,t){for(var n=t+\"Capture\",a=[];e!==null;){var l=e,u=l.stateNode;if(l=l.tag,l!==5&&l!==26&&l!==27||u===null||(l=ju(e,n),l!=null&&a.unshift(no(e,l,u)),l=ju(e,t),l!=null&&a.push(no(e,l,u))),e.tag===3)return a;e=e.return}return[]}function Hl(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5&&e.tag!==27);return e||null}function qp(e,t,n,a,l){for(var u=t._reactName,o=[];n!==null&&n!==a;){var i=n,c=i.alternate,s=i.stateNode;if(i=i.tag,c!==null&&c===a)break;i!==5&&i!==26&&i!==27||s===null||(c=s,l?(s=ju(n,u),s!=null&&o.unshift(no(n,s,c))):l||(s=ju(n,u),s!=null&&o.push(no(n,s,c)))),n=n.return}o.length!==0&&e.push({event:t,listeners:o})}function Yr(e,t){bv(e,t),e!==\"input\"&&e!==\"textarea\"&&e!==\"select\"||t==null||t.value!==null||Wy||(Wy=!0,e===\"select\"&&t.multiple?console.error(\"`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.\",e):console.error(\"`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.\",e));var n={registrationNameDependencies:Ia,possibleRegistrationNames:gf};zu(e)||typeof t.is==\"string\"||xv(e,t,n),t.contentEditable&&!t.suppressContentEditableWarning&&t.children!=null&&console.error(\"A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.\")}function Ze(e,t,n,a){t!==n&&(n=ra(n),ra(t)!==n&&(a[e]=t))}function fb(e,t,n){t.forEach(function(a){n[Gp(a)]=a===\"style\"?Gr(e):e.getAttribute(a)})}function xn(e,t){t===!1?console.error(\"Expected `%s` listener to be a function, instead got `false`.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.\",e,e,e):console.error(\"Expected `%s` listener to be a function, instead got a value of `%s` type.\",e,typeof t)}function Yp(e,t){return e=e.namespaceURI===rc||e.namespaceURI===kl?e.ownerDocument.createElementNS(e.namespaceURI,e.tagName):e.ownerDocument.createElement(e.tagName),e.innerHTML=t,e.innerHTML}function ra(e){return x(e)&&(console.error(\"The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before using it here.\",de(e)),B(e)),(typeof e==\"string\"?e:\"\"+e).replace(xx,`\n`).replace(Tx,\"\")}function Vp(e,t){return t=ra(t),ra(e)===t}function Ji(){}function ge(e,t,n,a,l,u){switch(n){case\"children\":typeof a==\"string\"?(ii(a,t,!1),t===\"body\"||t===\"textarea\"&&a===\"\"||Mu(e,a)):(typeof a==\"number\"||typeof a==\"bigint\")&&(ii(\"\"+a,t,!1),t!==\"body\"&&Mu(e,\"\"+a));break;case\"className\":ni(e,\"class\",a);break;case\"tabIndex\":ni(e,\"tabindex\",a);break;case\"dir\":case\"role\":case\"viewBox\":case\"width\":case\"height\":ni(e,n,a);break;case\"style\":ih(e,a,u);break;case\"data\":if(t!==\"object\"){ni(e,\"data\",a);break}case\"src\":case\"href\":if(a===\"\"&&(t!==\"a\"||n!==\"href\")){console.error(n===\"src\"?'An empty string (\"\") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.':'An empty string (\"\") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',n,n),e.removeAttribute(n);break}if(a==null||typeof a==\"function\"||typeof a==\"symbol\"||typeof a==\"boolean\"){e.removeAttribute(n);break}_(a,n),a=Uu(\"\"+a),e.setAttribute(n,a);break;case\"action\":case\"formAction\":if(a!=null&&(t===\"form\"?n===\"formAction\"?console.error(\"You can only pass the formAction prop to <input> or <button>. Use the action prop on <form>.\"):typeof a==\"function\"&&(l.encType==null&&l.method==null||Yc||(Yc=!0,console.error(\"Cannot specify a encType or method for a form that specifies a function as the action. React provides those automatically. They will get overridden.\")),l.target==null||qc||(qc=!0,console.error(\"Cannot specify a target for a form that specifies a function as the action. The function will always be executed in the same window.\"))):t===\"input\"||t===\"button\"?n===\"action\"?console.error(\"You can only pass the action prop to <form>. Use the formAction prop on <input> or <button>.\"):t!==\"input\"||l.type===\"submit\"||l.type===\"image\"||Bc?t!==\"button\"||l.type==null||l.type===\"submit\"||Bc?typeof a==\"function\"&&(l.name==null||D0||(D0=!0,console.error('Cannot specify a \"name\" prop for a button that specifies a function as a formAction. React needs it to encode which action should be invoked. It will get overridden.')),l.formEncType==null&&l.formMethod==null||Yc||(Yc=!0,console.error(\"Cannot specify a formEncType or formMethod for a button that specifies a function as a formAction. React provides those automatically. They will get overridden.\")),l.formTarget==null||qc||(qc=!0,console.error(\"Cannot specify a formTarget for a button that specifies a function as a formAction. The function will always be executed in the same window.\"))):(Bc=!0,console.error('A button can only specify a formAction along with type=\"submit\" or no type.')):(Bc=!0,console.error('An input can only specify a formAction along with type=\"submit\" or type=\"image\".')):console.error(n===\"action\"?\"You can only pass the action prop to <form>.\":\"You can only pass the formAction prop to <input> or <button>.\")),typeof a==\"function\"){e.setAttribute(n,\"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')\");break}else typeof u==\"function\"&&(n===\"formAction\"?(t!==\"input\"&&ge(e,t,\"name\",l.name,l,null),ge(e,t,\"formEncType\",l.formEncType,l,null),ge(e,t,\"formMethod\",l.formMethod,l,null),ge(e,t,\"formTarget\",l.formTarget,l,null)):(ge(e,t,\"encType\",l.encType,l,null),ge(e,t,\"method\",l.method,l,null),ge(e,t,\"target\",l.target,l,null)));if(a==null||typeof a==\"symbol\"||typeof a==\"boolean\"){e.removeAttribute(n);break}_(a,n),a=Uu(\"\"+a),e.setAttribute(n,a);break;case\"onClick\":a!=null&&(typeof a!=\"function\"&&xn(n,a),e.onclick=Ji);break;case\"onScroll\":a!=null&&(typeof a!=\"function\"&&xn(n,a),ne(\"scroll\",e));break;case\"onScrollEnd\":a!=null&&(typeof a!=\"function\"&&xn(n,a),ne(\"scrollend\",e));break;case\"dangerouslySetInnerHTML\":if(a!=null){if(typeof a!=\"object\"||!(\"__html\"in a))throw Error(\"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\");if(n=a.__html,n!=null){if(l.children!=null)throw Error(\"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\");e.innerHTML=n}}break;case\"multiple\":e.multiple=a&&typeof a!=\"function\"&&typeof a!=\"symbol\";break;case\"muted\":e.muted=a&&typeof a!=\"function\"&&typeof a!=\"symbol\";break;case\"suppressContentEditableWarning\":case\"suppressHydrationWarning\":case\"defaultValue\":case\"defaultChecked\":case\"innerHTML\":case\"ref\":break;case\"autoFocus\":break;case\"xlinkHref\":if(a==null||typeof a==\"function\"||typeof a==\"boolean\"||typeof a==\"symbol\"){e.removeAttribute(\"xlink:href\");break}_(a,n),n=Uu(\"\"+a),e.setAttributeNS(ml,\"xlink:href\",n);break;case\"contentEditable\":case\"spellCheck\":case\"draggable\":case\"value\":case\"autoReverse\":case\"externalResourcesRequired\":case\"focusable\":case\"preserveAlpha\":a!=null&&typeof a!=\"function\"&&typeof a!=\"symbol\"?(_(a,n),e.setAttribute(n,\"\"+a)):e.removeAttribute(n);break;case\"inert\":a!==\"\"||Vc[n]||(Vc[n]=!0,console.error(\"Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.\",n));case\"allowFullScreen\":case\"async\":case\"autoPlay\":case\"controls\":case\"default\":case\"defer\":case\"disabled\":case\"disablePictureInPicture\":case\"disableRemotePlayback\":case\"formNoValidate\":case\"hidden\":case\"loop\":case\"noModule\":case\"noValidate\":case\"open\":case\"playsInline\":case\"readOnly\":case\"required\":case\"reversed\":case\"scoped\":case\"seamless\":case\"itemScope\":a&&typeof a!=\"function\"&&typeof a!=\"symbol\"?e.setAttribute(n,\"\"):e.removeAttribute(n);break;case\"capture\":case\"download\":a===!0?e.setAttribute(n,\"\"):a!==!1&&a!=null&&typeof a!=\"function\"&&typeof a!=\"symbol\"?(_(a,n),e.setAttribute(n,a)):e.removeAttribute(n);break;case\"cols\":case\"rows\":case\"size\":case\"span\":a!=null&&typeof a!=\"function\"&&typeof a!=\"symbol\"&&!isNaN(a)&&1<=a?(_(a,n),e.setAttribute(n,a)):e.removeAttribute(n);break;case\"rowSpan\":case\"start\":a==null||typeof a==\"function\"||typeof a==\"symbol\"||isNaN(a)?e.removeAttribute(n):(_(a,n),e.setAttribute(n,a));break;case\"popover\":ne(\"beforetoggle\",e),ne(\"toggle\",e),ti(e,\"popover\",a);break;case\"xlinkActuate\":Un(e,ml,\"xlink:actuate\",a);break;case\"xlinkArcrole\":Un(e,ml,\"xlink:arcrole\",a);break;case\"xlinkRole\":Un(e,ml,\"xlink:role\",a);break;case\"xlinkShow\":Un(e,ml,\"xlink:show\",a);break;case\"xlinkTitle\":Un(e,ml,\"xlink:title\",a);break;case\"xlinkType\":Un(e,ml,\"xlink:type\",a);break;case\"xmlBase\":Un(e,vd,\"xml:base\",a);break;case\"xmlLang\":Un(e,vd,\"xml:lang\",a);break;case\"xmlSpace\":Un(e,vd,\"xml:space\",a);break;case\"is\":u!=null&&console.error('Cannot update the \"is\" prop after it has been initialized.'),ti(e,\"is\",a);break;case\"innerText\":case\"textContent\":break;case\"popoverTarget\":w0||a==null||typeof a!=\"object\"||(w0=!0,console.error(\"The `popoverTarget` prop expects the ID of an Element as a string. Received %s instead.\",a));default:!(2<n.length)||n[0]!==\"o\"&&n[0]!==\"O\"||n[1]!==\"n\"&&n[1]!==\"N\"?(n=ch(n),ti(e,n,a)):Ia.hasOwnProperty(n)&&a!=null&&typeof a!=\"function\"&&xn(n,a)}}function Vr(e,t,n,a,l,u){switch(n){case\"style\":ih(e,a,u);break;case\"dangerouslySetInnerHTML\":if(a!=null){if(typeof a!=\"object\"||!(\"__html\"in a))throw Error(\"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\");if(n=a.__html,n!=null){if(l.children!=null)throw Error(\"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\");e.innerHTML=n}}break;case\"children\":typeof a==\"string\"?Mu(e,a):(typeof a==\"number\"||typeof a==\"bigint\")&&Mu(e,\"\"+a);break;case\"onScroll\":a!=null&&(typeof a!=\"function\"&&xn(n,a),ne(\"scroll\",e));break;case\"onScrollEnd\":a!=null&&(typeof a!=\"function\"&&xn(n,a),ne(\"scrollend\",e));break;case\"onClick\":a!=null&&(typeof a!=\"function\"&&xn(n,a),e.onclick=Ji);break;case\"suppressContentEditableWarning\":case\"suppressHydrationWarning\":case\"innerHTML\":case\"ref\":break;case\"innerText\":case\"textContent\":break;default:if(Ia.hasOwnProperty(n))a!=null&&typeof a!=\"function\"&&xn(n,a);else e:{if(n[0]===\"o\"&&n[1]===\"n\"&&(l=n.endsWith(\"Capture\"),t=n.slice(2,l?n.length-7:void 0),u=e[Tt]||null,u=u!=null?u[n]:null,typeof u==\"function\"&&e.removeEventListener(t,u,l),typeof a==\"function\")){typeof u!=\"function\"&&u!==null&&(n in e?e[n]=null:e.hasAttribute(n)&&e.removeAttribute(n)),e.addEventListener(t,a,l);break e}n in e?e[n]=a:a===!0?e.setAttribute(n,\"\"):ti(e,n,a)}}}function tt(e,t,n){switch(Yr(t,n),t){case\"div\":case\"span\":case\"svg\":case\"path\":case\"a\":case\"g\":case\"p\":case\"li\":break;case\"img\":ne(\"error\",e),ne(\"load\",e);var a=!1,l=!1,u;for(u in n)if(n.hasOwnProperty(u)){var o=n[u];if(o!=null)switch(u){case\"src\":a=!0;break;case\"srcSet\":l=!0;break;case\"children\":case\"dangerouslySetInnerHTML\":throw Error(t+\" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\");default:ge(e,t,u,o,n,null)}}l&&ge(e,t,\"srcSet\",n.srcSet,n,null),a&&ge(e,t,\"src\",n.src,n,null);return;case\"input\":xl(\"input\",n),ne(\"invalid\",e);var i=u=o=l=null,c=null,s=null;for(a in n)if(n.hasOwnProperty(a)){var p=n[a];if(p!=null)switch(a){case\"name\":l=p;break;case\"type\":o=p;break;case\"checked\":c=p;break;case\"defaultChecked\":s=p;break;case\"value\":u=p;break;case\"defaultValue\":i=p;break;case\"children\":case\"dangerouslySetInnerHTML\":if(p!=null)throw Error(t+\" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\");break;default:ge(e,t,a,p,n,null)}}Qd(e,n),Zd(e,u,i,c,s,o,l,!1),li(e);return;case\"select\":xl(\"select\",n),ne(\"invalid\",e),a=o=u=null;for(l in n)if(n.hasOwnProperty(l)&&(i=n[l],i!=null))switch(l){case\"value\":u=i;break;case\"defaultValue\":o=i;break;case\"multiple\":a=i;default:ge(e,t,l,i,n,null)}Kd(e,n),t=u,n=o,e.multiple=!!a,t!=null?Tl(e,!!a,t,!1):n!=null&&Tl(e,!!a,n,!0);return;case\"textarea\":xl(\"textarea\",n),ne(\"invalid\",e),u=l=a=null;for(o in n)if(n.hasOwnProperty(o)&&(i=n[o],i!=null))switch(o){case\"value\":a=i;break;case\"defaultValue\":l=i;break;case\"children\":u=i;break;case\"dangerouslySetInnerHTML\":if(i!=null)throw Error(\"`dangerouslySetInnerHTML` does not make sense on <textarea>.\");break;default:ge(e,t,o,i,n,null)}Wd(e,n),Id(e,a,l,u),li(e);return;case\"option\":$d(e,n);for(c in n)if(n.hasOwnProperty(c)&&(a=n[c],a!=null))switch(c){case\"selected\":e.selected=a&&typeof a!=\"function\"&&typeof a!=\"symbol\";break;default:ge(e,t,c,a,n,null)}return;case\"dialog\":ne(\"beforetoggle\",e),ne(\"toggle\",e),ne(\"cancel\",e),ne(\"close\",e);break;case\"iframe\":case\"object\":ne(\"load\",e);break;case\"video\":case\"audio\":for(a=0;a<Xo.length;a++)ne(Xo[a],e);break;case\"image\":ne(\"error\",e),ne(\"load\",e);break;case\"details\":ne(\"toggle\",e);break;case\"embed\":case\"source\":case\"link\":ne(\"error\",e),ne(\"load\",e);case\"area\":case\"base\":case\"br\":case\"col\":case\"hr\":case\"keygen\":case\"meta\":case\"param\":case\"track\":case\"wbr\":case\"menuitem\":for(s in n)if(n.hasOwnProperty(s)&&(a=n[s],a!=null))switch(s){case\"children\":case\"dangerouslySetInnerHTML\":throw Error(t+\" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\");default:ge(e,t,s,a,n,null)}return;default:if(zu(t)){for(p in n)n.hasOwnProperty(p)&&(a=n[p],a!==void 0&&Vr(e,t,p,a,n,void 0));return}}for(i in n)n.hasOwnProperty(i)&&(a=n[i],a!=null&&ge(e,t,i,a,n,null))}function db(e,t,n,a){switch(Yr(t,a),t){case\"div\":case\"span\":case\"svg\":case\"path\":case\"a\":case\"g\":case\"p\":case\"li\":break;case\"input\":var l=null,u=null,o=null,i=null,c=null,s=null,p=null;for(b in n){var v=n[b];if(n.hasOwnProperty(b)&&v!=null)switch(b){case\"checked\":break;case\"value\":break;case\"defaultValue\":c=v;default:a.hasOwnProperty(b)||ge(e,t,b,null,a,v)}}for(var m in a){var b=a[m];if(v=n[m],a.hasOwnProperty(m)&&(b!=null||v!=null))switch(m){case\"type\":u=b;break;case\"name\":l=b;break;case\"checked\":s=b;break;case\"defaultChecked\":p=b;break;case\"value\":o=b;break;case\"defaultValue\":i=b;break;case\"children\":case\"dangerouslySetInnerHTML\":if(b!=null)throw Error(t+\" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\");break;default:b!==v&&ge(e,t,m,b,a,v)}}t=n.type===\"checkbox\"||n.type===\"radio\"?n.checked!=null:n.value!=null,a=a.type===\"checkbox\"||a.type===\"radio\"?a.checked!=null:a.value!=null,t||!a||C0||(console.error(\"A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components\"),C0=!0),!t||a||A0||(console.error(\"A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components\"),A0=!0),ls(e,o,i,c,s,p,u,l);return;case\"select\":b=o=i=m=null;for(u in n)if(c=n[u],n.hasOwnProperty(u)&&c!=null)switch(u){case\"value\":break;case\"multiple\":b=c;default:a.hasOwnProperty(u)||ge(e,t,u,null,a,c)}for(l in a)if(u=a[l],c=n[l],a.hasOwnProperty(l)&&(u!=null||c!=null))switch(l){case\"value\":m=u;break;case\"defaultValue\":i=u;break;case\"multiple\":o=u;default:u!==c&&ge(e,t,l,u,a,c)}a=i,t=o,n=b,m!=null?Tl(e,!!t,m,!1):!!n!=!!t&&(a!=null?Tl(e,!!t,a,!0):Tl(e,!!t,t?[]:\"\",!1));return;case\"textarea\":b=m=null;for(i in n)if(l=n[i],n.hasOwnProperty(i)&&l!=null&&!a.hasOwnProperty(i))switch(i){case\"value\":break;case\"children\":break;default:ge(e,t,i,null,a,l)}for(o in a)if(l=a[o],u=n[o],a.hasOwnProperty(o)&&(l!=null||u!=null))switch(o){case\"value\":m=l;break;case\"defaultValue\":b=l;break;case\"children\":break;case\"dangerouslySetInnerHTML\":if(l!=null)throw Error(\"`dangerouslySetInnerHTML` does not make sense on <textarea>.\");break;default:l!==u&&ge(e,t,o,l,a,u)}Fd(e,m,b);return;case\"option\":for(var U in n)if(m=n[U],n.hasOwnProperty(U)&&m!=null&&!a.hasOwnProperty(U))switch(U){case\"selected\":e.selected=!1;break;default:ge(e,t,U,null,a,m)}for(c in a)if(m=a[c],b=n[c],a.hasOwnProperty(c)&&m!==b&&(m!=null||b!=null))switch(c){case\"selected\":e.selected=m&&typeof m!=\"function\"&&typeof m!=\"symbol\";break;default:ge(e,t,c,m,a,b)}return;case\"img\":case\"link\":case\"area\":case\"base\":case\"br\":case\"col\":case\"embed\":case\"hr\":case\"keygen\":case\"meta\":case\"param\":case\"source\":case\"track\":case\"wbr\":case\"menuitem\":for(var q in n)m=n[q],n.hasOwnProperty(q)&&m!=null&&!a.hasOwnProperty(q)&&ge(e,t,q,null,a,m);for(s in a)if(m=a[s],b=n[s],a.hasOwnProperty(s)&&m!==b&&(m!=null||b!=null))switch(s){case\"children\":case\"dangerouslySetInnerHTML\":if(m!=null)throw Error(t+\" is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\");break;default:ge(e,t,s,m,a,b)}return;default:if(zu(t)){for(var xe in n)m=n[xe],n.hasOwnProperty(xe)&&m!==void 0&&!a.hasOwnProperty(xe)&&Vr(e,t,xe,void 0,a,m);for(p in a)m=a[p],b=n[p],!a.hasOwnProperty(p)||m===b||m===void 0&&b===void 0||Vr(e,t,p,m,a,b);return}}for(var ae in n)m=n[ae],n.hasOwnProperty(ae)&&m!=null&&!a.hasOwnProperty(ae)&&ge(e,t,ae,null,a,m);for(v in a)m=a[v],b=n[v],!a.hasOwnProperty(v)||m===b||m==null&&b==null||ge(e,t,v,m,a,b)}function Gp(e){switch(e){case\"class\":return\"className\";case\"for\":return\"htmlFor\";default:return e}}function Gr(e){var t={};e=e.style;for(var n=0;n<e.length;n++){var a=e[n];t[a]=e.getPropertyValue(a)}return t}function kp(e,t,n){if(t!=null&&typeof t!=\"object\")console.error(\"The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.\");else{var a,l=a=\"\",u;for(u in t)if(t.hasOwnProperty(u)){var o=t[u];o!=null&&typeof o!=\"boolean\"&&o!==\"\"&&(u.indexOf(\"--\")===0?(Re(o,u),a+=l+u+\":\"+(\"\"+o).trim()):typeof o!=\"number\"||o===0||Jy.has(u)?(Re(o,u),a+=l+u.replace(ky,\"-$1\").toLowerCase().replace(Xy,\"-ms-\")+\":\"+(\"\"+o).trim()):a+=l+u.replace(ky,\"-$1\").toLowerCase().replace(Xy,\"-ms-\")+\":\"+o+\"px\",l=\";\")}a=a||null,t=e.getAttribute(\"style\"),t!==a&&(a=ra(a),ra(t)!==a&&(n.style=Gr(e)))}}function Vt(e,t,n,a,l,u){if(l.delete(n),e=e.getAttribute(n),e===null)switch(typeof a){case\"undefined\":case\"function\":case\"symbol\":case\"boolean\":return}else if(a!=null)switch(typeof a){case\"function\":case\"symbol\":case\"boolean\":break;default:if(_(a,t),e===\"\"+a)return}Ze(t,e,a,u)}function Xp(e,t,n,a,l,u){if(l.delete(n),e=e.getAttribute(n),e===null){switch(typeof a){case\"function\":case\"symbol\":return}if(!a)return}else switch(typeof a){case\"function\":case\"symbol\":break;default:if(a)return}Ze(t,e,a,u)}function kr(e,t,n,a,l,u){if(l.delete(n),e=e.getAttribute(n),e===null)switch(typeof a){case\"undefined\":case\"function\":case\"symbol\":return}else if(a!=null)switch(typeof a){case\"function\":case\"symbol\":break;default:if(_(a,n),e===\"\"+a)return}Ze(t,e,a,u)}function Qp(e,t,n,a,l,u){if(l.delete(n),e=e.getAttribute(n),e===null)switch(typeof a){case\"undefined\":case\"function\":case\"symbol\":case\"boolean\":return;default:if(isNaN(a))return}else if(a!=null)switch(typeof a){case\"function\":case\"symbol\":case\"boolean\":break;default:if(!isNaN(a)&&(_(a,t),e===\"\"+a))return}Ze(t,e,a,u)}function Xr(e,t,n,a,l,u){if(l.delete(n),e=e.getAttribute(n),e===null)switch(typeof a){case\"undefined\":case\"function\":case\"symbol\":case\"boolean\":return}else if(a!=null)switch(typeof a){case\"function\":case\"symbol\":case\"boolean\":break;default:if(_(a,t),n=Uu(\"\"+a),e===n)return}Ze(t,e,a,u)}function Zp(e,t,n,a){for(var l={},u=new Set,o=e.attributes,i=0;i<o.length;i++)switch(o[i].name.toLowerCase()){case\"value\":break;case\"checked\":break;case\"selected\":break;default:u.add(o[i].name)}if(zu(t)){for(var c in n)if(n.hasOwnProperty(c)){var s=n[c];if(s!=null){if(Ia.hasOwnProperty(c))typeof s!=\"function\"&&xn(c,s);else if(n.suppressHydrationWarning!==!0)switch(c){case\"children\":typeof s!=\"string\"&&typeof s!=\"number\"||Ze(\"children\",e.textContent,s,l);continue;case\"suppressContentEditableWarning\":case\"suppressHydrationWarning\":case\"defaultValue\":case\"defaultChecked\":case\"innerHTML\":case\"ref\":continue;case\"dangerouslySetInnerHTML\":o=e.innerHTML,s=s?s.__html:void 0,s!=null&&(s=Yp(e,s),Ze(c,o,s,l));continue;case\"style\":u.delete(c),kp(e,s,l);continue;case\"offsetParent\":case\"offsetTop\":case\"offsetLeft\":case\"offsetWidth\":case\"offsetHeight\":case\"isContentEditable\":case\"outerText\":case\"outerHTML\":u.delete(c.toLowerCase()),console.error(\"Assignment to read-only property will result in a no-op: `%s`\",c);continue;case\"className\":u.delete(\"class\"),o=Bd(e,\"class\",s),Ze(\"className\",o,s,l);continue;default:a.context===ea&&t!==\"svg\"&&t!==\"math\"?u.delete(c.toLowerCase()):u.delete(c),o=Bd(e,c,s),Ze(c,o,s,l)}}}}else for(s in n)if(n.hasOwnProperty(s)&&(c=n[s],c!=null)){if(Ia.hasOwnProperty(s))typeof c!=\"function\"&&xn(s,c);else if(n.suppressHydrationWarning!==!0)switch(s){case\"children\":typeof c!=\"string\"&&typeof c!=\"number\"||Ze(\"children\",e.textContent,c,l);continue;case\"suppressContentEditableWarning\":case\"suppressHydrationWarning\":case\"value\":case\"checked\":case\"selected\":case\"defaultValue\":case\"defaultChecked\":case\"innerHTML\":case\"ref\":continue;case\"dangerouslySetInnerHTML\":o=e.innerHTML,c=c?c.__html:void 0,c!=null&&(c=Yp(e,c),o!==c&&(l[s]={__html:o}));continue;case\"className\":Vt(e,s,\"class\",c,u,l);continue;case\"tabIndex\":Vt(e,s,\"tabindex\",c,u,l);continue;case\"style\":u.delete(s),kp(e,c,l);continue;case\"multiple\":u.delete(s),Ze(s,e.multiple,c,l);continue;case\"muted\":u.delete(s),Ze(s,e.muted,c,l);continue;case\"autoFocus\":u.delete(\"autofocus\"),Ze(s,e.autofocus,c,l);continue;case\"data\":if(t!==\"object\"){u.delete(s),o=e.getAttribute(\"data\"),Ze(s,o,c,l);continue}case\"src\":case\"href\":if(!(c!==\"\"||t===\"a\"&&s===\"href\"||t===\"object\"&&s===\"data\")){console.error(s===\"src\"?'An empty string (\"\") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.':'An empty string (\"\") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',s,s);continue}Xr(e,s,s,c,u,l);continue;case\"action\":case\"formAction\":if(o=e.getAttribute(s),typeof c==\"function\"){u.delete(s.toLowerCase()),s===\"formAction\"?(u.delete(\"name\"),u.delete(\"formenctype\"),u.delete(\"formmethod\"),u.delete(\"formtarget\")):(u.delete(\"enctype\"),u.delete(\"method\"),u.delete(\"target\"));continue}else if(o===Ex){u.delete(s.toLowerCase()),Ze(s,\"function\",c,l);continue}Xr(e,s,s.toLowerCase(),c,u,l);continue;case\"xlinkHref\":Xr(e,s,\"xlink:href\",c,u,l);continue;case\"contentEditable\":kr(e,s,\"contenteditable\",c,u,l);continue;case\"spellCheck\":kr(e,s,\"spellcheck\",c,u,l);continue;case\"draggable\":case\"autoReverse\":case\"externalResourcesRequired\":case\"focusable\":case\"preserveAlpha\":kr(e,s,s,c,u,l);continue;case\"allowFullScreen\":case\"async\":case\"autoPlay\":case\"controls\":case\"default\":case\"defer\":case\"disabled\":case\"disablePictureInPicture\":case\"disableRemotePlayback\":case\"formNoValidate\":case\"hidden\":case\"loop\":case\"noModule\":case\"noValidate\":case\"open\":case\"playsInline\":case\"readOnly\":case\"required\":case\"reversed\":case\"scoped\":case\"seamless\":case\"itemScope\":Xp(e,s,s.toLowerCase(),c,u,l);continue;case\"capture\":case\"download\":e:{i=e;var p=o=s,v=l;if(u.delete(p),i=i.getAttribute(p),i===null)switch(typeof c){case\"undefined\":case\"function\":case\"symbol\":break e;default:if(c===!1)break e}else if(c!=null)switch(typeof c){case\"function\":case\"symbol\":break;case\"boolean\":if(c===!0&&i===\"\")break e;break;default:if(_(c,o),i===\"\"+c)break e}Ze(o,i,c,v)}continue;case\"cols\":case\"rows\":case\"size\":case\"span\":e:{if(i=e,p=o=s,v=l,u.delete(p),i=i.getAttribute(p),i===null)switch(typeof c){case\"undefined\":case\"function\":case\"symbol\":case\"boolean\":break e;default:if(isNaN(c)||1>c)break e}else if(c!=null)switch(typeof c){case\"function\":case\"symbol\":case\"boolean\":break;default:if(!(isNaN(c)||1>c)&&(_(c,o),i===\"\"+c))break e}Ze(o,i,c,v)}continue;case\"rowSpan\":Qp(e,s,\"rowspan\",c,u,l);continue;case\"start\":Qp(e,s,s,c,u,l);continue;case\"xHeight\":Vt(e,s,\"x-height\",c,u,l);continue;case\"xlinkActuate\":Vt(e,s,\"xlink:actuate\",c,u,l);continue;case\"xlinkArcrole\":Vt(e,s,\"xlink:arcrole\",c,u,l);continue;case\"xlinkRole\":Vt(e,s,\"xlink:role\",c,u,l);continue;case\"xlinkShow\":Vt(e,s,\"xlink:show\",c,u,l);continue;case\"xlinkTitle\":Vt(e,s,\"xlink:title\",c,u,l);continue;case\"xlinkType\":Vt(e,s,\"xlink:type\",c,u,l);continue;case\"xmlBase\":Vt(e,s,\"xml:base\",c,u,l);continue;case\"xmlLang\":Vt(e,s,\"xml:lang\",c,u,l);continue;case\"xmlSpace\":Vt(e,s,\"xml:space\",c,u,l);continue;case\"inert\":c!==\"\"||Vc[s]||(Vc[s]=!0,console.error(\"Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.\",s)),Xp(e,s,s,c,u,l);continue;default:if(!(2<s.length)||s[0]!==\"o\"&&s[0]!==\"O\"||s[1]!==\"n\"&&s[1]!==\"N\"){i=ch(s),o=!1,a.context===ea&&t!==\"svg\"&&t!==\"math\"?u.delete(i.toLowerCase()):(p=s.toLowerCase(),p=fc.hasOwnProperty(p)&&fc[p]||null,p!==null&&p!==s&&(o=!0,u.delete(p)),u.delete(i));e:if(p=e,v=i,i=c,ts(v))if(p.hasAttribute(v))p=p.getAttribute(v),_(i,v),i=p===\"\"+i?i:p;else{switch(typeof i){case\"function\":case\"symbol\":break e;case\"boolean\":if(p=v.toLowerCase().slice(0,5),p!==\"data-\"&&p!==\"aria-\")break e}i=i===void 0?void 0:null}else i=void 0;o||Ze(s,i,c,l)}}}return 0<u.size&&n.suppressHydrationWarning!==!0&&fb(e,u,l),Object.keys(l).length===0?null:l}function hb(e,t){switch(e.length){case 0:return\"\";case 1:return e[0];case 2:return e[0]+\" \"+t+\" \"+e[1];default:return e.slice(0,-1).join(\", \")+\", \"+t+\" \"+e[e.length-1]}}function Ki(e){return e.nodeType===9?e:e.ownerDocument}function $p(e){switch(e){case kl:return Su;case rc:return Xc;default:return ea}}function Jp(e,t){if(e===ea)switch(t){case\"svg\":return Su;case\"math\":return Xc;default:return ea}return e===Su&&t===\"foreignObject\"?ea:e}function Qr(e,t){return e===\"textarea\"||e===\"noscript\"||typeof t.children==\"string\"||typeof t.children==\"number\"||typeof t.children==\"bigint\"||typeof t.dangerouslySetInnerHTML==\"object\"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}function mb(){var e=window.event;return e&&e.type===\"popstate\"?e===Td?!1:(Td=e,!0):(Td=null,!1)}function pb(e){setTimeout(function(){throw e})}function yb(e,t,n){switch(t){case\"button\":case\"input\":case\"select\":case\"textarea\":n.autoFocus&&e.focus();break;case\"img\":n.src?e.src=n.src:n.srcSet&&(e.srcset=n.srcSet)}}function gb(e,t,n,a){db(e,t,n,a),e[Tt]=a}function Kp(e){Mu(e,\"\")}function vb(e,t,n){e.nodeValue=n}function fa(e){return e===\"head\"}function bb(e,t){e.removeChild(t)}function Sb(e,t){(e.nodeType===9?e.body:e.nodeName===\"HTML\"?e.ownerDocument.body:e).removeChild(t)}function Wp(e,t){var n=t,a=0,l=0;do{var u=n.nextSibling;if(e.removeChild(n),u&&u.nodeType===8)if(n=u.data,n===kc){if(0<a&&8>a){n=a;var o=e.ownerDocument;if(n&Ax&&ao(o.documentElement),n&Cx&&ao(o.body),n&Dx)for(n=o.head,ao(n),o=n.firstChild;o;){var i=o.nextSibling,c=o.nodeName;o[ro]||c===\"SCRIPT\"||c===\"STYLE\"||c===\"LINK\"&&o.rel.toLowerCase()===\"stylesheet\"||n.removeChild(o),o=i}}if(l===0){e.removeChild(u),io(t);return}l--}else n===Gc||n===Pn||n===Qo?l++:a=n.charCodeAt(0)-48;else a=0;n=u}while(n);io(t)}function xb(e){e=e.style,typeof e.setProperty==\"function\"?e.setProperty(\"display\",\"none\",\"important\"):e.display=\"none\"}function Tb(e){e.nodeValue=\"\"}function Eb(e,t){t=t[wx],t=t!=null&&t.hasOwnProperty(\"display\")?t.display:null,e.style.display=t==null||typeof t==\"boolean\"?\"\":(\"\"+t).trim()}function Rb(e,t){e.nodeValue=t}function Zr(e){var t=e.firstChild;for(t&&t.nodeType===10&&(t=t.nextSibling);t;){var n=t;switch(t=t.nextSibling,n.nodeName){case\"HTML\":case\"HEAD\":case\"BODY\":Zr(n),es(n);continue;case\"SCRIPT\":case\"STYLE\":continue;case\"LINK\":if(n.rel.toLowerCase()===\"stylesheet\")continue}e.removeChild(n)}}function Ab(e,t,n,a){for(;e.nodeType===1;){var l=n;if(e.nodeName.toLowerCase()!==t.toLowerCase()){if(!a&&(e.nodeName!==\"INPUT\"||e.type!==\"hidden\"))break}else if(a){if(!e[ro])switch(t){case\"meta\":if(!e.hasAttribute(\"itemprop\"))break;return e;case\"link\":if(u=e.getAttribute(\"rel\"),u===\"stylesheet\"&&e.hasAttribute(\"data-precedence\"))break;if(u!==l.rel||e.getAttribute(\"href\")!==(l.href==null||l.href===\"\"?null:l.href)||e.getAttribute(\"crossorigin\")!==(l.crossOrigin==null?null:l.crossOrigin)||e.getAttribute(\"title\")!==(l.title==null?null:l.title))break;return e;case\"style\":if(e.hasAttribute(\"data-precedence\"))break;return e;case\"script\":if(u=e.getAttribute(\"src\"),(u!==(l.src==null?null:l.src)||e.getAttribute(\"type\")!==(l.type==null?null:l.type)||e.getAttribute(\"crossorigin\")!==(l.crossOrigin==null?null:l.crossOrigin))&&u&&e.hasAttribute(\"async\")&&!e.hasAttribute(\"itemprop\"))break;return e;default:return e}}else if(t===\"input\"&&e.type===\"hidden\"){_(l.name,\"name\");var u=l.name==null?null:\"\"+l.name;if(l.type===\"hidden\"&&e.getAttribute(\"name\")===u)return e}else return e;if(e=Gt(e.nextSibling),e===null)break}return null}function Cb(e,t,n){if(t===\"\")return null;for(;e.nodeType!==3;)if((e.nodeType!==1||e.nodeName!==\"INPUT\"||e.type!==\"hidden\")&&!n||(e=Gt(e.nextSibling),e===null))return null;return e}function $r(e){return e.data===Qo||e.data===Pn&&e.ownerDocument.readyState===M0}function Db(e,t){var n=e.ownerDocument;if(e.data!==Pn||n.readyState===M0)t();else{var a=function(){t(),n.removeEventListener(\"DOMContentLoaded\",a)};n.addEventListener(\"DOMContentLoaded\",a),e._reactRetry=a}}function Gt(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t===Gc||t===Qo||t===Pn||t===bd||t===O0)break;if(t===kc)return null}}return e}function Fp(e){if(e.nodeType===1){for(var t=e.nodeName.toLowerCase(),n={},a=e.attributes,l=0;l<a.length;l++){var u=a[l];n[Gp(u.name)]=u.name.toLowerCase()===\"style\"?Gr(e):u.value}return{type:t,props:n}}return e.nodeType===8?{type:\"Suspense\",props:{}}:e.nodeValue}function Ip(e,t,n){return n===null||n[Rx]!==!0?(e.nodeValue===t?e=null:(t=ra(t),e=ra(e.nodeValue)===t?null:e.nodeValue),e):null}function Pp(e){e=e.nextSibling;for(var t=0;e;){if(e.nodeType===8){var n=e.data;if(n===kc){if(t===0)return Gt(e.nextSibling);t--}else n!==Gc&&n!==Qo&&n!==Pn||t++}e=e.nextSibling}return null}function ey(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var n=e.data;if(n===Gc||n===Qo||n===Pn){if(t===0)return e;t--}else n===kc&&t++}e=e.previousSibling}return null}function wb(e){io(e)}function Ob(e){io(e)}function ty(e,t,n,a,l){switch(l&&rs(e,a.ancestorInfo),t=Ki(n),e){case\"html\":if(e=t.documentElement,!e)throw Error(\"React expected an <html> element (document.documentElement) to exist in the Document but one was not found. React never removes the documentElement for any Document it renders into so the cause is likely in some other script running on this page.\");return e;case\"head\":if(e=t.head,!e)throw Error(\"React expected a <head> element (document.head) to exist in the Document but one was not found. React never removes the head for any Document it renders into so the cause is likely in some other script running on this page.\");return e;case\"body\":if(e=t.body,!e)throw Error(\"React expected a <body> element (document.body) to exist in the Document but one was not found. React never removes the body for any Document it renders into so the cause is likely in some other script running on this page.\");return e;default:throw Error(\"resolveSingletonInstance was called with an element type that is not supported. This is a bug in React.\")}}function Mb(e,t,n,a){if(!n[ya]&&Na(n)){var l=n.tagName.toLowerCase();console.error(\"You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first.\",l,l,l)}switch(e){case\"html\":case\"head\":case\"body\":break;default:console.error(\"acquireSingletonInstance was called with an element type that is not supported. This is a bug in React.\")}for(l=n.attributes;l.length;)n.removeAttributeNode(l[0]);tt(n,e,t),n[ct]=a,n[Tt]=t}function ao(e){for(var t=e.attributes;t.length;)e.removeAttributeNode(t[0]);es(e)}function Wi(e){return typeof e.getRootNode==\"function\"?e.getRootNode():e.nodeType===9?e:e.ownerDocument}function ny(e,t,n){var a=xu;if(a&&typeof t==\"string\"&&t){var l=Yt(t);l='link[rel=\"'+e+'\"][href=\"'+l+'\"]',typeof n==\"string\"&&(l+='[crossorigin=\"'+n+'\"]'),_0.has(l)||(_0.add(l),e={rel:e,crossOrigin:n,href:t},a.querySelector(l)===null&&(t=a.createElement(\"link\"),tt(t,\"link\",e),Qe(t),a.head.appendChild(t)))}}function ay(e,t,n,a){var l=(l=ma.current)?Wi(l):null;if(!l)throw Error('\"resourceRoot\" was expected to exist. This is a bug in React.');switch(e){case\"meta\":case\"title\":return null;case\"style\":return typeof n.precedence==\"string\"&&typeof n.href==\"string\"?(n=_l(n.href),t=bl(l).hoistableStyles,a=t.get(n),a||(a={type:\"style\",instance:null,count:0,state:null},t.set(n,a)),a):{type:\"void\",instance:null,count:0,state:null};case\"link\":if(n.rel===\"stylesheet\"&&typeof n.href==\"string\"&&typeof n.precedence==\"string\"){e=_l(n.href);var u=bl(l).hoistableStyles,o=u.get(e);if(!o&&(l=l.ownerDocument||l,o={type:\"stylesheet\",instance:null,count:0,state:{loading:yl,preload:null}},u.set(e,o),(u=l.querySelector(lo(e)))&&!u._p&&(o.instance=u,o.state.loading=Zo|Pt),!en.has(e))){var i={rel:\"preload\",as:\"style\",href:n.href,crossOrigin:n.crossOrigin,integrity:n.integrity,media:n.media,hrefLang:n.hrefLang,referrerPolicy:n.referrerPolicy};en.set(e,i),u||zb(l,e,i,o.state)}if(t&&a===null)throw n=`\n\n  - `+Fi(t)+`\n  + `+Fi(n),Error(\"Expected <link> not to update to be updated to a stylesheet with precedence. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key.\"+n);return o}if(t&&a!==null)throw n=`\n\n  - `+Fi(t)+`\n  + `+Fi(n),Error(\"Expected stylesheet with precedence to not be updated to a different kind of <link>. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key.\"+n);return null;case\"script\":return t=n.async,n=n.src,typeof n==\"string\"&&t&&typeof t!=\"function\"&&typeof t!=\"symbol\"?(n=Ll(n),t=bl(l).hoistableScripts,a=t.get(n),a||(a={type:\"script\",instance:null,count:0,state:null},t.set(n,a)),a):{type:\"void\",instance:null,count:0,state:null};default:throw Error('getResource encountered a type it did not expect: \"'+e+'\". this is a bug in React.')}}function Fi(e){var t=0,n=\"<link\";return typeof e.rel==\"string\"?(t++,n+=' rel=\"'+e.rel+'\"'):kn.call(e,\"rel\")&&(t++,n+=' rel=\"'+(e.rel===null?\"null\":\"invalid type \"+typeof e.rel)+'\"'),typeof e.href==\"string\"?(t++,n+=' href=\"'+e.href+'\"'):kn.call(e,\"href\")&&(t++,n+=' href=\"'+(e.href===null?\"null\":\"invalid type \"+typeof e.href)+'\"'),typeof e.precedence==\"string\"?(t++,n+=' precedence=\"'+e.precedence+'\"'):kn.call(e,\"precedence\")&&(t++,n+=\" precedence={\"+(e.precedence===null?\"null\":\"invalid type \"+typeof e.precedence)+\"}\"),Object.getOwnPropertyNames(e).length>t&&(n+=\" ...\"),n+\" />\"}function _l(e){return'href=\"'+Yt(e)+'\"'}function lo(e){return'link[rel=\"stylesheet\"]['+e+\"]\"}function ly(e){return W({},e,{\"data-precedence\":e.precedence,precedence:null})}function zb(e,t,n,a){e.querySelector('link[rel=\"preload\"][as=\"style\"]['+t+\"]\")?a.loading=Zo:(t=e.createElement(\"link\"),a.preload=t,t.addEventListener(\"load\",function(){return a.loading|=Zo}),t.addEventListener(\"error\",function(){return a.loading|=N0}),tt(t,\"link\",n),Qe(t),e.head.appendChild(t))}function Ll(e){return'[src=\"'+Yt(e)+'\"]'}function uo(e){return\"script[async]\"+e}function uy(e,t,n){if(t.count++,t.instance===null)switch(t.type){case\"style\":var a=e.querySelector('style[data-href~=\"'+Yt(n.href)+'\"]');if(a)return t.instance=a,Qe(a),a;var l=W({},n,{\"data-href\":n.href,\"data-precedence\":n.precedence,href:null,precedence:null});return a=(e.ownerDocument||e).createElement(\"style\"),Qe(a),tt(a,\"style\",l),Ii(a,n.precedence,e),t.instance=a;case\"stylesheet\":l=_l(n.href);var u=e.querySelector(lo(l));if(u)return t.state.loading|=Pt,t.instance=u,Qe(u),u;a=ly(n),(l=en.get(l))&&Jr(a,l),u=(e.ownerDocument||e).createElement(\"link\"),Qe(u);var o=u;return o._p=new Promise(function(i,c){o.onload=i,o.onerror=c}),tt(u,\"link\",a),t.state.loading|=Pt,Ii(u,n.precedence,e),t.instance=u;case\"script\":return u=Ll(n.src),(l=e.querySelector(uo(u)))?(t.instance=l,Qe(l),l):(a=n,(l=en.get(u))&&(a=W({},n),Kr(a,l)),e=e.ownerDocument||e,l=e.createElement(\"script\"),Qe(l),tt(l,\"link\",a),e.head.appendChild(l),t.instance=l);case\"void\":return null;default:throw Error('acquireResource encountered a resource type it did not expect: \"'+t.type+'\". this is a bug in React.')}else t.type===\"stylesheet\"&&(t.state.loading&Pt)===yl&&(a=t.instance,t.state.loading|=Pt,Ii(a,n.precedence,e));return t.instance}function Ii(e,t,n){for(var a=n.querySelectorAll('link[rel=\"stylesheet\"][data-precedence],style[data-precedence]'),l=a.length?a[a.length-1]:null,u=l,o=0;o<a.length;o++){var i=a[o];if(i.dataset.precedence===t)u=i;else if(u!==l)break}u?u.parentNode.insertBefore(e,u.nextSibling):(t=n.nodeType===9?n.head:n,t.insertBefore(e,t.firstChild))}function Jr(e,t){e.crossOrigin==null&&(e.crossOrigin=t.crossOrigin),e.referrerPolicy==null&&(e.referrerPolicy=t.referrerPolicy),e.title==null&&(e.title=t.title)}function Kr(e,t){e.crossOrigin==null&&(e.crossOrigin=t.crossOrigin),e.referrerPolicy==null&&(e.referrerPolicy=t.referrerPolicy),e.integrity==null&&(e.integrity=t.integrity)}function oy(e,t,n){if(Qc===null){var a=new Map,l=Qc=new Map;l.set(n,a)}else l=Qc,a=l.get(n),a||(a=new Map,l.set(n,a));if(a.has(e))return a;for(a.set(e,null),n=n.getElementsByTagName(e),l=0;l<n.length;l++){var u=n[l];if(!(u[ro]||u[ct]||e===\"link\"&&u.getAttribute(\"rel\")===\"stylesheet\")&&u.namespaceURI!==kl){var o=u.getAttribute(t)||\"\";o=e+o;var i=a.get(o);i?i.push(u):a.set(o,[u])}}return a}function iy(e,t,n){e=e.ownerDocument||e,e.head.insertBefore(n,t===\"title\"?e.querySelector(\"head > title\"):null)}function Ub(e,t,n){var a=!n.ancestorInfo.containerTagInScope;if(n.context===Su||t.itemProp!=null)return!a||t.itemProp==null||e!==\"meta\"&&e!==\"title\"&&e!==\"style\"&&e!==\"link\"&&e!==\"script\"||console.error(\"Cannot render a <%s> outside the main document if it has an `itemProp` prop. `itemProp` suggests the tag belongs to an `itemScope` which can appear anywhere in the DOM. If you were intending for React to hoist this <%s> remove the `itemProp` prop. Otherwise, try moving this tag into the <head> or <body> of the Document.\",e,e),!1;switch(e){case\"meta\":case\"title\":return!0;case\"style\":if(typeof t.precedence!=\"string\"||typeof t.href!=\"string\"||t.href===\"\"){a&&console.error('Cannot render a <style> outside the main document without knowing its precedence and a unique href key. React can hoist and deduplicate <style> tags if you provide a `precedence` prop along with an `href` prop that does not conflict with the `href` values used in any other hoisted <style> or <link rel=\"stylesheet\" ...> tags.  Note that hoisting <style> tags is considered an advanced feature that most will not use directly. Consider moving the <style> tag to the <head> or consider adding a `precedence=\"default\"` and `href=\"some unique resource identifier\"`.');break}return!0;case\"link\":if(typeof t.rel!=\"string\"||typeof t.href!=\"string\"||t.href===\"\"||t.onLoad||t.onError){if(t.rel===\"stylesheet\"&&typeof t.precedence==\"string\"){e=t.href;var l=t.onError,u=t.disabled;n=[],t.onLoad&&n.push(\"`onLoad`\"),l&&n.push(\"`onError`\"),u!=null&&n.push(\"`disabled`\"),l=hb(n,\"and\"),l+=n.length===1?\" prop\":\" props\",u=n.length===1?\"an \"+l:\"the \"+l,n.length&&console.error('React encountered a <link rel=\"stylesheet\" href=\"%s\" ... /> with a `precedence` prop that also included %s. The presence of loading and error handlers indicates an intent to manage the stylesheet loading state from your from your Component code and React will not hoist or deduplicate this stylesheet. If your intent was to have React hoist and deduplciate this stylesheet using the `precedence` prop remove the %s, otherwise remove the `precedence` prop.',e,u,l)}a&&(typeof t.rel!=\"string\"||typeof t.href!=\"string\"||t.href===\"\"?console.error(\"Cannot render a <link> outside the main document without a `rel` and `href` prop. Try adding a `rel` and/or `href` prop to this <link> or moving the link into the <head> tag\"):(t.onError||t.onLoad)&&console.error(\"Cannot render a <link> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>.\"));break}switch(t.rel){case\"stylesheet\":return e=t.precedence,t=t.disabled,typeof e!=\"string\"&&a&&console.error('Cannot render a <link rel=\"stylesheet\" /> outside the main document without knowing its precedence. Consider adding precedence=\"default\" or moving it into the root <head> tag.'),typeof e==\"string\"&&t==null;default:return!0}case\"script\":if(e=t.async&&typeof t.async!=\"function\"&&typeof t.async!=\"symbol\",!e||t.onLoad||t.onError||!t.src||typeof t.src!=\"string\"){a&&(e?t.onLoad||t.onError?console.error(\"Cannot render a <script> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>.\"):console.error(\"Cannot render a <script> outside the main document without `async={true}` and a non-empty `src` prop. Ensure there is a valid `src` and either make the script async or move it into the root <head> tag or somewhere in the <body>.\"):console.error('Cannot render a sync or defer <script> outside the main document without knowing its order. Try adding async=\"\" or moving it into the root <head> tag.'));break}return!0;case\"noscript\":case\"template\":a&&console.error(\"Cannot render <%s> outside the main document. Try moving it into the root <head> tag.\",e)}return!1}function cy(e){return!(e.type===\"stylesheet\"&&(e.state.loading&H0)===yl)}function jb(){}function Nb(e,t,n){if($o===null)throw Error(\"Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.\");var a=$o;if(t.type===\"stylesheet\"&&(typeof n.media!=\"string\"||matchMedia(n.media).matches!==!1)&&(t.state.loading&Pt)===yl){if(t.instance===null){var l=_l(n.href),u=e.querySelector(lo(l));if(u){e=u._p,e!==null&&typeof e==\"object\"&&typeof e.then==\"function\"&&(a.count++,a=Pi.bind(a),e.then(a,a)),t.state.loading|=Pt,t.instance=u,Qe(u);return}u=e.ownerDocument||e,n=ly(n),(l=en.get(l))&&Jr(n,l),u=u.createElement(\"link\"),Qe(u);var o=u;o._p=new Promise(function(i,c){o.onload=i,o.onerror=c}),tt(u,\"link\",n),t.instance=u}a.stylesheets===null&&(a.stylesheets=new Map),a.stylesheets.set(t,e),(e=t.state.preload)&&(t.state.loading&H0)===yl&&(a.count++,t=Pi.bind(a),e.addEventListener(\"load\",t),e.addEventListener(\"error\",t))}}function Hb(){if($o===null)throw Error(\"Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.\");var e=$o;return e.stylesheets&&e.count===0&&Wr(e,e.stylesheets),0<e.count?function(t){var n=setTimeout(function(){if(e.stylesheets&&Wr(e,e.stylesheets),e.unsuspend){var a=e.unsuspend;e.unsuspend=null,a()}},6e4);return e.unsuspend=t,function(){e.unsuspend=null,clearTimeout(n)}}:null}function Pi(){if(this.count--,this.count===0){if(this.stylesheets)Wr(this,this.stylesheets);else if(this.unsuspend){var e=this.unsuspend;this.unsuspend=null,e()}}}function Wr(e,t){e.stylesheets=null,e.unsuspend!==null&&(e.count++,Zc=new Map,t.forEach(_b,e),Zc=null,Pi.call(e))}function _b(e,t){if(!(t.state.loading&Pt)){var n=Zc.get(e);if(n)var a=n.get(Rd);else{n=new Map,Zc.set(e,n);for(var l=e.querySelectorAll(\"link[data-precedence],style[data-precedence]\"),u=0;u<l.length;u++){var o=l[u];(o.nodeName===\"LINK\"||o.getAttribute(\"media\")!==\"not all\")&&(n.set(o.dataset.precedence,o),a=o)}a&&n.set(Rd,a)}l=t.instance,o=l.getAttribute(\"data-precedence\"),u=n.get(o)||a,u===a&&n.set(Rd,l),n.set(o,l),this.count++,a=Pi.bind(this),l.addEventListener(\"load\",a),l.addEventListener(\"error\",a),u?u.parentNode.insertBefore(l,u.nextSibling):(e=e.nodeType===9?e.head:e,e.insertBefore(l,e.firstChild)),t.state.loading|=Pt}}function Lb(e,t,n,a,l,u,o,i){for(this.tag=1,this.containerInfo=e,this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=pl,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=Fc(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Fc(0),this.hiddenUpdates=Fc(null),this.identifierPrefix=a,this.onUncaughtError=l,this.onCaughtError=u,this.onRecoverableError=o,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=i,this.incompleteTransitions=new Map,this.passiveEffectDuration=this.effectDuration=-0,this.memoizedUpdaters=new Set,e=this.pendingUpdatersLaneMap=[],t=0;31>t;t++)e.push(new Set);this._debugRootType=n?\"hydrateRoot()\":\"createRoot()\"}function sy(e,t,n,a,l,u,o,i,c,s,p,v){return e=new Lb(e,t,n,o,i,c,s,v),t=ex,u===!0&&(t|=st|sn),cn&&(t|=at),u=G(3,null,null,t),e.current=u,u.stateNode=e,t=Cs(),Za(t),e.pooledCache=t,Za(t),u.memoizedState={element:a,isDehydrated:n,cache:t},Ms(u),e}function ry(e){return e?(e=va,e):va}function Fr(e,t,n,a,l,u){if(it&&typeof it.onScheduleFiberRoot==\"function\")try{it.onScheduleFiberRoot(Vl,a,n)}catch(o){Rn||(Rn=!0,console.error(\"React instrumentation encountered an error: %s\",o))}z!==null&&typeof z.markRenderScheduled==\"function\"&&z.markRenderScheduled(t),l=ry(l),a.context===null?a.context=l:a.pendingContext=l,Cn&&jt!==null&&!Y0&&(Y0=!0,console.error(`Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.`,C(jt)||\"Unknown\")),a=la(t),a.payload={element:n},u=u===void 0?null:u,u!==null&&(typeof u!=\"function\"&&console.error(\"Expected the last optional `callback` argument to be a function. Instead received: %s.\",u),a.callback=u),n=ua(e,a,t),n!==null&&(je(n,e,t),Vu(n,e,t))}function fy(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var n=e.retryLane;e.retryLane=n!==0&&n<t?n:t}}function Ir(e,t){fy(e,t),(e=e.alternate)&&fy(e,t)}function dy(e){if(e.tag===13){var t=bt(e,67108864);t!==null&&je(t,e,67108864),Ir(e,67108864)}}function Bb(){return jt}function qb(){for(var e=new Map,t=1,n=0;31>n;n++){var a=uv(t);e.set(t,a),t*=2}return e}function Yb(e,t,n,a){var l=g.T;g.T=null;var u=se.p;try{se.p=kt,Pr(e,t,n,a)}finally{se.p=u,g.T=l}}function Vb(e,t,n,a){var l=g.T;g.T=null;var u=se.p;try{se.p=An,Pr(e,t,n,a)}finally{se.p=u,g.T=l}}function Pr(e,t,n,a){if(Jc){var l=ef(a);if(l===null)qr(e,t,a,Kc,n),my(e,a);else if(Gb(l,e,t,n,a))a.stopPropagation();else if(my(e,a),t&4&&-1<Ux.indexOf(e)){for(;l!==null;){var u=Na(l);if(u!==null)switch(u.tag){case 3:if(u=u.stateNode,u.current.memoizedState.isDehydrated){var o=ja(u.pendingLanes);if(o!==0){var i=u;for(i.pendingLanes|=2,i.entangledLanes|=2;o;){var c=1<<31-rt(o);i.entanglements[1]|=c,o&=~c}Sn(u),(re&(pt|hn))===Nt&&(Uc=En()+v0,to(0))}}break;case 13:i=bt(u,2),i!==null&&je(i,u,2),Ul(),Ir(u,2)}if(u=ef(a),u===null&&qr(e,t,a,Kc,n),u===l)break;l=u}l!==null&&a.stopPropagation()}else qr(e,t,a,null,n)}}function ef(e){return e=fs(e),tf(e)}function tf(e){if(Kc=null,e=vl(e),e!==null){var t=ue(e);if(t===null)e=null;else{var n=t.tag;if(n===13){if(e=Me(t),e!==null)return e;e=null}else if(n===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null)}}return Kc=e,null}function hy(e){switch(e){case\"beforetoggle\":case\"cancel\":case\"click\":case\"close\":case\"contextmenu\":case\"copy\":case\"cut\":case\"auxclick\":case\"dblclick\":case\"dragend\":case\"dragstart\":case\"drop\":case\"focusin\":case\"focusout\":case\"input\":case\"invalid\":case\"keydown\":case\"keypress\":case\"keyup\":case\"mousedown\":case\"mouseup\":case\"paste\":case\"pause\":case\"play\":case\"pointercancel\":case\"pointerdown\":case\"pointerup\":case\"ratechange\":case\"reset\":case\"resize\":case\"seeked\":case\"submit\":case\"toggle\":case\"touchcancel\":case\"touchend\":case\"touchstart\":case\"volumechange\":case\"change\":case\"selectionchange\":case\"textInput\":case\"compositionstart\":case\"compositionend\":case\"compositionupdate\":case\"beforeblur\":case\"afterblur\":case\"beforeinput\":case\"blur\":case\"fullscreenchange\":case\"focus\":case\"hashchange\":case\"popstate\":case\"select\":case\"selectstart\":return kt;case\"drag\":case\"dragenter\":case\"dragexit\":case\"dragleave\":case\"dragover\":case\"mousemove\":case\"mouseout\":case\"mouseover\":case\"pointermove\":case\"pointerout\":case\"pointerover\":case\"scroll\":case\"touchmove\":case\"wheel\":case\"mouseenter\":case\"mouseleave\":case\"pointerenter\":case\"pointerleave\":return An;case\"message\":switch(Pb()){case hf:return kt;case mf:return An;case Yl:case eS:return Xn;case pf:return cc;default:return Xn}default:return Xn}}function my(e,t){switch(e){case\"focusin\":case\"focusout\":wa=null;break;case\"dragenter\":case\"dragleave\":Oa=null;break;case\"mouseover\":case\"mouseout\":Ma=null;break;case\"pointerover\":case\"pointerout\":Ko.delete(t.pointerId);break;case\"gotpointercapture\":case\"lostpointercapture\":Wo.delete(t.pointerId)}}function oo(e,t,n,a,l,u){return e===null||e.nativeEvent!==u?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:u,targetContainers:[l]},t!==null&&(t=Na(t),t!==null&&dy(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,l!==null&&t.indexOf(l)===-1&&t.push(l),e)}function Gb(e,t,n,a,l){switch(t){case\"focusin\":return wa=oo(wa,e,t,n,a,l),!0;case\"dragenter\":return Oa=oo(Oa,e,t,n,a,l),!0;case\"mouseover\":return Ma=oo(Ma,e,t,n,a,l),!0;case\"pointerover\":var u=l.pointerId;return Ko.set(u,oo(Ko.get(u)||null,e,t,n,a,l)),!0;case\"gotpointercapture\":return u=l.pointerId,Wo.set(u,oo(Wo.get(u)||null,e,t,n,a,l)),!0}return!1}function py(e){var t=vl(e.target);if(t!==null){var n=ue(t);if(n!==null){if(t=n.tag,t===13){if(t=Me(n),t!==null){e.blockedOn=t,cv(e.priority,function(){if(n.tag===13){var a=zt(n);a=Ic(a);var l=bt(n,a);l!==null&&je(l,n,a),Ir(n,a)}});return}}else if(t===3&&n.stateNode.current.memoizedState.isDehydrated){e.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}e.blockedOn=null}function ec(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var n=ef(e.nativeEvent);if(n===null){n=e.nativeEvent;var a=new n.constructor(n.type,n),l=a;ho!==null&&console.error(\"Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.\"),ho=l,n.target.dispatchEvent(a),ho===null&&console.error(\"Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.\"),ho=null}else return t=Na(n),t!==null&&dy(t),e.blockedOn=n,!1;t.shift()}return!0}function yy(e,t,n){ec(e)&&n.delete(t)}function kb(){Ad=!1,wa!==null&&ec(wa)&&(wa=null),Oa!==null&&ec(Oa)&&(Oa=null),Ma!==null&&ec(Ma)&&(Ma=null),Ko.forEach(yy),Wo.forEach(yy)}function tc(e,t){e.blockedOn===t&&(e.blockedOn=null,Ad||(Ad=!0,Be.unstable_scheduleCallback(Be.unstable_NormalPriority,kb)))}function gy(e){Wc!==e&&(Wc=e,Be.unstable_scheduleCallback(Be.unstable_NormalPriority,function(){Wc===e&&(Wc=null);for(var t=0;t<e.length;t+=3){var n=e[t],a=e[t+1],l=e[t+2];if(typeof a!=\"function\"){if(tf(a||n)===null)continue;break}var u=Na(n);u!==null&&(e.splice(t,3),t-=3,n={pending:!0,data:l,method:n.method,action:a},Object.freeze(n),tr(u,n,a,l))}}))}function io(e){function t(c){return tc(c,e)}wa!==null&&tc(wa,e),Oa!==null&&tc(Oa,e),Ma!==null&&tc(Ma,e),Ko.forEach(t),Wo.forEach(t);for(var n=0;n<za.length;n++){var a=za[n];a.blockedOn===e&&(a.blockedOn=null)}for(;0<za.length&&(n=za[0],n.blockedOn===null);)py(n),n.blockedOn===null&&za.shift();if(n=(e.ownerDocument||e).$$reactFormReplay,n!=null)for(a=0;a<n.length;a+=3){var l=n[a],u=n[a+1],o=l[Tt]||null;if(typeof u==\"function\")o||gy(n);else if(o){var i=null;if(u&&u.hasAttribute(\"formAction\")){if(l=u,o=u[Tt]||null)i=o.formAction;else if(tf(l)!==null)continue}else i=o.action;typeof i==\"function\"?n[a+1]=i:(n.splice(a,3),a-=3),gy(n)}}}function nf(e){this._internalRoot=e}function nc(e){this._internalRoot=e}function vy(e){e[ya]&&(e._reactRootContainer?console.error(\"You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.\"):console.error(\"You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.\"))}typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<\"u\"&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart==\"function\"&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());var Be=Yx(),af=av(),Xb=Nx(),W=Object.assign,Qb=Symbol.for(\"react.element\"),da=Symbol.for(\"react.transitional.element\"),Bl=Symbol.for(\"react.portal\"),ql=Symbol.for(\"react.fragment\"),ac=Symbol.for(\"react.strict_mode\"),lf=Symbol.for(\"react.profiler\"),Zb=Symbol.for(\"react.provider\"),uf=Symbol.for(\"react.consumer\"),Tn=Symbol.for(\"react.context\"),co=Symbol.for(\"react.forward_ref\"),of=Symbol.for(\"react.suspense\"),cf=Symbol.for(\"react.suspense_list\"),lc=Symbol.for(\"react.memo\"),Ut=Symbol.for(\"react.lazy\"),sf=Symbol.for(\"react.activity\"),$b=Symbol.for(\"react.memo_cache_sentinel\"),by=Symbol.iterator,Jb=Symbol.for(\"react.client.reference\"),nt=Array.isArray,g=af.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,se=Xb.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,Kb=Object.freeze({pending:!1,data:null,method:null,action:null}),rf=[],ff=[],Gn=-1,ha=k(null),so=k(null),ma=k(null),uc=k(null),kn=Object.prototype.hasOwnProperty,df=Be.unstable_scheduleCallback,Wb=Be.unstable_cancelCallback,Fb=Be.unstable_shouldYield,Ib=Be.unstable_requestPaint,En=Be.unstable_now,Pb=Be.unstable_getCurrentPriorityLevel,hf=Be.unstable_ImmediatePriority,mf=Be.unstable_UserBlockingPriority,Yl=Be.unstable_NormalPriority,eS=Be.unstable_LowPriority,pf=Be.unstable_IdlePriority,tS=Be.log,nS=Be.unstable_setDisableYieldValue,Vl=null,it=null,z=null,Rn=!1,cn=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<\"u\",rt=Math.clz32?Math.clz32:lv,aS=Math.log,lS=Math.LN2,oc=256,ic=4194304,kt=2,An=8,Xn=32,cc=268435456,pa=Math.random().toString(36).slice(2),ct=\"__reactFiber$\"+pa,Tt=\"__reactProps$\"+pa,ya=\"__reactContainer$\"+pa,yf=\"__reactEvents$\"+pa,uS=\"__reactListeners$\"+pa,oS=\"__reactHandles$\"+pa,Sy=\"__reactResources$\"+pa,ro=\"__reactMarker$\"+pa,xy=new Set,Ia={},gf={},iS={button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0},cS=RegExp(\"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"),Ty={},Ey={},fo=0,Ry,Ay,Cy,Dy,wy,Oy,My;qd.__reactDisabledLog=!0;var vf,zy,bf=!1,Sf=new(typeof WeakMap==\"function\"?WeakMap:Map),jt=null,Cn=!1,sS=/[\\n\"\\\\]/g,Uy=!1,jy=!1,Ny=!1,Hy=!1,_y=!1,Ly=!1,By=[\"value\",\"defaultValue\"],qy=!1,Yy=/[\"'&<>\\n\\t]|^\\s|\\s$/,rS=\"address applet area article aside base basefont bgsound blockquote body br button caption center col colgroup dd details dir div dl dt embed fieldset figcaption figure footer form frame frameset h1 h2 h3 h4 h5 h6 head header hgroup hr html iframe img input isindex li link listing main marquee menu menuitem meta nav noembed noframes noscript object ol p param plaintext pre script section select source style summary table tbody td template textarea tfoot th thead title tr track ul wbr xmp\".split(\" \"),Vy=\"applet caption html table td th marquee object template foreignObject desc title\".split(\" \"),fS=Vy.concat([\"button\"]),dS=\"dd dt li option optgroup p rp rt\".split(\" \"),Gy={current:null,formTag:null,aTagInScope:null,buttonTagInScope:null,nobrTagInScope:null,pTagInButtonScope:null,listItemTagAutoclosing:null,dlItemTagAutoclosing:null,containerTagInScope:null,implicitRootScope:!1},sc={},xf={animation:\"animationDelay animationDirection animationDuration animationFillMode animationIterationCount animationName animationPlayState animationTimingFunction\".split(\" \"),background:\"backgroundAttachment backgroundClip backgroundColor backgroundImage backgroundOrigin backgroundPositionX backgroundPositionY backgroundRepeat backgroundSize\".split(\" \"),backgroundPosition:[\"backgroundPositionX\",\"backgroundPositionY\"],border:\"borderBottomColor borderBottomStyle borderBottomWidth borderImageOutset borderImageRepeat borderImageSlice borderImageSource borderImageWidth borderLeftColor borderLeftStyle borderLeftWidth borderRightColor borderRightStyle borderRightWidth borderTopColor borderTopStyle borderTopWidth\".split(\" \"),borderBlockEnd:[\"borderBlockEndColor\",\"borderBlockEndStyle\",\"borderBlockEndWidth\"],borderBlockStart:[\"borderBlockStartColor\",\"borderBlockStartStyle\",\"borderBlockStartWidth\"],borderBottom:[\"borderBottomColor\",\"borderBottomStyle\",\"borderBottomWidth\"],borderColor:[\"borderBottomColor\",\"borderLeftColor\",\"borderRightColor\",\"borderTopColor\"],borderImage:[\"borderImageOutset\",\"borderImageRepeat\",\"borderImageSlice\",\"borderImageSource\",\"borderImageWidth\"],borderInlineEnd:[\"borderInlineEndColor\",\"borderInlineEndStyle\",\"borderInlineEndWidth\"],borderInlineStart:[\"borderInlineStartColor\",\"borderInlineStartStyle\",\"borderInlineStartWidth\"],borderLeft:[\"borderLeftColor\",\"borderLeftStyle\",\"borderLeftWidth\"],borderRadius:[\"borderBottomLeftRadius\",\"borderBottomRightRadius\",\"borderTopLeftRadius\",\"borderTopRightRadius\"],borderRight:[\"borderRightColor\",\"borderRightStyle\",\"borderRightWidth\"],borderStyle:[\"borderBottomStyle\",\"borderLeftStyle\",\"borderRightStyle\",\"borderTopStyle\"],borderTop:[\"borderTopColor\",\"borderTopStyle\",\"borderTopWidth\"],borderWidth:[\"borderBottomWidth\",\"borderLeftWidth\",\"borderRightWidth\",\"borderTopWidth\"],columnRule:[\"columnRuleColor\",\"columnRuleStyle\",\"columnRuleWidth\"],columns:[\"columnCount\",\"columnWidth\"],flex:[\"flexBasis\",\"flexGrow\",\"flexShrink\"],flexFlow:[\"flexDirection\",\"flexWrap\"],font:\"fontFamily fontFeatureSettings fontKerning fontLanguageOverride fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition fontWeight lineHeight\".split(\" \"),fontVariant:\"fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition\".split(\" \"),gap:[\"columnGap\",\"rowGap\"],grid:\"gridAutoColumns gridAutoFlow gridAutoRows gridTemplateAreas gridTemplateColumns gridTemplateRows\".split(\" \"),gridArea:[\"gridColumnEnd\",\"gridColumnStart\",\"gridRowEnd\",\"gridRowStart\"],gridColumn:[\"gridColumnEnd\",\"gridColumnStart\"],gridColumnGap:[\"columnGap\"],gridGap:[\"columnGap\",\"rowGap\"],gridRow:[\"gridRowEnd\",\"gridRowStart\"],gridRowGap:[\"rowGap\"],gridTemplate:[\"gridTemplateAreas\",\"gridTemplateColumns\",\"gridTemplateRows\"],listStyle:[\"listStyleImage\",\"listStylePosition\",\"listStyleType\"],margin:[\"marginBottom\",\"marginLeft\",\"marginRight\",\"marginTop\"],marker:[\"markerEnd\",\"markerMid\",\"markerStart\"],mask:\"maskClip maskComposite maskImage maskMode maskOrigin maskPositionX maskPositionY maskRepeat maskSize\".split(\" \"),maskPosition:[\"maskPositionX\",\"maskPositionY\"],outline:[\"outlineColor\",\"outlineStyle\",\"outlineWidth\"],overflow:[\"overflowX\",\"overflowY\"],padding:[\"paddingBottom\",\"paddingLeft\",\"paddingRight\",\"paddingTop\"],placeContent:[\"alignContent\",\"justifyContent\"],placeItems:[\"alignItems\",\"justifyItems\"],placeSelf:[\"alignSelf\",\"justifySelf\"],textDecoration:[\"textDecorationColor\",\"textDecorationLine\",\"textDecorationStyle\"],textEmphasis:[\"textEmphasisColor\",\"textEmphasisStyle\"],transition:[\"transitionDelay\",\"transitionDuration\",\"transitionProperty\",\"transitionTimingFunction\"],wordWrap:[\"overflowWrap\"]},ky=/([A-Z])/g,Xy=/^ms-/,hS=/^(?:webkit|moz|o)[A-Z]/,mS=/^-ms-/,pS=/-(.)/g,Qy=/;\\s*$/,Gl={},Tf={},Zy=!1,$y=!1,Jy=new Set(\"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\" \")),rc=\"http://www.w3.org/1998/Math/MathML\",kl=\"http://www.w3.org/2000/svg\",yS=new Map([[\"acceptCharset\",\"accept-charset\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"],[\"crossOrigin\",\"crossorigin\"],[\"accentHeight\",\"accent-height\"],[\"alignmentBaseline\",\"alignment-baseline\"],[\"arabicForm\",\"arabic-form\"],[\"baselineShift\",\"baseline-shift\"],[\"capHeight\",\"cap-height\"],[\"clipPath\",\"clip-path\"],[\"clipRule\",\"clip-rule\"],[\"colorInterpolation\",\"color-interpolation\"],[\"colorInterpolationFilters\",\"color-interpolation-filters\"],[\"colorProfile\",\"color-profile\"],[\"colorRendering\",\"color-rendering\"],[\"dominantBaseline\",\"dominant-baseline\"],[\"enableBackground\",\"enable-background\"],[\"fillOpacity\",\"fill-opacity\"],[\"fillRule\",\"fill-rule\"],[\"floodColor\",\"flood-color\"],[\"floodOpacity\",\"flood-opacity\"],[\"fontFamily\",\"font-family\"],[\"fontSize\",\"font-size\"],[\"fontSizeAdjust\",\"font-size-adjust\"],[\"fontStretch\",\"font-stretch\"],[\"fontStyle\",\"font-style\"],[\"fontVariant\",\"font-variant\"],[\"fontWeight\",\"font-weight\"],[\"glyphName\",\"glyph-name\"],[\"glyphOrientationHorizontal\",\"glyph-orientation-horizontal\"],[\"glyphOrientationVertical\",\"glyph-orientation-vertical\"],[\"horizAdvX\",\"horiz-adv-x\"],[\"horizOriginX\",\"horiz-origin-x\"],[\"imageRendering\",\"image-rendering\"],[\"letterSpacing\",\"letter-spacing\"],[\"lightingColor\",\"lighting-color\"],[\"markerEnd\",\"marker-end\"],[\"markerMid\",\"marker-mid\"],[\"markerStart\",\"marker-start\"],[\"overlinePosition\",\"overline-position\"],[\"overlineThickness\",\"overline-thickness\"],[\"paintOrder\",\"paint-order\"],[\"panose-1\",\"panose-1\"],[\"pointerEvents\",\"pointer-events\"],[\"renderingIntent\",\"rendering-intent\"],[\"shapeRendering\",\"shape-rendering\"],[\"stopColor\",\"stop-color\"],[\"stopOpacity\",\"stop-opacity\"],[\"strikethroughPosition\",\"strikethrough-position\"],[\"strikethroughThickness\",\"strikethrough-thickness\"],[\"strokeDasharray\",\"stroke-dasharray\"],[\"strokeDashoffset\",\"stroke-dashoffset\"],[\"strokeLinecap\",\"stroke-linecap\"],[\"strokeLinejoin\",\"stroke-linejoin\"],[\"strokeMiterlimit\",\"stroke-miterlimit\"],[\"strokeOpacity\",\"stroke-opacity\"],[\"strokeWidth\",\"stroke-width\"],[\"textAnchor\",\"text-anchor\"],[\"textDecoration\",\"text-decoration\"],[\"textRendering\",\"text-rendering\"],[\"transformOrigin\",\"transform-origin\"],[\"underlinePosition\",\"underline-position\"],[\"underlineThickness\",\"underline-thickness\"],[\"unicodeBidi\",\"unicode-bidi\"],[\"unicodeRange\",\"unicode-range\"],[\"unitsPerEm\",\"units-per-em\"],[\"vAlphabetic\",\"v-alphabetic\"],[\"vHanging\",\"v-hanging\"],[\"vIdeographic\",\"v-ideographic\"],[\"vMathematical\",\"v-mathematical\"],[\"vectorEffect\",\"vector-effect\"],[\"vertAdvY\",\"vert-adv-y\"],[\"vertOriginX\",\"vert-origin-x\"],[\"vertOriginY\",\"vert-origin-y\"],[\"wordSpacing\",\"word-spacing\"],[\"writingMode\",\"writing-mode\"],[\"xmlnsXlink\",\"xmlns:xlink\"],[\"xHeight\",\"x-height\"]]),fc={accept:\"accept\",acceptcharset:\"acceptCharset\",\"accept-charset\":\"acceptCharset\",accesskey:\"accessKey\",action:\"action\",allowfullscreen:\"allowFullScreen\",alt:\"alt\",as:\"as\",async:\"async\",autocapitalize:\"autoCapitalize\",autocomplete:\"autoComplete\",autocorrect:\"autoCorrect\",autofocus:\"autoFocus\",autoplay:\"autoPlay\",autosave:\"autoSave\",capture:\"capture\",cellpadding:\"cellPadding\",cellspacing:\"cellSpacing\",challenge:\"challenge\",charset:\"charSet\",checked:\"checked\",children:\"children\",cite:\"cite\",class:\"className\",classid:\"classID\",classname:\"className\",cols:\"cols\",colspan:\"colSpan\",content:\"content\",contenteditable:\"contentEditable\",contextmenu:\"contextMenu\",controls:\"controls\",controlslist:\"controlsList\",coords:\"coords\",crossorigin:\"crossOrigin\",dangerouslysetinnerhtml:\"dangerouslySetInnerHTML\",data:\"data\",datetime:\"dateTime\",default:\"default\",defaultchecked:\"defaultChecked\",defaultvalue:\"defaultValue\",defer:\"defer\",dir:\"dir\",disabled:\"disabled\",disablepictureinpicture:\"disablePictureInPicture\",disableremoteplayback:\"disableRemotePlayback\",download:\"download\",draggable:\"draggable\",enctype:\"encType\",enterkeyhint:\"enterKeyHint\",fetchpriority:\"fetchPriority\",for:\"htmlFor\",form:\"form\",formmethod:\"formMethod\",formaction:\"formAction\",formenctype:\"formEncType\",formnovalidate:\"formNoValidate\",formtarget:\"formTarget\",frameborder:\"frameBorder\",headers:\"headers\",height:\"height\",hidden:\"hidden\",high:\"high\",href:\"href\",hreflang:\"hrefLang\",htmlfor:\"htmlFor\",httpequiv:\"httpEquiv\",\"http-equiv\":\"httpEquiv\",icon:\"icon\",id:\"id\",imagesizes:\"imageSizes\",imagesrcset:\"imageSrcSet\",inert:\"inert\",innerhtml:\"innerHTML\",inputmode:\"inputMode\",integrity:\"integrity\",is:\"is\",itemid:\"itemID\",itemprop:\"itemProp\",itemref:\"itemRef\",itemscope:\"itemScope\",itemtype:\"itemType\",keyparams:\"keyParams\",keytype:\"keyType\",kind:\"kind\",label:\"label\",lang:\"lang\",list:\"list\",loop:\"loop\",low:\"low\",manifest:\"manifest\",marginwidth:\"marginWidth\",marginheight:\"marginHeight\",max:\"max\",maxlength:\"maxLength\",media:\"media\",mediagroup:\"mediaGroup\",method:\"method\",min:\"min\",minlength:\"minLength\",multiple:\"multiple\",muted:\"muted\",name:\"name\",nomodule:\"noModule\",nonce:\"nonce\",novalidate:\"noValidate\",open:\"open\",optimum:\"optimum\",pattern:\"pattern\",placeholder:\"placeholder\",playsinline:\"playsInline\",poster:\"poster\",preload:\"preload\",profile:\"profile\",radiogroup:\"radioGroup\",readonly:\"readOnly\",referrerpolicy:\"referrerPolicy\",rel:\"rel\",required:\"required\",reversed:\"reversed\",role:\"role\",rows:\"rows\",rowspan:\"rowSpan\",sandbox:\"sandbox\",scope:\"scope\",scoped:\"scoped\",scrolling:\"scrolling\",seamless:\"seamless\",selected:\"selected\",shape:\"shape\",size:\"size\",sizes:\"sizes\",span:\"span\",spellcheck:\"spellCheck\",src:\"src\",srcdoc:\"srcDoc\",srclang:\"srcLang\",srcset:\"srcSet\",start:\"start\",step:\"step\",style:\"style\",summary:\"summary\",tabindex:\"tabIndex\",target:\"target\",title:\"title\",type:\"type\",usemap:\"useMap\",value:\"value\",width:\"width\",wmode:\"wmode\",wrap:\"wrap\",about:\"about\",accentheight:\"accentHeight\",\"accent-height\":\"accentHeight\",accumulate:\"accumulate\",additive:\"additive\",alignmentbaseline:\"alignmentBaseline\",\"alignment-baseline\":\"alignmentBaseline\",allowreorder:\"allowReorder\",alphabetic:\"alphabetic\",amplitude:\"amplitude\",arabicform:\"arabicForm\",\"arabic-form\":\"arabicForm\",ascent:\"ascent\",attributename:\"attributeName\",attributetype:\"attributeType\",autoreverse:\"autoReverse\",azimuth:\"azimuth\",basefrequency:\"baseFrequency\",baselineshift:\"baselineShift\",\"baseline-shift\":\"baselineShift\",baseprofile:\"baseProfile\",bbox:\"bbox\",begin:\"begin\",bias:\"bias\",by:\"by\",calcmode:\"calcMode\",capheight:\"capHeight\",\"cap-height\":\"capHeight\",clip:\"clip\",clippath:\"clipPath\",\"clip-path\":\"clipPath\",clippathunits:\"clipPathUnits\",cliprule:\"clipRule\",\"clip-rule\":\"clipRule\",color:\"color\",colorinterpolation:\"colorInterpolation\",\"color-interpolation\":\"colorInterpolation\",colorinterpolationfilters:\"colorInterpolationFilters\",\"color-interpolation-filters\":\"colorInterpolationFilters\",colorprofile:\"colorProfile\",\"color-profile\":\"colorProfile\",colorrendering:\"colorRendering\",\"color-rendering\":\"colorRendering\",contentscripttype:\"contentScriptType\",contentstyletype:\"contentStyleType\",cursor:\"cursor\",cx:\"cx\",cy:\"cy\",d:\"d\",datatype:\"datatype\",decelerate:\"decelerate\",descent:\"descent\",diffuseconstant:\"diffuseConstant\",direction:\"direction\",display:\"display\",divisor:\"divisor\",dominantbaseline:\"dominantBaseline\",\"dominant-baseline\":\"dominantBaseline\",dur:\"dur\",dx:\"dx\",dy:\"dy\",edgemode:\"edgeMode\",elevation:\"elevation\",enablebackground:\"enableBackground\",\"enable-background\":\"enableBackground\",end:\"end\",exponent:\"exponent\",externalresourcesrequired:\"externalResourcesRequired\",fill:\"fill\",fillopacity:\"fillOpacity\",\"fill-opacity\":\"fillOpacity\",fillrule:\"fillRule\",\"fill-rule\":\"fillRule\",filter:\"filter\",filterres:\"filterRes\",filterunits:\"filterUnits\",floodopacity:\"floodOpacity\",\"flood-opacity\":\"floodOpacity\",floodcolor:\"floodColor\",\"flood-color\":\"floodColor\",focusable:\"focusable\",fontfamily:\"fontFamily\",\"font-family\":\"fontFamily\",fontsize:\"fontSize\",\"font-size\":\"fontSize\",fontsizeadjust:\"fontSizeAdjust\",\"font-size-adjust\":\"fontSizeAdjust\",fontstretch:\"fontStretch\",\"font-stretch\":\"fontStretch\",fontstyle:\"fontStyle\",\"font-style\":\"fontStyle\",fontvariant:\"fontVariant\",\"font-variant\":\"fontVariant\",fontweight:\"fontWeight\",\"font-weight\":\"fontWeight\",format:\"format\",from:\"from\",fx:\"fx\",fy:\"fy\",g1:\"g1\",g2:\"g2\",glyphname:\"glyphName\",\"glyph-name\":\"glyphName\",glyphorientationhorizontal:\"glyphOrientationHorizontal\",\"glyph-orientation-horizontal\":\"glyphOrientationHorizontal\",glyphorientationvertical:\"glyphOrientationVertical\",\"glyph-orientation-vertical\":\"glyphOrientationVertical\",glyphref:\"glyphRef\",gradienttransform:\"gradientTransform\",gradientunits:\"gradientUnits\",hanging:\"hanging\",horizadvx:\"horizAdvX\",\"horiz-adv-x\":\"horizAdvX\",horizoriginx:\"horizOriginX\",\"horiz-origin-x\":\"horizOriginX\",ideographic:\"ideographic\",imagerendering:\"imageRendering\",\"image-rendering\":\"imageRendering\",in2:\"in2\",in:\"in\",inlist:\"inlist\",intercept:\"intercept\",k1:\"k1\",k2:\"k2\",k3:\"k3\",k4:\"k4\",k:\"k\",kernelmatrix:\"kernelMatrix\",kernelunitlength:\"kernelUnitLength\",kerning:\"kerning\",keypoints:\"keyPoints\",keysplines:\"keySplines\",keytimes:\"keyTimes\",lengthadjust:\"lengthAdjust\",letterspacing:\"letterSpacing\",\"letter-spacing\":\"letterSpacing\",lightingcolor:\"lightingColor\",\"lighting-color\":\"lightingColor\",limitingconeangle:\"limitingConeAngle\",local:\"local\",markerend:\"markerEnd\",\"marker-end\":\"markerEnd\",markerheight:\"markerHeight\",markermid:\"markerMid\",\"marker-mid\":\"markerMid\",markerstart:\"markerStart\",\"marker-start\":\"markerStart\",markerunits:\"markerUnits\",markerwidth:\"markerWidth\",mask:\"mask\",maskcontentunits:\"maskContentUnits\",maskunits:\"maskUnits\",mathematical:\"mathematical\",mode:\"mode\",numoctaves:\"numOctaves\",offset:\"offset\",opacity:\"opacity\",operator:\"operator\",order:\"order\",orient:\"orient\",orientation:\"orientation\",origin:\"origin\",overflow:\"overflow\",overlineposition:\"overlinePosition\",\"overline-position\":\"overlinePosition\",overlinethickness:\"overlineThickness\",\"overline-thickness\":\"overlineThickness\",paintorder:\"paintOrder\",\"paint-order\":\"paintOrder\",panose1:\"panose1\",\"panose-1\":\"panose1\",pathlength:\"pathLength\",patterncontentunits:\"patternContentUnits\",patterntransform:\"patternTransform\",patternunits:\"patternUnits\",pointerevents:\"pointerEvents\",\"pointer-events\":\"pointerEvents\",points:\"points\",pointsatx:\"pointsAtX\",pointsaty:\"pointsAtY\",pointsatz:\"pointsAtZ\",popover:\"popover\",popovertarget:\"popoverTarget\",popovertargetaction:\"popoverTargetAction\",prefix:\"prefix\",preservealpha:\"preserveAlpha\",preserveaspectratio:\"preserveAspectRatio\",primitiveunits:\"primitiveUnits\",property:\"property\",r:\"r\",radius:\"radius\",refx:\"refX\",refy:\"refY\",renderingintent:\"renderingIntent\",\"rendering-intent\":\"renderingIntent\",repeatcount:\"repeatCount\",repeatdur:\"repeatDur\",requiredextensions:\"requiredExtensions\",requiredfeatures:\"requiredFeatures\",resource:\"resource\",restart:\"restart\",result:\"result\",results:\"results\",rotate:\"rotate\",rx:\"rx\",ry:\"ry\",scale:\"scale\",security:\"security\",seed:\"seed\",shaperendering:\"shapeRendering\",\"shape-rendering\":\"shapeRendering\",slope:\"slope\",spacing:\"spacing\",specularconstant:\"specularConstant\",specularexponent:\"specularExponent\",speed:\"speed\",spreadmethod:\"spreadMethod\",startoffset:\"startOffset\",stddeviation:\"stdDeviation\",stemh:\"stemh\",stemv:\"stemv\",stitchtiles:\"stitchTiles\",stopcolor:\"stopColor\",\"stop-color\":\"stopColor\",stopopacity:\"stopOpacity\",\"stop-opacity\":\"stopOpacity\",strikethroughposition:\"strikethroughPosition\",\"strikethrough-position\":\"strikethroughPosition\",strikethroughthickness:\"strikethroughThickness\",\"strikethrough-thickness\":\"strikethroughThickness\",string:\"string\",stroke:\"stroke\",strokedasharray:\"strokeDasharray\",\"stroke-dasharray\":\"strokeDasharray\",strokedashoffset:\"strokeDashoffset\",\"stroke-dashoffset\":\"strokeDashoffset\",strokelinecap:\"strokeLinecap\",\"stroke-linecap\":\"strokeLinecap\",strokelinejoin:\"strokeLinejoin\",\"stroke-linejoin\":\"strokeLinejoin\",strokemiterlimit:\"strokeMiterlimit\",\"stroke-miterlimit\":\"strokeMiterlimit\",strokewidth:\"strokeWidth\",\"stroke-width\":\"strokeWidth\",strokeopacity:\"strokeOpacity\",\"stroke-opacity\":\"strokeOpacity\",suppresscontenteditablewarning:\"suppressContentEditableWarning\",suppresshydrationwarning:\"suppressHydrationWarning\",surfacescale:\"surfaceScale\",systemlanguage:\"systemLanguage\",tablevalues:\"tableValues\",targetx:\"targetX\",targety:\"targetY\",textanchor:\"textAnchor\",\"text-anchor\":\"textAnchor\",textdecoration:\"textDecoration\",\"text-decoration\":\"textDecoration\",textlength:\"textLength\",textrendering:\"textRendering\",\"text-rendering\":\"textRendering\",to:\"to\",transform:\"transform\",transformorigin:\"transformOrigin\",\"transform-origin\":\"transformOrigin\",typeof:\"typeof\",u1:\"u1\",u2:\"u2\",underlineposition:\"underlinePosition\",\"underline-position\":\"underlinePosition\",underlinethickness:\"underlineThickness\",\"underline-thickness\":\"underlineThickness\",unicode:\"unicode\",unicodebidi:\"unicodeBidi\",\"unicode-bidi\":\"unicodeBidi\",unicoderange:\"unicodeRange\",\"unicode-range\":\"unicodeRange\",unitsperem:\"unitsPerEm\",\"units-per-em\":\"unitsPerEm\",unselectable:\"unselectable\",valphabetic:\"vAlphabetic\",\"v-alphabetic\":\"vAlphabetic\",values:\"values\",vectoreffect:\"vectorEffect\",\"vector-effect\":\"vectorEffect\",version:\"version\",vertadvy:\"vertAdvY\",\"vert-adv-y\":\"vertAdvY\",vertoriginx:\"vertOriginX\",\"vert-origin-x\":\"vertOriginX\",vertoriginy:\"vertOriginY\",\"vert-origin-y\":\"vertOriginY\",vhanging:\"vHanging\",\"v-hanging\":\"vHanging\",videographic:\"vIdeographic\",\"v-ideographic\":\"vIdeographic\",viewbox:\"viewBox\",viewtarget:\"viewTarget\",visibility:\"visibility\",vmathematical:\"vMathematical\",\"v-mathematical\":\"vMathematical\",vocab:\"vocab\",widths:\"widths\",wordspacing:\"wordSpacing\",\"word-spacing\":\"wordSpacing\",writingmode:\"writingMode\",\"writing-mode\":\"writingMode\",x1:\"x1\",x2:\"x2\",x:\"x\",xchannelselector:\"xChannelSelector\",xheight:\"xHeight\",\"x-height\":\"xHeight\",xlinkactuate:\"xlinkActuate\",\"xlink:actuate\":\"xlinkActuate\",xlinkarcrole:\"xlinkArcrole\",\"xlink:arcrole\":\"xlinkArcrole\",xlinkhref:\"xlinkHref\",\"xlink:href\":\"xlinkHref\",xlinkrole:\"xlinkRole\",\"xlink:role\":\"xlinkRole\",xlinkshow:\"xlinkShow\",\"xlink:show\":\"xlinkShow\",xlinktitle:\"xlinkTitle\",\"xlink:title\":\"xlinkTitle\",xlinktype:\"xlinkType\",\"xlink:type\":\"xlinkType\",xmlbase:\"xmlBase\",\"xml:base\":\"xmlBase\",xmllang:\"xmlLang\",\"xml:lang\":\"xmlLang\",xmlns:\"xmlns\",\"xml:space\":\"xmlSpace\",xmlnsxlink:\"xmlnsXlink\",\"xmlns:xlink\":\"xmlnsXlink\",xmlspace:\"xmlSpace\",y1:\"y1\",y2:\"y2\",y:\"y\",ychannelselector:\"yChannelSelector\",z:\"z\",zoomandpan:\"zoomAndPan\"},Ky={\"aria-current\":0,\"aria-description\":0,\"aria-details\":0,\"aria-disabled\":0,\"aria-hidden\":0,\"aria-invalid\":0,\"aria-keyshortcuts\":0,\"aria-label\":0,\"aria-roledescription\":0,\"aria-autocomplete\":0,\"aria-checked\":0,\"aria-expanded\":0,\"aria-haspopup\":0,\"aria-level\":0,\"aria-modal\":0,\"aria-multiline\":0,\"aria-multiselectable\":0,\"aria-orientation\":0,\"aria-placeholder\":0,\"aria-pressed\":0,\"aria-readonly\":0,\"aria-required\":0,\"aria-selected\":0,\"aria-sort\":0,\"aria-valuemax\":0,\"aria-valuemin\":0,\"aria-valuenow\":0,\"aria-valuetext\":0,\"aria-atomic\":0,\"aria-busy\":0,\"aria-live\":0,\"aria-relevant\":0,\"aria-dropeffect\":0,\"aria-grabbed\":0,\"aria-activedescendant\":0,\"aria-colcount\":0,\"aria-colindex\":0,\"aria-colspan\":0,\"aria-controls\":0,\"aria-describedby\":0,\"aria-errormessage\":0,\"aria-flowto\":0,\"aria-labelledby\":0,\"aria-owns\":0,\"aria-posinset\":0,\"aria-rowcount\":0,\"aria-rowindex\":0,\"aria-rowspan\":0,\"aria-setsize\":0},Xl={},gS=RegExp(\"^(aria)-[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"),vS=RegExp(\"^(aria)[A-Z][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"),Wy=!1,ft={},Fy=/^on./,bS=/^on[^A-Z]/,SS=RegExp(\"^(aria)-[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"),xS=RegExp(\"^(aria)[A-Z][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"),TS=/^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i,ho=null,Ql=null,Zl=null,Ef=!1,Dn=!(typeof window>\"u\"||typeof window.document>\"u\"||typeof window.document.createElement>\"u\"),Rf=!1;if(Dn)try{var mo={};Object.defineProperty(mo,\"passive\",{get:function(){Rf=!0}}),window.addEventListener(\"test\",mo,mo),window.removeEventListener(\"test\",mo,mo)}catch{Rf=!1}var ga=null,Af=null,dc=null,Pa={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},hc=vt(Pa),po=W({},Pa,{view:0,detail:0}),ES=vt(po),Cf,Df,yo,mc=W({},po,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:ds,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return\"movementX\"in e?e.movementX:(e!==yo&&(yo&&e.type===\"mousemove\"?(Cf=e.screenX-yo.screenX,Df=e.screenY-yo.screenY):Df=Cf=0,yo=e),Cf)},movementY:function(e){return\"movementY\"in e?e.movementY:Df}}),Iy=vt(mc),RS=W({},mc,{dataTransfer:0}),AS=vt(RS),CS=W({},po,{relatedTarget:0}),wf=vt(CS),DS=W({},Pa,{animationName:0,elapsedTime:0,pseudoElement:0}),wS=vt(DS),OS=W({},Pa,{clipboardData:function(e){return\"clipboardData\"in e?e.clipboardData:window.clipboardData}}),MS=vt(OS),zS=W({},Pa,{data:0}),Py=vt(zS),US=Py,jS={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},NS={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},HS={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"},_S=W({},po,{key:function(e){if(e.key){var t=jS[e.key]||e.key;if(t!==\"Unidentified\")return t}return e.type===\"keypress\"?(e=ci(e),e===13?\"Enter\":String.fromCharCode(e)):e.type===\"keydown\"||e.type===\"keyup\"?NS[e.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:ds,charCode:function(e){return e.type===\"keypress\"?ci(e):0},keyCode:function(e){return e.type===\"keydown\"||e.type===\"keyup\"?e.keyCode:0},which:function(e){return e.type===\"keypress\"?ci(e):e.type===\"keydown\"||e.type===\"keyup\"?e.keyCode:0}}),LS=vt(_S),BS=W({},mc,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),eg=vt(BS),qS=W({},po,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:ds}),YS=vt(qS),VS=W({},Pa,{propertyName:0,elapsedTime:0,pseudoElement:0}),GS=vt(VS),kS=W({},mc,{deltaX:function(e){return\"deltaX\"in e?e.deltaX:\"wheelDeltaX\"in e?-e.wheelDeltaX:0},deltaY:function(e){return\"deltaY\"in e?e.deltaY:\"wheelDeltaY\"in e?-e.wheelDeltaY:\"wheelDelta\"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),XS=vt(kS),QS=W({},Pa,{newState:0,oldState:0}),ZS=vt(QS),$S=[9,13,27,32],tg=229,Of=Dn&&\"CompositionEvent\"in window,go=null;Dn&&\"documentMode\"in document&&(go=document.documentMode);var JS=Dn&&\"TextEvent\"in window&&!go,ng=Dn&&(!Of||go&&8<go&&11>=go),ag=32,lg=String.fromCharCode(ag),ug=!1,$l=!1,KS={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0},vo=null,bo=null,og=!1;Dn&&(og=Av(\"input\")&&(!document.documentMode||9<document.documentMode));var dt=typeof Object.is==\"function\"?Object.is:zv,WS=Dn&&\"documentMode\"in document&&11>=document.documentMode,Jl=null,Mf=null,So=null,zf=!1,Kl={animationend:La(\"Animation\",\"AnimationEnd\"),animationiteration:La(\"Animation\",\"AnimationIteration\"),animationstart:La(\"Animation\",\"AnimationStart\"),transitionrun:La(\"Transition\",\"TransitionRun\"),transitionstart:La(\"Transition\",\"TransitionStart\"),transitioncancel:La(\"Transition\",\"TransitionCancel\"),transitionend:La(\"Transition\",\"TransitionEnd\")},Uf={},ig={};Dn&&(ig=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Kl.animationend.animation,delete Kl.animationiteration.animation,delete Kl.animationstart.animation),\"TransitionEvent\"in window||delete Kl.transitionend.transition);var cg=Ba(\"animationend\"),sg=Ba(\"animationiteration\"),rg=Ba(\"animationstart\"),FS=Ba(\"transitionrun\"),IS=Ba(\"transitionstart\"),PS=Ba(\"transitioncancel\"),fg=Ba(\"transitionend\"),dg=new Map,jf=\"abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");jf.push(\"scrollEnd\");var Nf=new WeakMap,pc=1,Qn=2,Xt=[],Wl=0,Hf=0,va={};Object.freeze(va);var Qt=null,Fl=null,Te=0,ex=1,at=2,st=8,sn=16,hg=64,mg=!1;try{var pg=Object.preventExtensions({})}catch{mg=!0}var Il=[],Pl=0,yc=null,gc=0,Zt=[],$t=0,el=null,Zn=1,$n=\"\",ht=null,we=null,ie=!1,Jn=!1,Jt=null,tl=null,wn=!1,_f=Error(\"Hydration Mismatch Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React.\"),yg=0;if(typeof performance==\"object\"&&typeof performance.now==\"function\")var tx=performance,gg=function(){return tx.now()};else{var nx=Date;gg=function(){return nx.now()}}var Lf=k(null),Bf=k(null),vg={},vc=null,eu=null,tu=!1,ax=typeof AbortController<\"u\"?AbortController:function(){var e=[],t=this.signal={aborted:!1,addEventListener:function(n,a){e.push(a)}};this.abort=function(){t.aborted=!0,e.forEach(function(n){return n()})}},lx=Be.unstable_scheduleCallback,ux=Be.unstable_NormalPriority,Ge={$$typeof:Tn,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0,_currentRenderer:null,_currentRenderer2:null},nu=Be.unstable_now,bg=-0,bc=-0,Et=-1.1,nl=-0,Sc=!1,xc=!1,xo=null,qf=0,al=0,au=null,Sg=g.S;g.S=function(e,t){typeof t==\"object\"&&t!==null&&typeof t.then==\"function\"&&jv(e,t),Sg!==null&&Sg(e,t)};var ll=k(null),rn={recordUnsafeLifecycleWarnings:function(){},flushPendingUnsafeLifecycleWarnings:function(){},recordLegacyContextWarning:function(){},flushLegacyContextWarning:function(){},discardPendingWarnings:function(){}},To=[],Eo=[],Ro=[],Ao=[],Co=[],Do=[],ul=new Set;rn.recordUnsafeLifecycleWarnings=function(e,t){ul.has(e.type)||(typeof t.componentWillMount==\"function\"&&t.componentWillMount.__suppressDeprecationWarning!==!0&&To.push(e),e.mode&st&&typeof t.UNSAFE_componentWillMount==\"function\"&&Eo.push(e),typeof t.componentWillReceiveProps==\"function\"&&t.componentWillReceiveProps.__suppressDeprecationWarning!==!0&&Ro.push(e),e.mode&st&&typeof t.UNSAFE_componentWillReceiveProps==\"function\"&&Ao.push(e),typeof t.componentWillUpdate==\"function\"&&t.componentWillUpdate.__suppressDeprecationWarning!==!0&&Co.push(e),e.mode&st&&typeof t.UNSAFE_componentWillUpdate==\"function\"&&Do.push(e))},rn.flushPendingUnsafeLifecycleWarnings=function(){var e=new Set;0<To.length&&(To.forEach(function(i){e.add(C(i)||\"Component\"),ul.add(i.type)}),To=[]);var t=new Set;0<Eo.length&&(Eo.forEach(function(i){t.add(C(i)||\"Component\"),ul.add(i.type)}),Eo=[]);var n=new Set;0<Ro.length&&(Ro.forEach(function(i){n.add(C(i)||\"Component\"),ul.add(i.type)}),Ro=[]);var a=new Set;0<Ao.length&&(Ao.forEach(function(i){a.add(C(i)||\"Component\"),ul.add(i.type)}),Ao=[]);var l=new Set;0<Co.length&&(Co.forEach(function(i){l.add(C(i)||\"Component\"),ul.add(i.type)}),Co=[]);var u=new Set;if(0<Do.length&&(Do.forEach(function(i){u.add(C(i)||\"Component\"),ul.add(i.type)}),Do=[]),0<t.size){var o=_e(t);console.error(`Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s`,o)}0<a.size&&(o=_e(a),console.error(`Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n\nPlease update the following components: %s`,o)),0<u.size&&(o=_e(u),console.error(`Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s`,o)),0<e.size&&(o=_e(e),console.warn(`componentWillMount has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \\`npx react-codemod rename-unsafe-lifecycles\\` in your project source folder.\n\nPlease update the following components: %s`,o)),0<n.size&&(o=_e(n),console.warn(`componentWillReceiveProps has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \\`npx react-codemod rename-unsafe-lifecycles\\` in your project source folder.\n\nPlease update the following components: %s`,o)),0<l.size&&(o=_e(l),console.warn(`componentWillUpdate has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \\`npx react-codemod rename-unsafe-lifecycles\\` in your project source folder.\n\nPlease update the following components: %s`,o))};var Tc=new Map,xg=new Set;rn.recordLegacyContextWarning=function(e,t){for(var n=null,a=e;a!==null;)a.mode&st&&(n=a),a=a.return;n===null?console.error(\"Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.\"):!xg.has(e.type)&&(a=Tc.get(n),e.type.contextTypes!=null||e.type.childContextTypes!=null||t!==null&&typeof t.getChildContext==\"function\")&&(a===void 0&&(a=[],Tc.set(n,a)),a.push(e))},rn.flushLegacyContextWarning=function(){Tc.forEach(function(e){if(e.length!==0){var t=e[0],n=new Set;e.forEach(function(l){n.add(C(l)||\"Component\"),xg.add(l.type)});var a=_e(n);H(t,function(){console.error(`Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://react.dev/link/legacy-context`,a)})}})},rn.discardPendingWarnings=function(){To=[],Eo=[],Ro=[],Ao=[],Co=[],Do=[],Tc=new Map};var wo=Error(\"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`.\"),Tg=Error(\"Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React.\"),Ec=Error(\"Suspense Exception: This is not a real error! It's an implementation detail of `useActionState` to interrupt the current render. You must either rethrow it immediately, or move the `useActionState` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary.\"),Yf={then:function(){console.error('Internal React error: A listener was unexpectedly attached to a \"noop\" thenable. This is a bug in React. Please file an issue.')}},Oo=null,Rc=!1,Kt=0,Wt=1,mt=2,lt=4,ke=8,Eg=0,Rg=1,Ag=2,Vf=3,ba=!1,Cg=!1,Gf=null,kf=!1,lu=k(null),Ac=k(0),uu,Dg=new Set,wg=new Set,Xf=new Set,Og=new Set,Sa=0,V=null,ve=null,qe=null,Cc=!1,ou=!1,ol=!1,Dc=0,Mo=0,Kn=null,ox=0,ix=25,y=null,Ft=null,Wn=-1,zo=!1,wc={readContext:Ae,use:oa,useCallback:Ue,useContext:Ue,useEffect:Ue,useImperativeHandle:Ue,useLayoutEffect:Ue,useInsertionEffect:Ue,useMemo:Ue,useReducer:Ue,useRef:Ue,useState:Ue,useDebugValue:Ue,useDeferredValue:Ue,useTransition:Ue,useSyncExternalStore:Ue,useId:Ue,useHostTransitionStatus:Ue,useFormState:Ue,useActionState:Ue,useOptimistic:Ue,useMemoCache:Ue,useCacheRefresh:Ue},Qf=null,Mg=null,Zf=null,zg=null,On=null,fn=null,Oc=null;Qf={readContext:function(e){return Ae(e)},use:oa,useCallback:function(e,t){return y=\"useCallback\",ee(),Al(t),Fs(e,t)},useContext:function(e){return y=\"useContext\",ee(),Ae(e)},useEffect:function(e,t){return y=\"useEffect\",ee(),Al(t),wi(e,t)},useImperativeHandle:function(e,t,n){return y=\"useImperativeHandle\",ee(),Al(n),Ws(e,t,n)},useInsertionEffect:function(e,t){y=\"useInsertionEffect\",ee(),Al(t),Ja(4,mt,e,t)},useLayoutEffect:function(e,t){return y=\"useLayoutEffect\",ee(),Al(t),Ks(e,t)},useMemo:function(e,t){y=\"useMemo\",ee(),Al(t);var n=g.H;g.H=On;try{return Is(e,t)}finally{g.H=n}},useReducer:function(e,t,n){y=\"useReducer\",ee();var a=g.H;g.H=On;try{return Vs(e,t,n)}finally{g.H=a}},useRef:function(e){return y=\"useRef\",ee(),Js(e)},useState:function(e){y=\"useState\",ee();var t=g.H;g.H=On;try{return Qs(e)}finally{g.H=t}},useDebugValue:function(){y=\"useDebugValue\",ee()},useDeferredValue:function(e,t){return y=\"useDeferredValue\",ee(),Ps(e,t)},useTransition:function(){return y=\"useTransition\",ee(),nr()},useSyncExternalStore:function(e,t,n){return y=\"useSyncExternalStore\",ee(),ks(e,t,n)},useId:function(){return y=\"useId\",ee(),ar()},useFormState:function(e,t){return y=\"useFormState\",ee(),Ei(),Dl(e,t)},useActionState:function(e,t){return y=\"useActionState\",ee(),Dl(e,t)},useOptimistic:function(e){return y=\"useOptimistic\",ee(),Zs(e)},useHostTransitionStatus:Ka,useMemoCache:$a,useCacheRefresh:function(){return y=\"useCacheRefresh\",ee(),lr()}},Mg={readContext:function(e){return Ae(e)},use:oa,useCallback:function(e,t){return y=\"useCallback\",R(),Fs(e,t)},useContext:function(e){return y=\"useContext\",R(),Ae(e)},useEffect:function(e,t){return y=\"useEffect\",R(),wi(e,t)},useImperativeHandle:function(e,t,n){return y=\"useImperativeHandle\",R(),Ws(e,t,n)},useInsertionEffect:function(e,t){y=\"useInsertionEffect\",R(),Ja(4,mt,e,t)},useLayoutEffect:function(e,t){return y=\"useLayoutEffect\",R(),Ks(e,t)},useMemo:function(e,t){y=\"useMemo\",R();var n=g.H;g.H=On;try{return Is(e,t)}finally{g.H=n}},useReducer:function(e,t,n){y=\"useReducer\",R();var a=g.H;g.H=On;try{return Vs(e,t,n)}finally{g.H=a}},useRef:function(e){return y=\"useRef\",R(),Js(e)},useState:function(e){y=\"useState\",R();var t=g.H;g.H=On;try{return Qs(e)}finally{g.H=t}},useDebugValue:function(){y=\"useDebugValue\",R()},useDeferredValue:function(e,t){return y=\"useDeferredValue\",R(),Ps(e,t)},useTransition:function(){return y=\"useTransition\",R(),nr()},useSyncExternalStore:function(e,t,n){return y=\"useSyncExternalStore\",R(),ks(e,t,n)},useId:function(){return y=\"useId\",R(),ar()},useActionState:function(e,t){return y=\"useActionState\",R(),Dl(e,t)},useFormState:function(e,t){return y=\"useFormState\",R(),Ei(),Dl(e,t)},useOptimistic:function(e){return y=\"useOptimistic\",R(),Zs(e)},useHostTransitionStatus:Ka,useMemoCache:$a,useCacheRefresh:function(){return y=\"useCacheRefresh\",R(),lr()}},Zf={readContext:function(e){return Ae(e)},use:oa,useCallback:function(e,t){return y=\"useCallback\",R(),Mi(e,t)},useContext:function(e){return y=\"useContext\",R(),Ae(e)},useEffect:function(e,t){y=\"useEffect\",R(),xt(2048,ke,e,t)},useImperativeHandle:function(e,t,n){return y=\"useImperativeHandle\",R(),Oi(e,t,n)},useInsertionEffect:function(e,t){return y=\"useInsertionEffect\",R(),xt(4,mt,e,t)},useLayoutEffect:function(e,t){return y=\"useLayoutEffect\",R(),xt(4,lt,e,t)},useMemo:function(e,t){y=\"useMemo\",R();var n=g.H;g.H=fn;try{return zi(e,t)}finally{g.H=n}},useReducer:function(e,t,n){y=\"useReducer\",R();var a=g.H;g.H=fn;try{return Cl(e,t,n)}finally{g.H=a}},useRef:function(){return y=\"useRef\",R(),he().memoizedState},useState:function(){y=\"useState\",R();var e=g.H;g.H=fn;try{return Cl(on)}finally{g.H=e}},useDebugValue:function(){y=\"useDebugValue\",R()},useDeferredValue:function(e,t){return y=\"useDeferredValue\",R(),cm(e,t)},useTransition:function(){return y=\"useTransition\",R(),mm()},useSyncExternalStore:function(e,t,n){return y=\"useSyncExternalStore\",R(),Ri(e,t,n)},useId:function(){return y=\"useId\",R(),he().memoizedState},useFormState:function(e){return y=\"useFormState\",R(),Ei(),Ai(e)},useActionState:function(e){return y=\"useActionState\",R(),Ai(e)},useOptimistic:function(e,t){return y=\"useOptimistic\",R(),Ih(e,t)},useHostTransitionStatus:Ka,useMemoCache:$a,useCacheRefresh:function(){return y=\"useCacheRefresh\",R(),he().memoizedState}},zg={readContext:function(e){return Ae(e)},use:oa,useCallback:function(e,t){return y=\"useCallback\",R(),Mi(e,t)},useContext:function(e){return y=\"useContext\",R(),Ae(e)},useEffect:function(e,t){y=\"useEffect\",R(),xt(2048,ke,e,t)},useImperativeHandle:function(e,t,n){return y=\"useImperativeHandle\",R(),Oi(e,t,n)},useInsertionEffect:function(e,t){return y=\"useInsertionEffect\",R(),xt(4,mt,e,t)},useLayoutEffect:function(e,t){return y=\"useLayoutEffect\",R(),xt(4,lt,e,t)},useMemo:function(e,t){y=\"useMemo\",R();var n=g.H;g.H=Oc;try{return zi(e,t)}finally{g.H=n}},useReducer:function(e,t,n){y=\"useReducer\",R();var a=g.H;g.H=Oc;try{return Qu(e,t,n)}finally{g.H=a}},useRef:function(){return y=\"useRef\",R(),he().memoizedState},useState:function(){y=\"useState\",R();var e=g.H;g.H=Oc;try{return Qu(on)}finally{g.H=e}},useDebugValue:function(){y=\"useDebugValue\",R()},useDeferredValue:function(e,t){return y=\"useDeferredValue\",R(),sm(e,t)},useTransition:function(){return y=\"useTransition\",R(),pm()},useSyncExternalStore:function(e,t,n){return y=\"useSyncExternalStore\",R(),Ri(e,t,n)},useId:function(){return y=\"useId\",R(),he().memoizedState},useFormState:function(e){return y=\"useFormState\",R(),Ei(),Ci(e)},useActionState:function(e){return y=\"useActionState\",R(),Ci(e)},useOptimistic:function(e,t){return y=\"useOptimistic\",R(),em(e,t)},useHostTransitionStatus:Ka,useMemoCache:$a,useCacheRefresh:function(){return y=\"useCacheRefresh\",R(),he().memoizedState}},On={readContext:function(e){return F(),Ae(e)},use:function(e){return O(),oa(e)},useCallback:function(e,t){return y=\"useCallback\",O(),ee(),Fs(e,t)},useContext:function(e){return y=\"useContext\",O(),ee(),Ae(e)},useEffect:function(e,t){return y=\"useEffect\",O(),ee(),wi(e,t)},useImperativeHandle:function(e,t,n){return y=\"useImperativeHandle\",O(),ee(),Ws(e,t,n)},useInsertionEffect:function(e,t){y=\"useInsertionEffect\",O(),ee(),Ja(4,mt,e,t)},useLayoutEffect:function(e,t){return y=\"useLayoutEffect\",O(),ee(),Ks(e,t)},useMemo:function(e,t){y=\"useMemo\",O(),ee();var n=g.H;g.H=On;try{return Is(e,t)}finally{g.H=n}},useReducer:function(e,t,n){y=\"useReducer\",O(),ee();var a=g.H;g.H=On;try{return Vs(e,t,n)}finally{g.H=a}},useRef:function(e){return y=\"useRef\",O(),ee(),Js(e)},useState:function(e){y=\"useState\",O(),ee();var t=g.H;g.H=On;try{return Qs(e)}finally{g.H=t}},useDebugValue:function(){y=\"useDebugValue\",O(),ee()},useDeferredValue:function(e,t){return y=\"useDeferredValue\",O(),ee(),Ps(e,t)},useTransition:function(){return y=\"useTransition\",O(),ee(),nr()},useSyncExternalStore:function(e,t,n){return y=\"useSyncExternalStore\",O(),ee(),ks(e,t,n)},useId:function(){return y=\"useId\",O(),ee(),ar()},useFormState:function(e,t){return y=\"useFormState\",O(),ee(),Dl(e,t)},useActionState:function(e,t){return y=\"useActionState\",O(),ee(),Dl(e,t)},useOptimistic:function(e){return y=\"useOptimistic\",O(),ee(),Zs(e)},useMemoCache:function(e){return O(),$a(e)},useHostTransitionStatus:Ka,useCacheRefresh:function(){return y=\"useCacheRefresh\",ee(),lr()}},fn={readContext:function(e){return F(),Ae(e)},use:function(e){return O(),oa(e)},useCallback:function(e,t){return y=\"useCallback\",O(),R(),Mi(e,t)},useContext:function(e){return y=\"useContext\",O(),R(),Ae(e)},useEffect:function(e,t){y=\"useEffect\",O(),R(),xt(2048,ke,e,t)},useImperativeHandle:function(e,t,n){return y=\"useImperativeHandle\",O(),R(),Oi(e,t,n)},useInsertionEffect:function(e,t){return y=\"useInsertionEffect\",O(),R(),xt(4,mt,e,t)},useLayoutEffect:function(e,t){return y=\"useLayoutEffect\",O(),R(),xt(4,lt,e,t)},useMemo:function(e,t){y=\"useMemo\",O(),R();var n=g.H;g.H=fn;try{return zi(e,t)}finally{g.H=n}},useReducer:function(e,t,n){y=\"useReducer\",O(),R();var a=g.H;g.H=fn;try{return Cl(e,t,n)}finally{g.H=a}},useRef:function(){return y=\"useRef\",O(),R(),he().memoizedState},useState:function(){y=\"useState\",O(),R();var e=g.H;g.H=fn;try{return Cl(on)}finally{g.H=e}},useDebugValue:function(){y=\"useDebugValue\",O(),R()},useDeferredValue:function(e,t){return y=\"useDeferredValue\",O(),R(),cm(e,t)},useTransition:function(){return y=\"useTransition\",O(),R(),mm()},useSyncExternalStore:function(e,t,n){return y=\"useSyncExternalStore\",O(),R(),Ri(e,t,n)},useId:function(){return y=\"useId\",O(),R(),he().memoizedState},useFormState:function(e){return y=\"useFormState\",O(),R(),Ai(e)},useActionState:function(e){return y=\"useActionState\",O(),R(),Ai(e)},useOptimistic:function(e,t){return y=\"useOptimistic\",O(),R(),Ih(e,t)},useMemoCache:function(e){return O(),$a(e)},useHostTransitionStatus:Ka,useCacheRefresh:function(){return y=\"useCacheRefresh\",R(),he().memoizedState}},Oc={readContext:function(e){return F(),Ae(e)},use:function(e){return O(),oa(e)},useCallback:function(e,t){return y=\"useCallback\",O(),R(),Mi(e,t)},useContext:function(e){return y=\"useContext\",O(),R(),Ae(e)},useEffect:function(e,t){y=\"useEffect\",O(),R(),xt(2048,ke,e,t)},useImperativeHandle:function(e,t,n){return y=\"useImperativeHandle\",O(),R(),Oi(e,t,n)},useInsertionEffect:function(e,t){return y=\"useInsertionEffect\",O(),R(),xt(4,mt,e,t)},useLayoutEffect:function(e,t){return y=\"useLayoutEffect\",O(),R(),xt(4,lt,e,t)},useMemo:function(e,t){y=\"useMemo\",O(),R();var n=g.H;g.H=fn;try{return zi(e,t)}finally{g.H=n}},useReducer:function(e,t,n){y=\"useReducer\",O(),R();var a=g.H;g.H=fn;try{return Qu(e,t,n)}finally{g.H=a}},useRef:function(){return y=\"useRef\",O(),R(),he().memoizedState},useState:function(){y=\"useState\",O(),R();var e=g.H;g.H=fn;try{return Qu(on)}finally{g.H=e}},useDebugValue:function(){y=\"useDebugValue\",O(),R()},useDeferredValue:function(e,t){return y=\"useDeferredValue\",O(),R(),sm(e,t)},useTransition:function(){return y=\"useTransition\",O(),R(),pm()},useSyncExternalStore:function(e,t,n){return y=\"useSyncExternalStore\",O(),R(),Ri(e,t,n)},useId:function(){return y=\"useId\",O(),R(),he().memoizedState},useFormState:function(e){return y=\"useFormState\",O(),R(),Ci(e)},useActionState:function(e){return y=\"useActionState\",O(),R(),Ci(e)},useOptimistic:function(e,t){return y=\"useOptimistic\",O(),R(),em(e,t)},useMemoCache:function(e){return O(),$a(e)},useHostTransitionStatus:Ka,useCacheRefresh:function(){return y=\"useCacheRefresh\",R(),he().memoizedState}};var Ug={react_stack_bottom_frame:function(e,t,n){var a=Cn;Cn=!0;try{return e(t,n)}finally{Cn=a}}},$f=Ug.react_stack_bottom_frame.bind(Ug),jg={react_stack_bottom_frame:function(e){var t=Cn;Cn=!0;try{return e.render()}finally{Cn=t}}},Ng=jg.react_stack_bottom_frame.bind(jg),Hg={react_stack_bottom_frame:function(e,t){try{t.componentDidMount()}catch(n){ye(e,e.return,n)}}},Jf=Hg.react_stack_bottom_frame.bind(Hg),_g={react_stack_bottom_frame:function(e,t,n,a,l){try{t.componentDidUpdate(n,a,l)}catch(u){ye(e,e.return,u)}}},Lg=_g.react_stack_bottom_frame.bind(_g),Bg={react_stack_bottom_frame:function(e,t){var n=t.stack;e.componentDidCatch(t.value,{componentStack:n!==null?n:\"\"})}},cx=Bg.react_stack_bottom_frame.bind(Bg),qg={react_stack_bottom_frame:function(e,t,n){try{n.componentWillUnmount()}catch(a){ye(e,t,a)}}},Yg=qg.react_stack_bottom_frame.bind(qg),Vg={react_stack_bottom_frame:function(e){e.resourceKind!=null&&console.error(\"Expected only SimpleEffects when enableUseEffectCRUDOverload is disabled, got %s\",e.resourceKind);var t=e.create;return e=e.inst,t=t(),e.destroy=t}},sx=Vg.react_stack_bottom_frame.bind(Vg),Gg={react_stack_bottom_frame:function(e,t,n){try{n()}catch(a){ye(e,t,a)}}},rx=Gg.react_stack_bottom_frame.bind(Gg),kg={react_stack_bottom_frame:function(e){var t=e._init;return t(e._payload)}},xa=kg.react_stack_bottom_frame.bind(kg),iu=null,Uo=0,K=null,Kf,Xg=Kf=!1,Qg={},Zg={},$g={};De=function(e,t,n){if(n!==null&&typeof n==\"object\"&&n._store&&(!n._store.validated&&n.key==null||n._store.validated===2)){if(typeof n._store!=\"object\")throw Error(\"React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.\");n._store.validated=1;var a=C(e),l=a||\"null\";if(!Qg[l]){Qg[l]=!0,n=n._owner,e=e._debugOwner;var u=\"\";e&&typeof e.tag==\"number\"&&(l=C(e))&&(u=`\n\nCheck the render method of \\``+l+\"`.\"),u||a&&(u=`\n\nCheck the top-level render call using <`+a+\">.\");var o=\"\";n!=null&&e!==n&&(a=null,typeof n.tag==\"number\"?a=C(n):typeof n.name==\"string\"&&(a=n.name),a&&(o=\" It was passed a child from \"+a+\".\")),H(t,function(){console.error('Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information.',u,o)})}}};var cu=bm(!0),Jg=bm(!1),It=k(null),Mn=null,su=1,jo=2,Xe=k(0),Kg={},Wg=new Set,Fg=new Set,Ig=new Set,Pg=new Set,e0=new Set,t0=new Set,n0=new Set,a0=new Set,l0=new Set,u0=new Set;Object.freeze(Kg);var Wf={enqueueSetState:function(e,t,n){e=e._reactInternals;var a=zt(e),l=la(a);l.payload=t,n!=null&&(or(n),l.callback=n),t=ua(e,l,a),t!==null&&(je(t,e,a),Vu(t,e,a)),Ru(e,a)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=zt(e),l=la(a);l.tag=Rg,l.payload=t,n!=null&&(or(n),l.callback=n),t=ua(e,l,a),t!==null&&(je(t,e,a),Vu(t,e,a)),Ru(e,a)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=zt(e),a=la(n);a.tag=Ag,t!=null&&(or(t),a.callback=t),t=ua(e,a,n),t!==null&&(je(t,e,n),Vu(t,e,n)),z!==null&&typeof z.markForceUpdateScheduled==\"function\"&&z.markForceUpdateScheduled(e,n)}},Ff=typeof reportError==\"function\"?reportError:function(e){if(typeof window==\"object\"&&typeof window.ErrorEvent==\"function\"){var t=new window.ErrorEvent(\"error\",{bubbles:!0,cancelable:!0,message:typeof e==\"object\"&&e!==null&&typeof e.message==\"string\"?String(e.message):String(e),error:e});if(!window.dispatchEvent(t))return}else if(typeof process==\"object\"&&typeof process.emit==\"function\"){process.emit(\"uncaughtException\",e);return}console.error(e)},ru=null,If=null,o0=Error(\"This is not a real error. It's an implementation detail of React's selective hydration feature. If this leaks into userspace, it's a bug in React. Please file an issue.\"),$e=!1,i0={},c0={},s0={},r0={},fu=!1,f0={},Pf={},ed={dehydrated:null,treeContext:null,retryLane:0,hydrationErrors:null},d0=!1,h0=null;h0=new Set;var Fn=!1,Ne=!1,td=!1,m0=typeof WeakSet==\"function\"?WeakSet:Set,Je=null,du=null,hu=null,Ye=null,Rt=!1,dn=null,No=8192,fx={getCacheForType:function(e){var t=Ae(Ge),n=t.data.get(e);return n===void 0&&(n=e(),t.data.set(e,n)),n},getOwner:function(){return jt}};if(typeof Symbol==\"function\"&&Symbol.for){var Ho=Symbol.for;Ho(\"selector.component\"),Ho(\"selector.has_pseudo_class\"),Ho(\"selector.role\"),Ho(\"selector.test_id\"),Ho(\"selector.text\")}var dx=[],hx=typeof WeakMap==\"function\"?WeakMap:Map,Nt=0,pt=2,hn=4,In=0,_o=1,mu=2,nd=3,il=4,Mc=6,p0=5,re=Nt,Se=null,I=null,te=0,At=0,Lo=1,cl=2,Bo=3,y0=4,ad=5,pu=6,qo=7,ld=8,sl=9,fe=At,Ht=null,Ta=!1,yu=!1,ud=!1,zn=0,Oe=In,Ea=0,Ra=0,od=0,_t=0,rl=0,Yo=null,yt=null,zc=!1,id=0,g0=300,Uc=1/0,v0=500,Vo=null,Aa=null,mx=0,px=1,yx=2,fl=0,b0=1,S0=2,x0=3,gx=4,cd=5,ut=0,Ca=null,gu=null,Da=0,sd=0,rd=null,T0=null,vx=50,Go=0,fd=null,dd=!1,jc=!1,bx=50,dl=0,ko=null,vu=!1,Nc=null,E0=!1,R0=new Set,Sx={},Hc=null,bu=null,hd=!1,md=!1,_c=!1,pd=!1,hl=0,yd={};(function(){for(var e=0;e<jf.length;e++){var t=jf[e],n=t.toLowerCase();t=t[0].toUpperCase()+t.slice(1),un(n,\"on\"+t)}un(cg,\"onAnimationEnd\"),un(sg,\"onAnimationIteration\"),un(rg,\"onAnimationStart\"),un(\"dblclick\",\"onDoubleClick\"),un(\"focusin\",\"onFocus\"),un(\"focusout\",\"onBlur\"),un(FS,\"onTransitionRun\"),un(IS,\"onTransitionStart\"),un(PS,\"onTransitionCancel\"),un(fg,\"onTransitionEnd\")})(),Sl(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]),Sl(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]),Sl(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]),Sl(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]),Ha(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \")),Ha(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \")),Ha(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]),Ha(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \")),Ha(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")),Ha(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xo=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),gd=new Set(\"beforetoggle cancel close invalid load scroll scrollend toggle\".split(\" \").concat(Xo)),Lc=\"_reactListening\"+Math.random().toString(36).slice(2),A0=!1,C0=!1,Bc=!1,D0=!1,qc=!1,Yc=!1,w0=!1,Vc={},xx=/\\r\\n?/g,Tx=/\\u0000|\\uFFFD/g,ml=\"http://www.w3.org/1999/xlink\",vd=\"http://www.w3.org/XML/1998/namespace\",Ex=\"javascript:throw new Error('React form unexpectedly submitted.')\",Rx=\"suppressHydrationWarning\",Gc=\"$\",kc=\"/$\",Pn=\"$?\",Qo=\"$!\",Ax=1,Cx=2,Dx=4,bd=\"F!\",O0=\"F\",M0=\"complete\",wx=\"style\",ea=0,Su=1,Xc=2,Sd=null,xd=null,z0={dialog:!0,webview:!0},Td=null,U0=typeof setTimeout==\"function\"?setTimeout:void 0,Ox=typeof clearTimeout==\"function\"?clearTimeout:void 0,pl=-1,j0=typeof Promise==\"function\"?Promise:void 0,Mx=typeof queueMicrotask==\"function\"?queueMicrotask:typeof j0<\"u\"?function(e){return j0.resolve(null).then(e).catch(pb)}:U0,Ed=null,yl=0,Zo=1,N0=2,H0=3,Pt=4,en=new Map,_0=new Set,ta=se.d;se.d={f:function(){var e=ta.f(),t=Ul();return e||t},r:function(e){var t=Na(e);t!==null&&t.tag===5&&t.type===\"form\"?hm(t):ta.r(e)},D:function(e){ta.D(e),ny(\"dns-prefetch\",e,null)},C:function(e,t){ta.C(e,t),ny(\"preconnect\",e,t)},L:function(e,t,n){ta.L(e,t,n);var a=xu;if(a&&e&&t){var l='link[rel=\"preload\"][as=\"'+Yt(t)+'\"]';t===\"image\"&&n&&n.imageSrcSet?(l+='[imagesrcset=\"'+Yt(n.imageSrcSet)+'\"]',typeof n.imageSizes==\"string\"&&(l+='[imagesizes=\"'+Yt(n.imageSizes)+'\"]')):l+='[href=\"'+Yt(e)+'\"]';var u=l;switch(t){case\"style\":u=_l(e);break;case\"script\":u=Ll(e)}en.has(u)||(e=W({rel:\"preload\",href:t===\"image\"&&n&&n.imageSrcSet?void 0:e,as:t},n),en.set(u,e),a.querySelector(l)!==null||t===\"style\"&&a.querySelector(lo(u))||t===\"script\"&&a.querySelector(uo(u))||(t=a.createElement(\"link\"),tt(t,\"link\",e),Qe(t),a.head.appendChild(t)))}},m:function(e,t){ta.m(e,t);var n=xu;if(n&&e){var a=t&&typeof t.as==\"string\"?t.as:\"script\",l='link[rel=\"modulepreload\"][as=\"'+Yt(a)+'\"][href=\"'+Yt(e)+'\"]',u=l;switch(a){case\"audioworklet\":case\"paintworklet\":case\"serviceworker\":case\"sharedworker\":case\"worker\":case\"script\":u=Ll(e)}if(!en.has(u)&&(e=W({rel:\"modulepreload\",href:e},t),en.set(u,e),n.querySelector(l)===null)){switch(a){case\"audioworklet\":case\"paintworklet\":case\"serviceworker\":case\"sharedworker\":case\"worker\":case\"script\":if(n.querySelector(uo(u)))return}a=n.createElement(\"link\"),tt(a,\"link\",e),Qe(a),n.head.appendChild(a)}}},X:function(e,t){ta.X(e,t);var n=xu;if(n&&e){var a=bl(n).hoistableScripts,l=Ll(e),u=a.get(l);u||(u=n.querySelector(uo(l)),u||(e=W({src:e,async:!0},t),(t=en.get(l))&&Kr(e,t),u=n.createElement(\"script\"),Qe(u),tt(u,\"link\",e),n.head.appendChild(u)),u={type:\"script\",instance:u,count:1,state:null},a.set(l,u))}},S:function(e,t,n){ta.S(e,t,n);var a=xu;if(a&&e){var l=bl(a).hoistableStyles,u=_l(e);t=t||\"default\";var o=l.get(u);if(!o){var i={loading:yl,preload:null};if(o=a.querySelector(lo(u)))i.loading=Zo|Pt;else{e=W({rel:\"stylesheet\",href:e,\"data-precedence\":t},n),(n=en.get(u))&&Jr(e,n);var c=o=a.createElement(\"link\");Qe(c),tt(c,\"link\",e),c._p=new Promise(function(s,p){c.onload=s,c.onerror=p}),c.addEventListener(\"load\",function(){i.loading|=Zo}),c.addEventListener(\"error\",function(){i.loading|=N0}),i.loading|=Pt,Ii(o,t,a)}o={type:\"stylesheet\",instance:o,count:1,state:i},l.set(u,o)}}},M:function(e,t){ta.M(e,t);var n=xu;if(n&&e){var a=bl(n).hoistableScripts,l=Ll(e),u=a.get(l);u||(u=n.querySelector(uo(l)),u||(e=W({src:e,async:!0,type:\"module\"},t),(t=en.get(l))&&Kr(e,t),u=n.createElement(\"script\"),Qe(u),tt(u,\"link\",e),n.head.appendChild(u)),u={type:\"script\",instance:u,count:1,state:null},a.set(l,u))}}};var xu=typeof document>\"u\"?null:document,Qc=null,$o=null,Rd=null,Zc=null,gl=Kb,Jo={$$typeof:Tn,Provider:null,Consumer:null,_currentValue:gl,_currentValue2:gl,_threadCount:0},L0=\"%c%s%c \",B0=\"background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px\",q0=\"\",$c=\" \",zx=Function.prototype.bind,Y0=!1,V0=null,G0=null,k0=null,X0=null,Q0=null,Z0=null,$0=null,J0=null,K0=null;V0=function(e,t,n,a){t=L(e,t),t!==null&&(n=E(t.memoizedState,n,0,a),t.memoizedState=n,t.baseState=n,e.memoizedProps=W({},e.memoizedProps),n=bt(e,2),n!==null&&je(n,e,2))},G0=function(e,t,n){t=L(e,t),t!==null&&(n=N(t.memoizedState,n,0),t.memoizedState=n,t.baseState=n,e.memoizedProps=W({},e.memoizedProps),n=bt(e,2),n!==null&&je(n,e,2))},k0=function(e,t,n,a){t=L(e,t),t!==null&&(n=M(t.memoizedState,n,a),t.memoizedState=n,t.baseState=n,e.memoizedProps=W({},e.memoizedProps),n=bt(e,2),n!==null&&je(n,e,2))},X0=function(e,t,n){e.pendingProps=E(e.memoizedProps,t,0,n),e.alternate&&(e.alternate.pendingProps=e.pendingProps),t=bt(e,2),t!==null&&je(t,e,2)},Q0=function(e,t){e.pendingProps=N(e.memoizedProps,t,0),e.alternate&&(e.alternate.pendingProps=e.pendingProps),t=bt(e,2),t!==null&&je(t,e,2)},Z0=function(e,t,n){e.pendingProps=M(e.memoizedProps,t,n),e.alternate&&(e.alternate.pendingProps=e.pendingProps),t=bt(e,2),t!==null&&je(t,e,2)},$0=function(e){var t=bt(e,2);t!==null&&je(t,e,2)},J0=function(e){J=e},K0=function(e){D=e};var Jc=!0,Kc=null,Ad=!1,wa=null,Oa=null,Ma=null,Ko=new Map,Wo=new Map,za=[],Ux=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset\".split(\" \"),Wc=null;if(nc.prototype.render=nf.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(\"Cannot update an unmounted root.\");var n=arguments;typeof n[1]==\"function\"?console.error(\"does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().\"):me(n[1])?console.error(\"You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.\"):typeof n[1]<\"u\"&&console.error(\"You passed a second argument to root.render(...) but it only accepts one argument.\"),n=e;var a=t.current,l=zt(a);Fr(a,l,n,t,null,null)},nc.prototype.unmount=nf.prototype.unmount=function(){var e=arguments;if(typeof e[0]==\"function\"&&console.error(\"does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().\"),e=this._internalRoot,e!==null){this._internalRoot=null;var t=e.containerInfo;(re&(pt|hn))!==Nt&&console.error(\"Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.\"),Fr(e.current,2,null,e,null,null),Ul(),t[ya]=null}},nc.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ld();e={blockedOn:null,target:e,priority:t};for(var n=0;n<za.length&&t!==0&&t<za[n].priority;n++);za.splice(n,0,e),n===0&&py(e)}},(function(){var e=af.version;if(e!==\"19.1.1\")throw Error(`Incompatible React versions: The \"react\" and \"react-dom\" packages must have the exact same version. Instead got:\n  - react:      `+(e+`\n  - react-dom:  19.1.1\nLearn more: https://react.dev/warnings/version-mismatch`))})(),typeof Map==\"function\"&&Map.prototype!=null&&typeof Map.prototype.forEach==\"function\"&&typeof Set==\"function\"&&Set.prototype!=null&&typeof Set.prototype.clear==\"function\"&&typeof Set.prototype.forEach==\"function\"||console.error(\"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://react.dev/link/react-polyfills\"),se.findDOMNode=function(e){var t=e._reactInternals;if(t===void 0)throw typeof e.render==\"function\"?Error(\"Unable to find node on an unmounted component.\"):(e=Object.keys(e).join(\",\"),Error(\"Argument appears to not be a ReactComponent. Keys: \"+e));return e=tn(t),e=e!==null?nn(e):null,e=e===null?null:e.stateNode,e},!(function(){var e={bundleType:1,version:\"19.1.1\",rendererPackageName:\"react-dom\",currentDispatcherRef:g,reconcilerVersion:\"19.1.1\"};return e.overrideHookState=V0,e.overrideHookStateDeletePath=G0,e.overrideHookStateRenamePath=k0,e.overrideProps=X0,e.overridePropsDeletePath=Q0,e.overridePropsRenamePath=Z0,e.scheduleUpdate=$0,e.setErrorHandler=J0,e.setSuspenseHandler=K0,e.scheduleRefresh=Le,e.scheduleRoot=le,e.setRefreshHandler=gt,e.getCurrentFiber=Bb,e.getLaneLabelMap=qb,e.injectProfilingHooks=Eu,Ie(e)})()&&Dn&&window.top===window.self&&(-1<navigator.userAgent.indexOf(\"Chrome\")&&navigator.userAgent.indexOf(\"Edge\")===-1||-1<navigator.userAgent.indexOf(\"Firefox\"))){var W0=window.location.protocol;/^(https?|file):$/.test(W0)&&console.info(\"%cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools\"+(W0===\"file:\"?`\nYou might need to use a local HTTP server (instead of file://): https://react.dev/link/react-devtools-faq`:\"\"),\"font-weight:bold\")}Io.createRoot=function(e,t){if(!me(e))throw Error(\"Target container is not a DOM element.\");vy(e);var n=!1,a=\"\",l=Em,u=Rm,o=Am,i=null;return t!=null&&(t.hydrate?console.warn(\"hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.\"):typeof t==\"object\"&&t!==null&&t.$$typeof===da&&console.error(`You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);`),t.unstable_strictMode===!0&&(n=!0),t.identifierPrefix!==void 0&&(a=t.identifierPrefix),t.onUncaughtError!==void 0&&(l=t.onUncaughtError),t.onCaughtError!==void 0&&(u=t.onCaughtError),t.onRecoverableError!==void 0&&(o=t.onRecoverableError),t.unstable_transitionCallbacks!==void 0&&(i=t.unstable_transitionCallbacks)),t=sy(e,1,!1,null,null,n,a,l,u,o,i,null),e[ya]=t.current,Br(e),new nf(t)},Io.hydrateRoot=function(e,t,n){if(!me(e))throw Error(\"Target container is not a DOM element.\");vy(e),t===void 0&&console.error(\"Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)\");var a=!1,l=\"\",u=Em,o=Rm,i=Am,c=null,s=null;return n!=null&&(n.unstable_strictMode===!0&&(a=!0),n.identifierPrefix!==void 0&&(l=n.identifierPrefix),n.onUncaughtError!==void 0&&(u=n.onUncaughtError),n.onCaughtError!==void 0&&(o=n.onCaughtError),n.onRecoverableError!==void 0&&(i=n.onRecoverableError),n.unstable_transitionCallbacks!==void 0&&(c=n.unstable_transitionCallbacks),n.formState!==void 0&&(s=n.formState)),t=sy(e,1,!0,t,n??null,a,l,u,o,i,c,s),t.context=ry(null),n=t.current,a=zt(n),a=Ic(a),l=la(a),l.callback=null,ua(n,l,a),n=a,t.current.lanes=n,Cu(t,n),Sn(t),e[ya]=t.current,Br(e),new nc(t)},Io.version=\"19.1.1\",typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<\"u\"&&typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop==\"function\"&&__REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error())})(),Io}var nv;function Gx(){return nv||(nv=1,Dd.exports=Vx()),Dd.exports}var kx=Gx();const Xx=Hx(kx),Tu=\"/api\";class Qx{async getCrosswalkData(E){const M=new URLSearchParams;E?.client_id&&M.append(\"client_id\",E.client_id),E?.file_group&&M.append(\"file_group\",E.file_group),E?.limit&&M.append(\"limit\",E.limit.toString()),E?.offset&&M.append(\"offset\",E.offset.toString());const T=await fetch(`${Tu}/crosswalk?${M}`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(!T.ok)throw new Error(`HTTP ${T.status}: ${T.statusText}`);return T.json()}async updateMapping(E,M){const T=await fetch(`${Tu}/crosswalk/${E}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(M)});if(!T.ok)throw new Error(`HTTP ${T.status}: ${T.statusText}`);return T.json()}async getClients(){const E=await fetch(`${Tu}/crosswalk/clients`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(!E.ok)throw new Error(`HTTP ${E.status}: ${E.statusText}`);return E.json()}async getFileGroups(E){const M=new URLSearchParams;E&&M.append(\"client_id\",E);const T=await fetch(`${Tu}/crosswalk/file-groups?${M}`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(!T.ok)throw new Error(`HTTP ${T.status}: ${T.statusText}`);return T.json()}async getSummary(){const E=await fetch(`${Tu}/crosswalk/summary`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(!E.ok)throw new Error(`HTTP ${E.status}: ${E.statusText}`);return E.json()}async searchMappings(E){const M=await fetch(`${Tu}/crosswalk/search`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(E)});if(!M.ok)throw new Error(`HTTP ${M.status}: ${M.statusText}`);return M.json()}async generateSnowflakeSQL(E){const M=await fetch(\"/api/snowflake/generate-sql\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(E)});if(!M.ok)throw new Error(`HTTP ${M.status}: ${M.statusText}`);return M.json()}async getSnowflakeExports(E){const M=new URLSearchParams;E&&M.append(\"client_id\",E);const T=await fetch(`/api/snowflake/exports?${M}`,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(!T.ok)throw new Error(`HTTP ${T.status}: ${T.statusText}`);return T.json()}}const Ua=new Qx,Zx=\"/api/datamodel\";class $x{async request(E,M={}){const T=await fetch(`${Zx}${E}`,{headers:{\"Content-Type\":\"application/json\",...M.headers},...M});if(!T.ok)throw new Error(`API error: ${T.status} ${T.statusText}`);return T.json()}async getFields(E={}){const M=new URLSearchParams;E.schema_layer&&M.append(\"schema_layer\",E.schema_layer),E.table_name&&M.append(\"table_name\",E.table_name),E.search&&M.append(\"search\",E.search);const T=M.toString(),N=T?`/fields?${T}`:\"/fields\";return this.request(N)}async suggestMapping(E,M){const T=new URLSearchParams({source_column:E});return M&&T.append(\"file_group\",M),this.request(`/suggest-mapping?${T.toString()}`)}async validateMapping(E){return this.request(\"/validate-mapping\",{method:\"POST\",body:JSON.stringify(E)})}async getSchemaLayers(){return this.request(\"/schema-layers\")}async getTables(E){const M=E?`?schema_layer=${E}`:\"\";return this.request(`/tables${M}`)}async getFieldInfo(E){return this.request(`/field-info/${encodeURIComponent(E)}`)}async getMcdmColumns(E=\"\"){const M=await this.getFields({search:E});return Array.from(new Set(M.map(T=>T.column_name))).sort()}async requiresCaseSensitivity(E){try{return(await this.getFieldInfo(E)).some(T=>T.is_case_sensitive)}catch{return!1}}async getFormattingSuggestions(E,M){const T=[];try{await this.requiresCaseSensitivity(M)&&(T.push(`UPPER(${E})`),T.push(`LOWER(${E})`)),E.toLowerCase().includes(\"date\")&&(T.push(`TO_DATE(${E}, 'YYYY-MM-DD')`),T.push(`${E}::DATE`)),(E.toLowerCase().includes(\"amount\")||E.toLowerCase().includes(\"cost\"))&&(T.push(`${E}::DECIMAL(10,2)`),T.push(`ROUND(${E}, 2)`)),M.toLowerCase().includes(\"sid\")&&T.push(`${E}::BIGINT`)}catch(N){console.error(\"Error getting formatting suggestions:\",N)}return T}getInModelValidation(E,M){const T=[];return E===\"Y\"&&!M.trim()?{isValid:!1,message:\"Fields with IN_MODEL=Y must have an MCDM column name\",suggestions:[\"Select a target column from the PI20 data model\"]}:(E===\"N\"&&T.push(\"Custom field - will only appear in CLEANSE schema\"),E===\"U\"&&T.push(\"Under review - field mapping needs validation\"),E===\"N/A\"&&T.push(\"Field will be skipped in processing\"),{isValid:!0,suggestions:T})}}const Jx=new $x,Kx=({isOpen:L,onClose:E,clientId:M,fileGroup:T})=>{const[N,D]=be.useState(\"CREATE_TABLE\"),[J,De]=be.useState(\"\"),[O,F]=be.useState(!1),[Ke,_e]=be.useState(\"\"),[G,le]=be.useState(\"\"),Le=async()=>{if(!M||!J.trim()){le(\"Client ID and table name are required\");return}F(!0),le(\"\"),_e(\"\");try{const ue=await Ua.generateSnowflakeSQL({client_id:M,file_group:T,export_type:N,table_name:J.trim(),created_by:\"WEB_USER\"});_e(ue.sql_content)}catch(ue){le(ue.message||\"Failed to generate SQL\")}finally{F(!1)}},gt=()=>{navigator.clipboard.writeText(Ke),alert(\"SQL copied to clipboard!\")},me=()=>{const ue=new Blob([Ke],{type:\"text/sql\"}),Me=URL.createObjectURL(ue),We=document.createElement(\"a\");We.href=Me,We.download=`${J}_${N.toLowerCase()}.sql`,We.click(),URL.revokeObjectURL(Me)};return L?r.jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\",children:r.jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl w-full max-w-4xl mx-4 max-h-[90vh] flex flex-col\",children:[r.jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-700 flex items-center justify-between\",children:[r.jsxs(\"h2\",{className:\"text-xl font-semibold text-white\",children:[r.jsx(\"i\",{className:\"fas fa-database text-orange-600 mr-2\"}),\"Generate Snowflake SQL\"]}),r.jsx(\"button\",{onClick:E,className:\"text-gray-400 hover:text-gray-200\",children:r.jsx(\"i\",{className:\"fas fa-times text-xl\"})})]}),r.jsxs(\"div\",{className:\"flex-1 overflow-hidden flex flex-col p-6\",children:[r.jsxs(\"div\",{className:\"space-y-4 mb-6\",children:[r.jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[r.jsxs(\"div\",{children:[r.jsx(\"label\",{className:\"block text-sm font-medium text-white mb-2\",children:\"Export Type\"}),r.jsxs(\"select\",{value:N,onChange:ue=>D(ue.target.value),className:\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\",children:[r.jsx(\"option\",{value:\"CREATE_TABLE\",children:\"CREATE TABLE\"}),r.jsx(\"option\",{value:\"INSERT_MAPPING\",children:\"🎯 Crosswalk Configuration INSERTs (ETL Foundation)\"}),r.jsx(\"option\",{value:\"FULL_ETL\",children:\"Full ETL with Joins\"})]})]}),r.jsxs(\"div\",{children:[r.jsx(\"label\",{className:\"block text-sm font-medium text-white mb-2\",children:\"Table Name\"}),r.jsx(\"input\",{type:\"text\",value:J,onChange:ue=>De(ue.target.value),placeholder:\"e.g., UPHP_CLAIMS_STAGING\",className:\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\"})]})]}),r.jsxs(\"div\",{className:\"bg-gray-700 p-4 rounded-lg border border-gray-600\",children:[r.jsx(\"h3\",{className:\"font-medium text-orange-400 mb-2\",children:\"Configuration Summary\"}),r.jsxs(\"div\",{className:\"text-sm text-gray-300 space-y-1\",children:[r.jsxs(\"p\",{children:[r.jsx(\"strong\",{children:\"Client:\"}),\" \",M]}),r.jsxs(\"p\",{children:[r.jsx(\"strong\",{children:\"File Group:\"}),\" \",T||\"All\"]}),r.jsxs(\"p\",{children:[r.jsx(\"strong\",{children:\"Export Type:\"}),\" \",N===\"INSERT_MAPPING\"?\"Crosswalk Configuration INSERTs\":N]}),r.jsxs(\"p\",{children:[r.jsx(\"strong\",{children:\"Target Table:\"}),\" \",J||(N===\"INSERT_MAPPING\"?\"crosswalk.configuration (recommended)\":\"Not specified\")]})]}),N===\"INSERT_MAPPING\"&&r.jsx(\"div\",{className:\"mt-3 p-3 bg-yellow-50 border border-yellow-200 rounded\",children:r.jsxs(\"p\",{className:\"text-sm text-yellow-800\",children:[r.jsx(\"i\",{className:\"fas fa-info-circle mr-2\"}),r.jsx(\"strong\",{children:\"Critical:\"}),' These INSERTs populate your crosswalk.configuration table - the foundation for all your ETL processes. This is the \"Output DML for Crosswalk\" functionality.']})})]}),G&&r.jsx(\"div\",{className:\"bg-red-50 border border-red-200 rounded-lg p-4\",children:r.jsxs(\"div\",{className:\"flex\",children:[r.jsx(\"i\",{className:\"fas fa-exclamation-triangle text-red-400 mr-2 mt-1\"}),r.jsx(\"p\",{className:\"text-sm text-red-700\",children:G})]})}),r.jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[r.jsx(\"button\",{onClick:Le,disabled:O||!J.trim(),className:\"px-4 py-2 bg-orange-600 text-white rounded-md hover:bg-orange-700 disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center\",children:O?r.jsxs(r.Fragment,{children:[r.jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"}),\"Generating...\"]}):r.jsxs(r.Fragment,{children:[r.jsx(\"i\",{className:\"fas fa-code mr-2\"}),\"Generate SQL\"]})}),Ke&&r.jsxs(r.Fragment,{children:[r.jsxs(\"button\",{onClick:gt,className:\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center\",children:[r.jsx(\"i\",{className:\"fas fa-copy mr-2\"}),\"Copy\"]}),r.jsxs(\"button\",{onClick:me,className:\"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 flex items-center\",children:[r.jsx(\"i\",{className:\"fas fa-download mr-2\"}),\"Download\"]})]})]})]}),Ke&&r.jsxs(\"div\",{className:\"flex-1 min-h-0\",children:[r.jsx(\"label\",{className:\"block text-sm font-medium text-white mb-2\",children:\"Generated SQL\"}),r.jsx(\"div\",{className:\"h-full border border-gray-600 rounded-md overflow-hidden\",children:r.jsx(\"textarea\",{value:Ke,readOnly:!0,className:\"w-full h-full p-3 font-mono text-sm resize-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\",style:{minHeight:\"300px\"}})})]})]}),r.jsx(\"div\",{className:\"px-6 py-4 border-t border-gray-700 bg-gray-700\",children:r.jsx(\"div\",{className:\"flex justify-end space-x-3\",children:r.jsx(\"button\",{onClick:E,className:\"px-4 py-2 text-sm font-medium text-gray-300 bg-gray-700 border border-gray-600 rounded-md hover:bg-gray-600\",children:\"Close\"})})})]})}):null},Wx=({clientId:L,fileGroup:E})=>{const[M,T]=be.useState([]),[N,D]=be.useState(!1),[J,De]=be.useState(null),[O,F]=be.useState([]),[Ke,_e]=be.useState([]),[G,le]=be.useState(null),[Le,gt]=be.useState(\"cards\"),[me,ue]=be.useState(\"\"),[Me,We]=be.useState({showIncompleteOnly:!1,showMcsReviewOnly:!1,completionStatus:\"all\",mcsReviewStatus:\"all\"}),[tn,nn]=be.useState(!1);be.useEffect(()=>{(async()=>{D(!0),De(null);try{const k=await Ua.getCrosswalkData({client_id:L,file_group:E,limit:500});T(k.data)}catch(k){De(k.message||\"Failed to fetch crosswalk data\"),console.error(\"Error fetching crosswalk data:\",k)}finally{D(!1)}})()},[L,E]);const ot=async(C,k)=>{try{await Ua.updateMapping(C,k),T(oe=>oe.map(P=>P.id===C?{...P,...k}:P))}catch(oe){console.error(\"Error updating mapping:\",oe),alert(\"Failed to update mapping: \"+(oe.message||\"Unknown error\"))}},ce=be.useMemo(()=>{let C=M;return me&&(C=C.filter(k=>k.source_column_name?.toLowerCase().includes(me.toLowerCase())||k.mcdm_column_name?.toLowerCase().includes(me.toLowerCase())||k.file_group_name?.toLowerCase().includes(me.toLowerCase())||k.data_profile_info?.toLowerCase().includes(me.toLowerCase()))),Me.showIncompleteOnly&&(C=C.filter(k=>{const oe=k.in_model?.toUpperCase(),P=k.mcdm_column_name?.trim(),Fe=k.skipped_flag;return oe===\"Y\"&&!P&&!Fe})),Me.showMcsReviewOnly&&(C=C.filter(k=>k.mcs_review_required)),Me.completionStatus!==\"all\"&&(C=C.filter(k=>k.completion_status===Me.completionStatus)),C},[M,me,Me]),Ct=C=>{const k=C.in_model?.toUpperCase(),oe=C.mcdm_column_name?.trim();return C.skipped_flag?{status:\"skipped\",color:\"gray\",text:\"Skipped\"}:k===\"Y\"&&oe?{status:\"mapped\",color:\"green\",text:\"Mapped\"}:k===\"Y\"&&!oe?{status:\"incomplete\",color:\"red\",text:\"Needs MCDM Column\"}:k===\"N\"?{status:\"custom\",color:\"blue\",text:\"Custom Field\"}:k===\"U\"?{status:\"review\",color:\"yellow\",text:\"Under Review\"}:{status:\"pending\",color:\"gray\",text:\"Pending\"}};return N?r.jsx(\"div\",{className:\"flex items-center justify-center h-64\",children:r.jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[r.jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-orange-600\"}),r.jsx(\"span\",{className:\"text-white\",children:\"Loading crosswalk data...\"})]})}):J?r.jsx(\"div\",{className:\"flex items-center justify-center h-64\",children:r.jsxs(\"div\",{className:\"text-center\",children:[r.jsx(\"i\",{className:\"fas fa-exclamation-triangle text-red-500 text-4xl mb-4\"}),r.jsx(\"h3\",{className:\"text-lg font-medium text-white mb-2\",children:\"Error Loading Data\"}),r.jsx(\"p\",{className:\"text-gray-300\",children:J})]})}):r.jsxs(\"div\",{className:\"h-full flex bg-gray-900\",children:[r.jsxs(\"div\",{className:\"flex-1 flex flex-col\",children:[r.jsxs(\"div\",{className:\"bg-gray-800 border-b border-gray-700 px-6 py-4\",children:[r.jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[r.jsxs(\"div\",{children:[r.jsx(\"h2\",{className:\"text-xl font-semibold text-white\",children:\"Crosswalk Template\"}),r.jsxs(\"p\",{className:\"text-sm text-gray-300 mt-1\",children:[ce.length,\" mappings\",L&&` • Client: ${L}`,E&&` • File Group: ${E}`]})]}),r.jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[r.jsxs(\"button\",{onClick:()=>nn(!0),className:\"px-3 py-1.5 text-sm font-medium text-white bg-orange-600 rounded-lg hover:bg-orange-700 flex items-center\",children:[r.jsx(\"i\",{className:\"fas fa-download mr-1.5\"}),\"Export SQL\"]}),r.jsxs(\"div\",{className:\"flex rounded-lg border border-gray-600\",children:[r.jsxs(\"button\",{onClick:()=>gt(\"cards\"),className:`px-3 py-1.5 text-sm font-medium rounded-l-lg ${Le===\"cards\"?\"bg-orange-600 text-white\":\"bg-gray-700 text-white hover:bg-gray-600\"}`,children:[r.jsx(\"i\",{className:\"fas fa-th-large mr-1.5\"}),\"Cards\"]}),r.jsxs(\"button\",{onClick:()=>gt(\"table\"),className:`px-3 py-1.5 text-sm font-medium rounded-r-lg border-l ${Le===\"table\"?\"bg-orange-600 text-white\":\"bg-gray-700 text-white hover:bg-gray-600\"}`,children:[r.jsx(\"i\",{className:\"fas fa-table mr-1.5\"}),\"Table\"]})]})]})]}),r.jsx(\"div\",{className:\"flex items-center justify-between\",children:r.jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[r.jsx(\"div\",{className:\"flex-1 max-w-md\",children:r.jsxs(\"div\",{className:\"relative\",children:[r.jsx(\"input\",{type:\"text\",placeholder:\"Search columns, mappings, or descriptions...\",value:me,onChange:C=>ue(C.target.value),className:\"w-full pl-10 pr-4 py-2 border border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white placeholder-gray-400\"}),r.jsx(\"i\",{className:\"fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-300\"})]})}),r.jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[r.jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[r.jsx(\"input\",{type:\"checkbox\",id:\"incomplete-only\",checked:Me.showIncompleteOnly,onChange:C=>We({...Me,showIncompleteOnly:C.target.checked}),className:\"rounded border-gray-600\"}),r.jsx(\"label\",{htmlFor:\"incomplete-only\",className:\"text-sm text-white\",children:\"Show Incomplete Only\"})]}),r.jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[r.jsx(\"input\",{type:\"checkbox\",id:\"mcs-review\",checked:Me.showMcsReviewOnly,onChange:C=>We({...Me,showMcsReviewOnly:C.target.checked}),className:\"rounded border-gray-600\"}),r.jsxs(\"label\",{htmlFor:\"mcs-review\",className:\"text-sm text-white\",children:[r.jsx(\"i\",{className:\"fas fa-flag text-orange-600 mr-1\"}),\"MCS Review\"]})]})]}),r.jsxs(\"div\",{className:\"flex items-center space-x-2 text-sm\",children:[r.jsx(\"span\",{className:\"text-white font-medium\",children:\"Status:\"}),r.jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[r.jsxs(\"div\",{className:\"flex items-center\",children:[r.jsx(\"div\",{className:\"w-3 h-3 bg-green-500 rounded-full mr-1.5\"}),r.jsxs(\"span\",{className:\"text-white\",children:[\"Mapped (\",ce.filter(C=>Ct(C).status===\"mapped\").length,\")\"]})]}),r.jsxs(\"div\",{className:\"flex items-center\",children:[r.jsx(\"div\",{className:\"w-3 h-3 bg-red-500 rounded-full mr-1.5\"}),r.jsxs(\"span\",{className:\"text-white\",children:[\"Incomplete (\",ce.filter(C=>Ct(C).status===\"incomplete\").length,\")\"]})]}),r.jsxs(\"div\",{className:\"flex items-center\",children:[r.jsx(\"div\",{className:\"w-3 h-3 bg-orange-600 rounded-full mr-1.5\"}),r.jsxs(\"span\",{className:\"text-white\",children:[\"MCS Review (\",ce.filter(C=>C.mcs_review_required).length,\")\"]})]})]})]})]})})]}),r.jsx(\"div\",{className:\"flex-1 overflow-hidden\",children:Le===\"cards\"?r.jsx(Fx,{data:ce,onUpdateMapping:ot,onSelectMapping:le,selectedMapping:G,getStatusInfo:Ct}):r.jsx(Ix,{data:ce,onUpdateMapping:ot,onSelectMapping:le,selectedMapping:G,getStatusInfo:Ct})})]}),G&&r.jsx(Px,{mapping:G,onUpdateMapping:C=>ot(G.id,C),onClose:()=>le(null)}),r.jsx(Kx,{isOpen:tn,onClose:()=>nn(!1),clientId:L,fileGroup:E})]})},Fx=({data:L,onUpdateMapping:E,onSelectMapping:M,selectedMapping:T,getStatusInfo:N})=>r.jsx(\"div\",{className:\"h-full overflow-auto p-6 bg-gray-900\",children:r.jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\",children:L.map(D=>{const J=N(D),De=T?.id===D.id;return r.jsxs(\"div\",{onClick:()=>M(D),className:`bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer border-2 ${De?\"border-orange-600 ring-2 ring-orange-200\":\"border-gray-600\"}`,children:[r.jsxs(\"div\",{className:\"p-4 border-b border-gray-700\",children:[r.jsxs(\"div\",{className:\"flex items-start justify-between mb-2\",children:[r.jsx(\"h3\",{className:\"font-semibold text-white text-sm leading-tight\",children:D.source_column_name||\"Untitled Column\"}),r.jsx(\"span\",{className:`px-2 py-1 rounded-full text-xs font-medium ${J.status===\"mapped\"?\"bg-green-100 text-green-700\":J.status===\"incomplete\"?\"bg-red-100 text-red-700\":J.status===\"custom\"?\"bg-orange-100 text-orange-700\":J.status===\"review\"?\"bg-yellow-100 text-yellow-700\":(J.status===\"skipped\",\"bg-gray-100 text-gray-700\")}`,children:J.text})]}),D.file_group_name&&r.jsx(\"span\",{className:`inline-flex px-2 py-1 rounded text-xs font-medium ${D.file_group_name===\"CLAIM\"?\"bg-orange-50 text-orange-700\":D.file_group_name===\"CLAIM_LINE\"?\"bg-green-50 text-green-700\":D.file_group_name===\"MEMBER\"?\"bg-purple-50 text-purple-700\":D.file_group_name===\"PROVIDER\"?\"bg-orange-50 text-orange-700\":\"bg-gray-50 text-gray-700\"}`,children:D.file_group_name})]}),r.jsxs(\"div\",{className:\"p-4 space-y-3\",children:[D.mcdm_column_name&&r.jsxs(\"div\",{children:[r.jsx(\"label\",{className:\"text-xs font-medium text-gray-400 uppercase tracking-wide\",children:\"Target Column\"}),r.jsx(\"p\",{className:\"text-sm font-medium text-orange-600 mt-1\",children:D.mcdm_column_name})]}),D.mcdm_table&&r.jsxs(\"div\",{children:[r.jsx(\"label\",{className:\"text-xs font-medium text-gray-400 uppercase tracking-wide\",children:\"Table\"}),r.jsx(\"p\",{className:\"text-sm text-white mt-1\",children:D.mcdm_table})]}),D.source_column_formatting&&r.jsxs(\"div\",{children:[r.jsx(\"label\",{className:\"text-xs font-medium text-gray-500 uppercase tracking-wide\",children:\"Formatting\"}),r.jsx(\"p\",{className:\"text-sm font-mono text-gray-700 mt-1 bg-gray-50 px-2 py-1 rounded\",children:D.source_column_formatting.length>30?`${D.source_column_formatting.substring(0,30)}...`:D.source_column_formatting})]}),D.data_profile_info&&r.jsxs(\"div\",{children:[r.jsx(\"label\",{className:\"text-xs font-medium text-gray-500 uppercase tracking-wide\",children:\"Profile Info\"}),r.jsx(\"p\",{className:\"text-sm text-gray-600 mt-1\",children:D.data_profile_info.length>60?`${D.data_profile_info.substring(0,60)}...`:D.data_profile_info})]})]}),r.jsx(\"div\",{className:\"px-4 py-3 bg-gray-700 rounded-b-lg border-t border-gray-600\",children:r.jsxs(\"div\",{className:\"flex items-center justify-between text-xs text-gray-300\",children:[r.jsxs(\"span\",{children:[\"Order: \",D.source_column_order||\"N/A\"]}),r.jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[r.jsx(\"span\",{className:`px-2 py-0.5 rounded font-medium ${D.in_model===\"Y\"?\"bg-green-100 text-green-700\":D.in_model===\"N\"?\"bg-red-100 text-red-700\":D.in_model===\"U\"?\"bg-yellow-100 text-yellow-700\":\"bg-gray-100 text-gray-700\"}`,children:D.in_model||\"Y\"}),D.skipped_flag&&r.jsx(\"i\",{className:\"fas fa-ban text-red-400\",title:\"Skipped\"})]})]})})]},D.id)})})}),Ix=({data:L,onUpdateMapping:E,onSelectMapping:M,selectedMapping:T,getStatusInfo:N})=>r.jsx(\"div\",{className:\"h-full overflow-auto bg-gray-900\",children:r.jsx(\"div\",{className:\"min-w-full bg-gray-800\",children:r.jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-700\",children:[r.jsx(\"thead\",{className:\"bg-gray-700 sticky top-0\",children:r.jsxs(\"tr\",{children:[r.jsx(\"th\",{className:\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\",children:\"Source Column\"}),r.jsx(\"th\",{className:\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\",children:\"File Group\"}),r.jsx(\"th\",{className:\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\",children:\"MCDM Column\"}),r.jsx(\"th\",{className:\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\",children:\"Table\"}),r.jsx(\"th\",{className:\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\",children:\"Status\"}),r.jsx(\"th\",{className:\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\",children:\"Actions\"})]})}),r.jsx(\"tbody\",{className:\"bg-gray-800 divide-y divide-gray-700\",children:L.map(D=>{const J=N(D),De=T?.id===D.id;return r.jsxs(\"tr\",{className:`hover:bg-gray-700 cursor-pointer ${De?\"bg-gray-700 border-l-4 border-orange-500\":\"\"}`,onClick:()=>M(D),children:[r.jsxs(\"td\",{className:\"px-4 py-4 whitespace-nowrap\",children:[r.jsx(\"div\",{className:\"font-medium text-white\",children:D.source_column_name||\"Untitled\"}),r.jsxs(\"div\",{className:\"text-sm text-gray-400\",children:[\"Order: \",D.source_column_order||\"N/A\"]})]}),r.jsx(\"td\",{className:\"px-4 py-4 whitespace-nowrap\",children:r.jsx(\"span\",{className:`inline-flex px-2 py-1 rounded-full text-xs font-medium ${D.file_group_name===\"CLAIM\"?\"bg-orange-100 text-orange-800\":D.file_group_name===\"CLAIM_LINE\"?\"bg-green-100 text-green-800\":D.file_group_name===\"MEMBER\"?\"bg-purple-100 text-purple-800\":D.file_group_name===\"PROVIDER\"?\"bg-orange-100 text-orange-800\":\"bg-gray-100 text-gray-800\"}`,children:D.file_group_name||\"N/A\"})}),r.jsx(\"td\",{className:\"px-4 py-4 whitespace-nowrap\",children:r.jsx(\"div\",{className:\"text-sm font-medium text-orange-600\",children:D.mcdm_column_name||\"Not mapped\"})}),r.jsx(\"td\",{className:\"px-4 py-4 whitespace-nowrap text-sm text-white\",children:D.mcdm_table||\"N/A\"}),r.jsx(\"td\",{className:\"px-4 py-4 whitespace-nowrap\",children:r.jsx(\"span\",{className:`inline-flex px-2 py-1 rounded-full text-xs font-medium ${J.status===\"mapped\"?\"bg-green-100 text-green-800\":J.status===\"incomplete\"?\"bg-red-100 text-red-800\":J.status===\"custom\"?\"bg-orange-100 text-orange-800\":J.status===\"review\"?\"bg-yellow-100 text-yellow-800\":(J.status===\"skipped\",\"bg-gray-100 text-gray-800\")}`,children:J.text})}),r.jsx(\"td\",{className:\"px-4 py-4 whitespace-nowrap text-sm font-medium\",children:r.jsx(\"button\",{className:\"text-orange-600 hover:text-orange-900\",children:\"Edit\"})})]},D.id)})})]})})}),Px=({mapping:L,onUpdateMapping:E,onClose:M})=>{const[T,N]=be.useState(L),[D,J]=be.useState([]);be.useEffect(()=>{N(L)},[L]);const De=()=>{E(T),M()},O=async()=>{if(T.source_column_name)try{const F=await Jx.suggestMapping(T.source_column_name,T.file_group_name);J(F)}catch(F){console.error(\"Error getting suggestions:\",F)}};return r.jsxs(\"div\",{className:\"w-96 bg-gray-800 border-l border-gray-700 flex flex-col\",children:[r.jsx(\"div\",{className:\"px-6 py-4 border-b border-gray-700\",children:r.jsxs(\"div\",{className:\"flex items-center justify-between\",children:[r.jsx(\"h3\",{className:\"text-lg font-medium text-white\",children:\"Edit Mapping\"}),r.jsx(\"button\",{onClick:M,className:\"text-gray-400 hover:text-gray-200\",children:r.jsx(\"i\",{className:\"fas fa-times\"})})]})}),r.jsxs(\"div\",{className:\"flex-1 overflow-auto p-6 space-y-6\",children:[r.jsxs(\"div\",{children:[r.jsx(\"label\",{className:\"block text-sm font-medium text-gray-900 mb-2\",children:\"Source Column Name\"}),r.jsx(\"input\",{type:\"text\",value:T.source_column_name||\"\",onChange:F=>N({...T,source_column_name:F.target.value}),className:\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\"})]}),r.jsxs(\"div\",{children:[r.jsx(\"label\",{className:\"block text-sm font-medium text-gray-900 mb-2\",children:\"File Group\"}),r.jsxs(\"select\",{value:T.file_group_name||\"\",onChange:F=>N({...T,file_group_name:F.target.value}),className:\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\",children:[r.jsx(\"option\",{value:\"\",children:\"Select file group...\"}),r.jsx(\"option\",{value:\"CLAIM\",children:\"CLAIM\"}),r.jsx(\"option\",{value:\"CLAIM_LINE\",children:\"CLAIM_LINE\"}),r.jsx(\"option\",{value:\"MEMBER\",children:\"MEMBER\"}),r.jsx(\"option\",{value:\"PROVIDER\",children:\"PROVIDER\"}),r.jsx(\"option\",{value:\"PLAN\",children:\"PLAN\"})]})]}),r.jsxs(\"div\",{children:[r.jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[r.jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"MCDM Column Name\"}),r.jsx(\"button\",{onClick:O,className:\"text-sm text-orange-600 hover:text-orange-800\",children:\"Get Suggestions\"})]}),r.jsx(\"input\",{type:\"text\",value:T.mcdm_column_name||\"\",onChange:F=>N({...T,mcdm_column_name:F.target.value}),className:\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\"}),D.length>0&&r.jsx(\"div\",{className:\"mt-2 border border-gray-200 rounded-md max-h-32 overflow-y-auto\",children:D.map((F,Ke)=>r.jsxs(\"button\",{onClick:()=>N({...T,mcdm_column_name:F.column_name,mcdm_table:F.table_name}),className:\"w-full text-left px-3 py-2 hover:bg-gray-50 text-sm border-b border-gray-100 last:border-b-0\",children:[r.jsx(\"div\",{className:\"font-medium\",children:F.column_name}),r.jsxs(\"div\",{className:\"text-gray-500 text-xs\",children:[F.table_name,\" • \",F.reason]})]},Ke))})]}),r.jsxs(\"div\",{children:[r.jsx(\"label\",{className:\"block text-sm font-medium text-gray-900 mb-2\",children:\"In Model\"}),r.jsxs(\"select\",{value:T.in_model||\"Y\",onChange:F=>N({...T,in_model:F.target.value}),className:\"w-full px-3 py-2 border border-gray-600 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 bg-gray-700 text-white\",children:[r.jsx(\"option\",{value:\"Y\",children:\"Y - Include in model\"}),r.jsx(\"option\",{value:\"N\",children:\"N - Custom field\"}),r.jsx(\"option\",{value:\"U\",children:\"U - Under review\"}),r.jsx(\"option\",{value:\"N/A\",children:\"N/A - Skip\"})]})]}),r.jsxs(\"div\",{children:[r.jsx(\"label\",{className:\"block text-sm font-medium text-gray-900 mb-2\",children:\"Source Column Formatting\"}),r.jsx(\"textarea\",{value:T.source_column_formatting||\"\",onChange:F=>N({...T,source_column_formatting:F.target.value}),rows:3,className:\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-orange-500 font-mono text-sm\",placeholder:\"e.g., UPPER(column_name)\"})]}),r.jsxs(\"div\",{children:[r.jsx(\"label\",{className:\"block text-sm font-medium text-gray-900 mb-2\",children:\"Data Profile Info\"}),r.jsx(\"textarea\",{value:T.data_profile_info||\"\",onChange:F=>N({...T,data_profile_info:F.target.value}),rows:3,className:\"w-full px-3 py-2 bord","size_bytes":360000},"frontend/src/components/CrosswalkDetailPanel.tsx":{"content":"import React, { useState } from 'react';\nimport { CrosswalkMapping } from '../services/crosswalkApi';\n\ninterface CrosswalkDetailPanelProps {\n  mapping: CrosswalkMapping;\n  onUpdateMapping: (updates: Partial<CrosswalkMapping>) => void;\n  onClose: () => void;\n}\n\nconst CrosswalkDetailPanel: React.FC<CrosswalkDetailPanelProps> = ({\n  mapping,\n  onUpdateMapping,\n  onClose\n}) => {\n  const [formData, setFormData] = useState<Partial<CrosswalkMapping>>({\n    source_column_name: mapping.source_column_name || '',\n    file_group_name: mapping.file_group_name || '',\n    mcdm_column_name: mapping.mcdm_column_name || '',\n    mcdm_table: mapping.mcdm_table || '',\n    in_model: mapping.in_model || 'Y',\n    source_column_formatting: mapping.source_column_formatting || '',\n    data_profile_info: mapping.data_profile_info || '',\n    skipped_flag: mapping.skipped_flag || false,\n    custom_data_type: mapping.custom_data_type || '',\n  });\n\n  const handleSave = () => {\n    onUpdateMapping(formData);\n    onClose();\n  };\n\n  return (\n    <div className=\"fixed inset-y-0 right-0 w-96 bg-gray-800 shadow-xl z-50 flex flex-col\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-700\">\n        <h2 className=\"text-lg font-semibold text-white\">Edit Mapping</h2>\n        <button\n          onClick={onClose}\n          className=\"text-gray-400 hover:text-white p-1 rounded\"\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {/* Source Column Name */}\n        <div>\n          <label className=\"block text-sm font-medium text-white mb-1\">\n            Source Column Name\n          </label>\n          <input\n            type=\"text\"\n            value={formData.source_column_name || ''}\n            onChange={(e) => setFormData({...formData, source_column_name: e.target.value})}\n            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n          />\n        </div>\n\n        {/* File Group */}\n        <div>\n          <label className=\"block text-sm font-medium text-white mb-1\">\n            File Group\n          </label>\n          <select\n            value={formData.file_group_name || ''}\n            onChange={(e) => setFormData({...formData, file_group_name: e.target.value})}\n            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-orange-500\"\n          >\n            <option value=\"\">Select File Group</option>\n            <option value=\"CLAIM\">CLAIM</option>\n            <option value=\"CLAIM_LINE\">CLAIM_LINE</option>\n            <option value=\"MEMBER\">MEMBER</option>\n            <option value=\"PROVIDER\">PROVIDER</option>\n          </select>\n        </div>\n\n        {/* MCDM Column Name */}\n        <div>\n          <label className=\"block text-sm font-medium text-white mb-1\">\n            MCDM Column Name\n          </label>\n          <input\n            type=\"text\"\n            value={formData.mcdm_column_name || ''}\n            onChange={(e) => setFormData({...formData, mcdm_column_name: e.target.value})}\n            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n          />\n        </div>\n\n        {/* MCDM Table */}\n        <div>\n          <label className=\"block text-sm font-medium text-white mb-1\">\n            MCDM Table\n          </label>\n          <input\n            type=\"text\"\n            value={formData.mcdm_table || ''}\n            onChange={(e) => setFormData({...formData, mcdm_table: e.target.value})}\n            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n          />\n        </div>\n\n        {/* In Model */}\n        <div>\n          <label className=\"block text-sm font-medium text-white mb-1\">\n            In Model\n          </label>\n          <select\n            value={formData.in_model || 'Y'}\n            onChange={(e) => setFormData({...formData, in_model: e.target.value})}\n            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-orange-500\"\n          >\n            <option value=\"Y\">Y</option>\n            <option value=\"N\">N</option>\n          </select>\n        </div>\n\n        {/* Custom Data Type - only show when In Model is N */}\n        {formData.in_model === 'N' && (\n          <div>\n            <label className=\"block text-sm font-medium text-white mb-1\">\n              Data Type <span className=\"text-red-400\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              value={formData.custom_data_type || ''}\n              onChange={(e) => setFormData({...formData, custom_data_type: e.target.value})}\n              placeholder=\"e.g. VARCHAR(50), INTEGER, DATE\"\n              className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n            />\n            <p className=\"text-xs text-gray-400 mt-1\">\n              Required when field is not in the model\n            </p>\n          </div>\n        )}\n\n        {/* Source Column Formatting */}\n        <div>\n          <label className=\"block text-sm font-medium text-white mb-1\">\n            Source Column Formatting\n          </label>\n          <textarea\n            value={formData.source_column_formatting || ''}\n            onChange={(e) => setFormData({...formData, source_column_formatting: e.target.value})}\n            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n            rows={3}\n          />\n        </div>\n\n        {/* Data Profile Info */}\n        <div>\n          <label className=\"block text-sm font-medium text-white mb-1\">\n            Data Profile Info\n          </label>\n          <textarea\n            value={formData.data_profile_info || ''}\n            onChange={(e) => setFormData({...formData, data_profile_info: e.target.value})}\n            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n            rows={3}\n          />\n        </div>\n\n        {/* Skipped Flag */}\n        <div className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            id=\"skipped_flag\"\n            checked={formData.skipped_flag || false}\n            onChange={(e) => setFormData({...formData, skipped_flag: e.target.checked})}\n            className=\"h-4 w-4 text-orange-600 focus:ring-orange-500 bg-gray-700 border-gray-600 rounded\"\n          />\n          <label htmlFor=\"skipped_flag\" className=\"ml-2 text-sm font-medium text-white\">\n            Skip this field\n          </label>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div className=\"p-4 border-t border-gray-700 flex space-x-3\">\n        <button\n          onClick={onClose}\n          className=\"flex-1 px-4 py-2 border border-gray-600 text-white rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n        >\n          Cancel\n        </button>\n        <button\n          onClick={handleSave}\n          className=\"flex-1 px-4 py-2 bg-orange-600 text-white rounded-md hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n        >\n          Save Changes\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CrosswalkDetailPanel;","size_bytes":7821},"backend/routes/auto_mapping.py":{"content":"\"\"\"\nAuto Mapping API Routes\n======================\n\nFastAPI routes for the intelligent automated mapping system.\n\"\"\"\n\nimport sys\nimport os\nsys.path.append(os.path.join(os.path.dirname(__file__), '..', '..', 'datascience'))\n\nfrom fastapi import APIRouter, HTTPException\nfrom pydantic import BaseModel\nfrom typing import List, Dict, Optional\nfrom auto_mapper import AutoMapper\n\nrouter = APIRouter(prefix=\"/api/auto-mapping\", tags=[\"auto-mapping\"])\n\n# Initialize the auto mapper\nauto_mapper = AutoMapper()\n\nclass SourceColumnRequest(BaseModel):\n    \"\"\"Input model for source column data\"\"\"\n    column_name: str\n    sample_values: Optional[List[str]] = []\n    column_order: Optional[int] = None\n\nclass MappingSuggestionResponse(BaseModel):\n    \"\"\"Response model for mapping suggestions\"\"\"\n    source_column: str\n    target_column: str\n    target_table: str\n    confidence: float\n    reasoning: str\n    data_type: str\n\nclass BulkMappingRequest(BaseModel):\n    \"\"\"Request model for bulk mapping suggestions\"\"\"\n    source_columns: List[SourceColumnRequest]\n\nclass CorrectionRequest(BaseModel):\n    \"\"\"Request model for recording mapping corrections\"\"\"\n    source_column: str\n    correct_table: str\n    correct_column: str\n    incorrect_suggestion: Optional[str] = None\n\n@router.post(\"/suggest\", response_model=Dict[str, List[MappingSuggestionResponse]])\nasync def suggest_mappings(request: BulkMappingRequest):\n    \"\"\"\n    Generate automated mapping suggestions for source columns\n    \n    Takes source columns with optional sample data and returns \n    intelligent suggestions from the 827-field healthcare data model.\n    \"\"\"\n    try:\n        # Convert to format expected by auto_mapper\n        source_columns = [\n            {\n                'column_name': col.column_name,\n                'sample_values': col.sample_values or []\n            }\n            for col in request.source_columns\n        ]\n        \n        # Get suggestions\n        suggestions = auto_mapper.bulk_suggest_mappings(source_columns)\n        \n        # Convert to response format\n        response = {}\n        for col_name, suggestion_list in suggestions.items():\n            response[col_name] = [\n                MappingSuggestionResponse(\n                    source_column=s.source_column,\n                    target_column=s.target_column,\n                    target_table=s.target_table,\n                    confidence=s.confidence,\n                    reasoning=s.reasoning,\n                    data_type=s.data_type\n                )\n                for s in suggestion_list\n            ]\n        \n        return response\n        \n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Error generating suggestions: {str(e)}\")\n\n@router.post(\"/correct\")\nasync def record_correction(request: CorrectionRequest):\n    \"\"\"\n    Record mapping correction to improve future suggestions\n    \n    When users confirm or correct mappings, the system learns \n    from this feedback to get smarter over time.\n    \"\"\"\n    try:\n        auto_mapper.record_correction(\n            source_column=request.source_column,\n            correct_table=request.correct_table,\n            correct_column=request.correct_column,\n            incorrect_suggestion=request.incorrect_suggestion\n        )\n        \n        return {\n            \"status\": \"success\",\n            \"message\": f\"Learned from correction: {request.source_column} → {request.correct_table}.{request.correct_column}\"\n        }\n        \n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Error recording correction: {str(e)}\")\n\n@router.get(\"/stats\")\nasync def get_stats():\n    \"\"\"Get mapping system statistics\"\"\"\n    try:\n        return {\n            \"data_model_fields\": len(auto_mapper.data_model_fields),\n            \"corrections_learned\": len(auto_mapper.correction_history),\n            \"pattern_types\": len(auto_mapper.pattern_library),\n            \"status\": \"ready\"\n        }\n        \n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Error getting stats: {str(e)}\")\n\n@router.post(\"/suggest-single\", response_model=List[MappingSuggestionResponse])\nasync def suggest_single(column_name: str, sample_values: Optional[List[str]] = None):\n    \"\"\"Generate suggestions for a single column\"\"\"\n    try:\n        suggestions = auto_mapper.generate_mapping_suggestions(column_name, sample_values or [])\n        \n        return [\n            MappingSuggestionResponse(\n                source_column=s.source_column,\n                target_column=s.target_column,\n                target_table=s.target_table,\n                confidence=s.confidence,\n                reasoning=s.reasoning,\n                data_type=s.data_type\n            )\n            for s in suggestions\n        ]\n        \n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Error: {str(e)}\")","size_bytes":4891},"datascience/auto_mapper.py":{"content":"\"\"\"\nAutomated Data Model Mapping System\n====================================\n\nThis module provides intelligent mapping suggestions from source columns to data model fields\nusing a hybrid approach with self-learning capabilities.\n\nApproach:\n1. Fuzzy string matching for column names\n2. Data pattern analysis for sample values  \n3. Learning from user corrections to improve over time\n4. Confidence scoring for mapping suggestions\n\"\"\"\n\nimport re\nimport json\nimport os\nimport psycopg2\nfrom typing import List, Dict, Tuple, Optional\nfrom dataclasses import dataclass\nfrom fuzzywuzzy import fuzz, process\nimport pandas as pd\nimport numpy as np\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import cosine_similarity\n\n@dataclass\nclass MappingSuggestion:\n    \"\"\"Represents a mapping suggestion with confidence score\"\"\"\n    source_column: str\n    target_column: str\n    target_table: str\n    confidence: float\n    reasoning: str\n    data_type: str\n\n@dataclass\nclass DataModelField:\n    \"\"\"Represents a field in the data model\"\"\"\n    table: str\n    column: str\n    description: str\n    data_type: str\n\nclass AutoMapper:\n    \"\"\"\n    Intelligent mapping system that learns from corrections\n    \"\"\"\n    \n    def __init__(self, db_url: str = None):\n        self.db_url = db_url or os.getenv('DATABASE_URL')\n        self.data_model_fields = []\n        self.correction_history = []\n        self.pattern_library = {\n            'claim_number': [r'^\\d{5,20}$', r'^\\w{5,15}-\\w{3,10}$'],\n            'member_id': [r'^\\d{8,12}$', r'^[A-Z]{2}\\d{6,10}$'],\n            'date': [r'^\\d{4}-\\d{2}-\\d{2}$', r'^\\d{1,2}/\\d{1,2}/\\d{4}$'],\n            'phone': [r'^\\d{10}$', r'^\\(\\d{3}\\)\\s?\\d{3}-\\d{4}$'],\n            'amount': [r'^\\d+\\.\\d{2}$', r'^\\$?\\d+,?\\d*\\.?\\d*$'],\n            'zip_code': [r'^\\d{5}(-\\d{4})?$'],\n            'npi': [r'^\\d{10}$'],\n            'tax_id': [r'^\\d{2}-\\d{7}$', r'^\\d{9}$'],\n        }\n        self.load_data_model()\n        self.load_correction_history()\n    \n    def load_data_model(self):\n        \"\"\"Load all fields from the data model\"\"\"\n        try:\n            conn = psycopg2.connect(self.db_url)\n            query = \"\"\"\n                SELECT model_table, model_column, description, data_type\n                FROM data_model_fields\n                ORDER BY model_table, model_column\n            \"\"\"\n            df = pd.read_sql_query(query, conn)\n            conn.close()\n            \n            self.data_model_fields = [\n                DataModelField(\n                    table=row['model_table'],\n                    column=row['model_column'], \n                    description=row['description'] or '',\n                    data_type=row['data_type']\n                )\n                for _, row in df.iterrows()\n            ]\n            print(f\"Loaded {len(self.data_model_fields)} data model fields\")\n            \n        except Exception as e:\n            print(f\"Error loading data model: {e}\")\n            self.data_model_fields = []\n    \n    def load_correction_history(self):\n        \"\"\"Load previous mapping corrections to learn from\"\"\"\n        try:\n            conn = psycopg2.connect(self.db_url)\n            cursor = conn.cursor()\n            \n            # Check if corrections table exists, create if not\n            cursor.execute(\"\"\"\n                CREATE TABLE IF NOT EXISTS mapping_corrections (\n                    id SERIAL PRIMARY KEY,\n                    source_column TEXT,\n                    correct_target_table TEXT,\n                    correct_target_column TEXT,\n                    incorrect_suggestion TEXT,\n                    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n                )\n            \"\"\")\n            conn.commit()\n            \n            query = \"\"\"\n                SELECT source_column, correct_target_table, correct_target_column,\n                       incorrect_suggestion\n                FROM mapping_corrections\n            \"\"\"\n            df = pd.read_sql_query(query, conn)\n            conn.close()\n            \n            self.correction_history = df.to_dict('records')\n            print(f\"Loaded {len(self.correction_history)} correction history records\")\n            \n        except Exception as e:\n            print(f\"Error loading correction history: {e}\")\n            self.correction_history = []\n    \n    def analyze_data_patterns(self, sample_values: List[str]) -> Dict[str, float]:\n        \"\"\"Analyze sample data to identify patterns\"\"\"\n        if not sample_values:\n            return {}\n        \n        pattern_scores = {}\n        clean_values = [str(v).strip() for v in sample_values if v is not None]\n        \n        for pattern_type, patterns in self.pattern_library.items():\n            matches = 0\n            for value in clean_values[:10]:  # Check first 10 values\n                for pattern in patterns:\n                    if re.match(pattern, str(value)):\n                        matches += 1\n                        break\n            \n            if clean_values:\n                pattern_scores[pattern_type] = matches / min(len(clean_values), 10)\n        \n        return pattern_scores\n    \n    def calculate_string_similarity(self, source_col: str, target_col: str) -> float:\n        \"\"\"Calculate string similarity between column names\"\"\"\n        # Normalize column names\n        source_norm = re.sub(r'[_\\s-]+', '', source_col.lower())\n        target_norm = re.sub(r'[_\\s-]+', '', target_col.lower())\n        \n        # Use multiple similarity metrics\n        ratio = fuzz.ratio(source_norm, target_norm) / 100.0\n        partial = fuzz.partial_ratio(source_norm, target_norm) / 100.0\n        token_sort = fuzz.token_sort_ratio(source_col.lower(), target_col.lower()) / 100.0\n        \n        # Weighted average\n        return (0.4 * ratio + 0.3 * partial + 0.3 * token_sort)\n    \n    def get_semantic_similarity(self, source_desc: str, target_desc: str) -> float:\n        \"\"\"Calculate semantic similarity using TF-IDF\"\"\"\n        if not source_desc or not target_desc:\n            return 0.0\n        \n        try:\n            docs = [source_desc.lower(), target_desc.lower()]\n            vectorizer = TfidfVectorizer(stop_words='english')\n            tfidf_matrix = vectorizer.fit_transform(docs)\n            similarity = cosine_similarity(tfidf_matrix[0:1], tfidf_matrix[1:2])\n            return similarity[0][0]\n        except:\n            return 0.0\n    \n    def apply_learning_boost(self, source_col: str, target_field: DataModelField) -> float:\n        \"\"\"Apply learning boost based on correction history\"\"\"\n        boost = 0.0\n        \n        for correction in self.correction_history:\n            # If this exact mapping was corrected as correct before\n            if (correction['source_column'].lower() == source_col.lower() and \n                correction['correct_target_table'] == target_field.table and\n                correction['correct_target_column'] == target_field.column):\n                boost += 0.3\n            \n            # If similar source column was mapped to this target before\n            if (fuzz.ratio(correction['source_column'].lower(), source_col.lower()) > 80 and\n                correction['correct_target_table'] == target_field.table and\n                correction['correct_target_column'] == target_field.column):\n                boost += 0.1\n        \n        return min(boost, 0.5)  # Cap boost at 0.5\n    \n    def generate_mapping_suggestions(self, source_column: str, sample_values: List[str] = None) -> List[MappingSuggestion]:\n        \"\"\"Generate ranked mapping suggestions for a source column\"\"\"\n        suggestions = []\n        \n        # Analyze data patterns if sample values provided\n        pattern_scores = self.analyze_data_patterns(sample_values or [])\n        \n        for target_field in self.data_model_fields:\n            # Calculate different similarity scores\n            name_similarity = self.calculate_string_similarity(source_column, target_field.column)\n            semantic_similarity = self.get_semantic_similarity(source_column, target_field.description)\n            learning_boost = self.apply_learning_boost(source_column, target_field)\n            \n            # Pattern matching boost\n            pattern_boost = 0.0\n            field_name_lower = target_field.column.lower()\n            for pattern_type, score in pattern_scores.items():\n                if pattern_type in field_name_lower or any(keyword in field_name_lower for keyword in pattern_type.split('_')):\n                    pattern_boost += score * 0.2\n            \n            # Calculate final confidence score\n            confidence = (\n                0.4 * name_similarity +      # Column name similarity\n                0.2 * semantic_similarity +  # Description similarity  \n                0.2 * pattern_boost +        # Data pattern match\n                0.2 * learning_boost         # Learning from corrections\n            )\n            \n            # Generate reasoning\n            reasoning_parts = []\n            if name_similarity > 0.6:\n                reasoning_parts.append(f\"Column name match ({name_similarity:.0%})\")\n            if pattern_boost > 0.1:\n                best_pattern = max(pattern_scores.items(), key=lambda x: x[1])[0] if pattern_scores else None\n                if best_pattern:\n                    reasoning_parts.append(f\"Data pattern suggests {best_pattern}\")\n            if learning_boost > 0.1:\n                reasoning_parts.append(\"Previously learned mapping\")\n            if semantic_similarity > 0.3:\n                reasoning_parts.append(\"Description similarity\")\n            \n            reasoning = \" • \".join(reasoning_parts) if reasoning_parts else \"Basic similarity match\"\n            \n            if confidence > 0.1:  # Only include suggestions with reasonable confidence\n                suggestions.append(MappingSuggestion(\n                    source_column=source_column,\n                    target_column=target_field.column,\n                    target_table=target_field.table,\n                    confidence=confidence,\n                    reasoning=reasoning,\n                    data_type=target_field.data_type\n                ))\n        \n        # Sort by confidence and return top 5\n        suggestions.sort(key=lambda x: x.confidence, reverse=True)\n        return suggestions[:5]\n    \n    def record_correction(self, source_column: str, correct_table: str, correct_column: str, incorrect_suggestion: str = None):\n        \"\"\"Record a user correction to improve future suggestions\"\"\"\n        try:\n            conn = psycopg2.connect(self.db_url)\n            cursor = conn.cursor()\n            cursor.execute(\"\"\"\n                INSERT INTO mapping_corrections \n                (source_column, correct_target_table, correct_target_column, incorrect_suggestion)\n                VALUES (%s, %s, %s, %s)\n            \"\"\", (source_column, correct_table, correct_column, incorrect_suggestion or ''))\n            conn.commit()\n            conn.close()\n            \n            # Reload correction history\n            self.load_correction_history()\n            print(f\"Recorded correction: {source_column} -> {correct_table}.{correct_column}\")\n            \n        except Exception as e:\n            print(f\"Error recording correction: {e}\")\n    \n    def bulk_suggest_mappings(self, source_columns: List[Dict]) -> Dict[str, List[MappingSuggestion]]:\n        \"\"\"Generate suggestions for multiple source columns\"\"\"\n        results = {}\n        \n        for col_info in source_columns:\n            source_col = col_info.get('column_name', '')\n            sample_values = col_info.get('sample_values', [])\n            \n            if source_col:\n                suggestions = self.generate_mapping_suggestions(source_col, sample_values)\n                results[source_col] = suggestions\n        \n        return results\n\nif __name__ == \"__main__\":\n    # Test the auto mapper\n    mapper = AutoMapper()\n    \n    # Test with sample columns\n    test_columns = [\n        {'column_name': 'MEMBER_FIRST_NAME', 'sample_values': ['John', 'Jane', 'Mike']},\n        {'column_name': 'CLAIM_NUMBER', 'sample_values': ['12345-67890', '98765-43210']},\n        {'column_name': 'SERVICE_DATE', 'sample_values': ['2024-01-15', '2024-02-20']},\n    ]\n    \n    suggestions = mapper.bulk_suggest_mappings(test_columns)\n    \n    for col_name, suggestions_list in suggestions.items():\n        print(f\"\\n=== Suggestions for '{col_name}' ===\")\n        for i, suggestion in enumerate(suggestions_list, 1):\n            print(f\"{i}. {suggestion.target_table}.{suggestion.target_column} ({suggestion.confidence:.0%})\")\n            print(f\"   Reasoning: {suggestion.reasoning}\")\n            print(f\"   Data Type: {suggestion.data_type}\")","size_bytes":12739},"datascience/mapping_api.py":{"content":"\"\"\"\nAPI Integration for Automated Mapping System\n===========================================\n\nFastAPI endpoints to integrate the auto-mapper with the crosswalk application.\n\"\"\"\n\nfrom fastapi import APIRouter, HTTPException\nfrom pydantic import BaseModel\nfrom typing import List, Dict, Optional\nfrom .auto_mapper import AutoMapper, MappingSuggestion\nimport json\n\nrouter = APIRouter()\n\n# Initialize the auto mapper\nauto_mapper = AutoMapper()\n\nclass SourceColumn(BaseModel):\n    \"\"\"Input model for source column data\"\"\"\n    column_name: str\n    sample_values: Optional[List[str]] = []\n    column_order: Optional[int] = None\n\nclass MappingSuggestionResponse(BaseModel):\n    \"\"\"Response model for mapping suggestions\"\"\"\n    source_column: str\n    target_column: str\n    target_table: str\n    confidence: float\n    reasoning: str\n    data_type: str\n\nclass BulkMappingRequest(BaseModel):\n    \"\"\"Request model for bulk mapping suggestions\"\"\"\n    source_columns: List[SourceColumn]\n\nclass CorrectionRequest(BaseModel):\n    \"\"\"Request model for recording mapping corrections\"\"\"\n    source_column: str\n    correct_table: str\n    correct_column: str\n    incorrect_suggestion: Optional[str] = None\n\n@router.post(\"/suggest-mappings\")\nasync def suggest_mappings(request: BulkMappingRequest) -> Dict[str, List[MappingSuggestionResponse]]:\n    \"\"\"\n    Generate automated mapping suggestions for source columns\n    \n    This endpoint takes a list of source columns with optional sample data\n    and returns intelligent mapping suggestions to the data model fields.\n    \"\"\"\n    try:\n        # Convert input to format expected by auto_mapper\n        source_columns = [\n            {\n                'column_name': col.column_name,\n                'sample_values': col.sample_values or []\n            }\n            for col in request.source_columns\n        ]\n        \n        # Get suggestions from auto mapper\n        suggestions = auto_mapper.bulk_suggest_mappings(source_columns)\n        \n        # Convert to response format\n        response = {}\n        for col_name, suggestion_list in suggestions.items():\n            response[col_name] = [\n                MappingSuggestionResponse(\n                    source_column=s.source_column,\n                    target_column=s.target_column,\n                    target_table=s.target_table,\n                    confidence=s.confidence,\n                    reasoning=s.reasoning,\n                    data_type=s.data_type\n                )\n                for s in suggestion_list\n            ]\n        \n        return response\n        \n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Error generating suggestions: {str(e)}\")\n\n@router.post(\"/record-correction\")\nasync def record_correction(request: CorrectionRequest) -> Dict[str, str]:\n    \"\"\"\n    Record a user correction to improve future mapping suggestions\n    \n    When users correct/confirm mappings, this endpoint learns from the feedback\n    to improve future suggestions through machine learning.\n    \"\"\"\n    try:\n        auto_mapper.record_correction(\n            source_column=request.source_column,\n            correct_table=request.correct_table,\n            correct_column=request.correct_column,\n            incorrect_suggestion=request.incorrect_suggestion\n        )\n        \n        return {\n            \"status\": \"success\",\n            \"message\": f\"Recorded correction for {request.source_column}\"\n        }\n        \n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Error recording correction: {str(e)}\")\n\n@router.get(\"/mapping-stats\")\nasync def get_mapping_stats() -> Dict[str, int]:\n    \"\"\"Get statistics about the mapping system\"\"\"\n    try:\n        stats = {\n            \"data_model_fields\": len(auto_mapper.data_model_fields),\n            \"correction_history_count\": len(auto_mapper.correction_history),\n            \"pattern_types\": len(auto_mapper.pattern_library)\n        }\n        \n        return stats\n        \n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Error getting stats: {str(e)}\")\n\n@router.post(\"/suggest-single\")\nasync def suggest_single_mapping(column_name: str, sample_values: Optional[List[str]] = None) -> List[MappingSuggestionResponse]:\n    \"\"\"\n    Generate mapping suggestions for a single column\n    \"\"\"\n    try:\n        suggestions = auto_mapper.generate_mapping_suggestions(column_name, sample_values or [])\n        \n        return [\n            MappingSuggestionResponse(\n                source_column=s.source_column,\n                target_column=s.target_column,\n                target_table=s.target_table,\n                confidence=s.confidence,\n                reasoning=s.reasoning,\n                data_type=s.data_type\n            )\n            for s in suggestions\n        ]\n        \n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Error generating single suggestion: {str(e)}\")","size_bytes":4948},"deploy.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nDeployment script for the Interactive Crosswalk & ETL Helper\nServes both the FastAPI backend and the built frontend\n\"\"\"\n\nimport os\nimport sys\nimport subprocess\nimport uvicorn\nfrom pathlib import Path\n\ndef build_frontend():\n    \"\"\"Build the frontend if not already built\"\"\"\n    project_root = Path(__file__).parent\n    frontend_path = project_root / \"frontend\"\n    frontend_dist_path = frontend_path / \"dist\"\n    \n    if not frontend_dist_path.exists():\n        print(\"🔨 Building frontend...\")\n        # Store original working directory\n        original_cwd = os.getcwd()\n        try:\n            # Change to frontend directory and build\n            os.chdir(frontend_path)\n            \n            # Run npm build\n            result = subprocess.run([\"npm\", \"run\", \"build\"], check=True, capture_output=True, text=True)\n            print(\"✅ Frontend built successfully!\")\n            \n        except subprocess.CalledProcessError as e:\n            print(f\"❌ Frontend build failed: {e}\")\n            print(f\"Output: {e.stdout}\")\n            print(f\"Error: {e.stderr}\")\n            exit(1)\n        except Exception as e:\n            print(f\"❌ Error building frontend: {e}\")\n            exit(1)\n        finally:\n            # Always restore original working directory\n            os.chdir(original_cwd)\n    else:\n        print(\"✅ Frontend already built.\")\n\ndef setup_backend():\n    \"\"\"Setup backend environment and imports\"\"\"\n    # Add the backend directory to the Python path\n    backend_path = Path(__file__).parent / 'backend'\n    sys.path.insert(0, str(backend_path))\n    \n    # Set the working directory to backend for relative imports to work\n    original_cwd = os.getcwd()\n    os.chdir(backend_path)\n    \n    try:\n        # Initialize database and seed data before importing app\n        from database import init_db\n        from seed_data import seed_initial_data\n        \n        # Initialize the database\n        print(\"🔧 Initializing database...\")\n        init_db()\n        print(\"🌱 Seeding initial data...\")\n        seed_initial_data()\n        \n        from app import app\n        return app\n    finally:\n        # Restore original working directory\n        os.chdir(original_cwd)\n\nif __name__ == \"__main__\":\n    # Build the frontend first\n    build_frontend()\n    \n    # Setup backend and get app instance\n    app = setup_backend()\n    \n    print(\"🚀 Starting Interactive Crosswalk & ETL Helper...\")\n    print(\"📊 Backend API: http://0.0.0.0:5000/api/health\")\n    print(\"🌐 Frontend App: http://0.0.0.0:5000/\")\n    \n    # Run the server on port 5000 for deployment\n    uvicorn.run(\n        app,\n        host=\"0.0.0.0\",\n        port=5000,\n        reload=False\n    )","size_bytes":2722},"frontend/src/components/MCSReviewScreen.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { crosswalkApi, CrosswalkMapping } from '../services/crosswalkApi';\n\ninterface MCSReviewScreenProps {}\n\ninterface ReviewStats {\n  total_mappings: number;\n  ready_for_approval: number;\n  pending_review: number;\n  has_issues: number;\n  approved_count: number;\n}\n\nconst MCSReviewScreen: React.FC<MCSReviewScreenProps> = () => {\n  const navigate = useNavigate();\n  const [mappings, setMappings] = useState<CrosswalkMapping[]>([]);\n  const [stats, setStats] = useState<ReviewStats>({\n    total_mappings: 0,\n    ready_for_approval: 0,\n    pending_review: 0,\n    has_issues: 0,\n    approved_count: 0\n  });\n  const [selectedMappings, setSelectedMappings] = useState<Set<number>>(new Set());\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadMappings();\n  }, []);\n\n  const loadMappings = async () => {\n    setLoading(true);\n    try {\n      const data = await crosswalkApi.getCrosswalkMappings({ limit: 500 });\n      setMappings(data);\n      \n      // Calculate stats\n      const ready = data.filter((m: CrosswalkMapping) => \n        m.mcdm_column_name && (m.mcdm_table || m.mcdm_table_name) && !m.skipped_flag\n      ).length;\n      const pending = data.filter((m: CrosswalkMapping) => \n        !m.mcdm_column_name && !m.skipped_flag\n      ).length;\n      const issues = data.filter((m: CrosswalkMapping) => \n        (!m.mcdm_column_name && !m.skipped_flag) || (!m.data_type)\n      ).length;\n\n      setStats({\n        total_mappings: data.length,\n        ready_for_approval: ready,\n        pending_review: pending,\n        has_issues: issues,\n        approved_count: 0 // Would come from actual approval status\n      });\n    } catch (error) {\n      console.error('Error loading mappings:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusBadge = (mapping: CrosswalkMapping) => {\n    if (mapping.skipped_flag) {\n      return <span className=\"px-2 py-1 text-xs font-medium bg-gray-600 text-gray-300 rounded\">Skipped</span>;\n    }\n    if (mapping.mcdm_column_name && (mapping.mcdm_table || mapping.mcdm_table_name)) {\n      return <span className=\"px-2 py-1 text-xs font-medium bg-green-600 text-white rounded\">Ready</span>;\n    }\n    return <span className=\"px-2 py-1 text-xs font-medium bg-yellow-600 text-white rounded\">Pending</span>;\n  };\n\n  const handleSelectMapping = (id: number) => {\n    const newSelected = new Set(selectedMappings);\n    if (newSelected.has(id)) {\n      newSelected.delete(id);\n    } else {\n      newSelected.add(id);\n    }\n    setSelectedMappings(newSelected);\n  };\n\n  const handleSelectAll = () => {\n    if (selectedMappings.size === filteredMappings.length) {\n      setSelectedMappings(new Set());\n    } else {\n      setSelectedMappings(new Set(filteredMappings.map(m => m.id)));\n    }\n  };\n\n  const handleApproveSelected = () => {\n    if (selectedMappings.size === 0) return;\n    \n    const confirmed = window.confirm(\n      `Are you sure you want to approve ${selectedMappings.size} selected mappings for production deployment?`\n    );\n    \n    if (confirmed) {\n      alert(`✅ Approved ${selectedMappings.size} mappings for production!`);\n      setSelectedMappings(new Set());\n    }\n  };\n\n  const handleRequestRevisions = () => {\n    if (selectedMappings.size === 0) return;\n    \n    const reason = prompt('Please provide a reason for requesting revisions:');\n    if (reason) {\n      alert(`📝 Sent ${selectedMappings.size} mappings back for revision:\\nReason: ${reason}`);\n      setSelectedMappings(new Set());\n    }\n  };\n\n  const filteredMappings = mappings.filter(mapping => {\n    switch (filterStatus) {\n      case 'ready':\n        return mapping.mcdm_column_name && (mapping.mcdm_table || mapping.mcdm_table_name) && !mapping.skipped_flag;\n      case 'pending':\n        return !mapping.mcdm_column_name && !mapping.skipped_flag;\n      case 'issues':\n        return (!mapping.mcdm_column_name && !mapping.skipped_flag) || (!mapping.data_type);\n      case 'skipped':\n        return mapping.skipped_flag;\n      default:\n        return true;\n    }\n  });\n\n  if (loading) {\n    return (\n      <div className=\"h-screen bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500 mx-auto mb-4\"></div>\n          <p className=\"text-white\">Loading mappings for review...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-screen bg-gray-900 flex flex-col\">\n      {/* Header */}\n      <div className=\"bg-gray-900 border-b border-gray-700 shadow-sm\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-white\">MCS Review Dashboard</h1>\n              <p className=\"text-sm text-gray-300 mt-1\">\n                Review and approve crosswalk mappings for production deployment\n              </p>\n            </div>\n            \n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={() => navigate('/crosswalk')}\n                className=\"px-4 py-2 text-sm font-medium text-gray-300 bg-gray-700 rounded-lg hover:bg-gray-600\"\n              >\n                <i className=\"fas fa-arrow-left mr-2\"></i>\n                Back to Crosswalk\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Dashboard */}\n      <div className=\"bg-gray-800 border-b border-gray-700 px-6 py-4\">\n        <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-white\">{stats.total_mappings}</div>\n            <div className=\"text-xs text-gray-300\">Total Mappings</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-400\">{stats.ready_for_approval}</div>\n            <div className=\"text-xs text-gray-300\">Ready</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-yellow-400\">{stats.pending_review}</div>\n            <div className=\"text-xs text-gray-300\">Pending</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-red-400\">{stats.has_issues}</div>\n            <div className=\"text-xs text-gray-300\">Issues</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-blue-400\">{stats.approved_count}</div>\n            <div className=\"text-xs text-gray-300\">Approved</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Action Bar */}\n      <div className=\"bg-gray-800 border-b border-gray-700 px-6 py-3\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <label className=\"text-sm font-medium text-white\">Filter:</label>\n              <select\n                value={filterStatus}\n                onChange={(e) => setFilterStatus(e.target.value)}\n                className=\"px-3 py-1 bg-gray-700 border border-gray-600 rounded text-white text-sm\"\n              >\n                <option value=\"all\">All ({mappings.length})</option>\n                <option value=\"ready\">Ready ({stats.ready_for_approval})</option>\n                <option value=\"pending\">Pending ({stats.pending_review})</option>\n                <option value=\"issues\">Issues ({stats.has_issues})</option>\n                <option value=\"skipped\">Skipped</option>\n              </select>\n            </div>\n            \n            <div className=\"text-sm text-gray-300\">\n              {selectedMappings.size} selected\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={handleApproveSelected}\n              disabled={selectedMappings.size === 0}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-green-600 rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <i className=\"fas fa-check mr-2\"></i>\n              Approve Selected ({selectedMappings.size})\n            </button>\n            \n            <button\n              onClick={handleRequestRevisions}\n              disabled={selectedMappings.size === 0}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <i className=\"fas fa-times mr-2\"></i>\n              Request Revisions\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mappings Table */}\n      <div className=\"flex-1 overflow-auto\">\n        <div className=\"min-w-full bg-gray-800\">\n          <table className=\"min-w-full divide-y divide-gray-700\">\n            <thead className=\"bg-gray-700 sticky top-0\">\n              <tr>\n                <th className=\"px-4 py-3 text-left\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedMappings.size === filteredMappings.length && filteredMappings.length > 0}\n                    onChange={handleSelectAll}\n                    className=\"rounded border-gray-300\"\n                  />\n                </th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase\">Source Column</th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase\">Target Mapping</th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase\">Data Type</th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase\">Status</th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase\">File Group</th>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase\">Notes</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-gray-800 divide-y divide-gray-700\">\n              {filteredMappings.map((mapping) => (\n                <tr \n                  key={mapping.id}\n                  className={`hover:bg-gray-700 cursor-pointer ${\n                    selectedMappings.has(mapping.id) ? 'bg-gray-700 border-l-4 border-orange-500' : ''\n                  }`}\n                  onClick={() => handleSelectMapping(mapping.id)}\n                >\n                  <td className=\"px-4 py-4\" onClick={(e) => e.stopPropagation()}>\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedMappings.has(mapping.id)}\n                      onChange={() => handleSelectMapping(mapping.id)}\n                      className=\"rounded border-gray-300\"\n                    />\n                  </td>\n                  <td className=\"px-4 py-4\">\n                    <div className=\"font-medium text-white\">{mapping.source_column_name}</div>\n                    <div className=\"text-sm text-gray-400\">Order: {mapping.source_column_order}</div>\n                  </td>\n                  <td className=\"px-4 py-4\">\n                    {(mapping.mcdm_table || mapping.mcdm_table_name) && mapping.mcdm_column_name ? (\n                      <div className=\"text-green-400\">\n                        {mapping.mcdm_table || mapping.mcdm_table_name}.{mapping.mcdm_column_name}\n                      </div>\n                    ) : (\n                      <div className=\"text-gray-400\">Not mapped</div>\n                    )}\n                  </td>\n                  <td className=\"px-4 py-4 text-white\">\n                    {mapping.data_type || '-'}\n                  </td>\n                  <td className=\"px-4 py-4\">\n                    {getStatusBadge(mapping)}\n                  </td>\n                  <td className=\"px-4 py-4\">\n                    <span className=\"px-2 py-1 text-xs font-medium bg-blue-600 text-white rounded\">\n                      {mapping.file_group_name}\n                    </span>\n                  </td>\n                  <td className=\"px-4 py-4 text-sm text-gray-300 max-w-xs truncate\">\n                    {mapping.description || mapping.data_profile_info || '-'}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          \n          {filteredMappings.length === 0 && (\n            <div className=\"text-center py-12 text-gray-400\">\n              No mappings match the selected filter.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MCSReviewScreen;","size_bytes":12878},"frontend/src/components/Navigation.tsx":{"content":"import React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst Navigation: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const navigationItems = [\n    {\n      path: '/upload',\n      label: 'Upload Data',\n      icon: 'fas fa-cloud-upload-alt',\n      description: 'Upload source files & configure project'\n    },\n    {\n      path: '/crosswalk',\n      label: 'Crosswalk Mapping',\n      icon: 'fas fa-exchange-alt',\n      description: 'Map source columns to data model'\n    },\n    {\n      path: '/mcs-review',\n      label: 'MCS Review',\n      icon: 'fas fa-clipboard-check',\n      description: 'Review & approve mappings'\n    }\n  ];\n\n  const currentStep = navigationItems.findIndex(item => item.path === location.pathname);\n\n  return (\n    <div className=\"h-screen bg-gray-900 flex flex-col\">\n      {/* Header */}\n      <div className=\"bg-gray-900 border-b border-gray-700 shadow-sm\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-white\">Crosswalk AI</h1>\n              <p className=\"text-sm text-gray-300 mt-1\">\n                Intelligent healthcare data mapping with 827-field data model\n              </p>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <div className=\"px-3 py-1 bg-green-600 text-white rounded-full text-sm\">\n                <i className=\"fas fa-brain mr-2\"></i>\n                AI-Powered\n              </div>\n              <div className=\"px-3 py-1 bg-orange-600 text-white rounded-full text-sm\">\n                827 Fields Ready\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex items-center justify-center p-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          \n          {/* Workflow Steps */}\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-2xl font-bold text-white mb-4\">Healthcare Data Crosswalk Workflow</h2>\n            <p className=\"text-gray-300\">\n              Choose your workflow step or follow the complete process from upload to production\n            </p>\n          </div>\n\n          {/* Step Navigation Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n            {navigationItems.map((item, index) => (\n              <div\n                key={item.path}\n                onClick={() => navigate(item.path)}\n                className={`relative bg-gray-800 rounded-xl p-6 cursor-pointer transition-all duration-200 border-2 ${\n                  location.pathname === item.path\n                    ? 'border-orange-500 bg-gray-700 shadow-lg'\n                    : 'border-gray-600 hover:border-gray-500 hover:bg-gray-700'\n                }`}\n              >\n                {/* Step Number */}\n                <div className={`absolute -top-3 -left-3 w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${\n                  index <= currentStep\n                    ? 'bg-orange-600 text-white'\n                    : 'bg-gray-600 text-gray-300'\n                }`}>\n                  {index + 1}\n                </div>\n\n                {/* Card Content */}\n                <div className=\"text-center\">\n                  <div className={`text-4xl mb-4 ${\n                    location.pathname === item.path ? 'text-orange-500' : 'text-gray-400'\n                  }`}>\n                    <i className={item.icon}></i>\n                  </div>\n                  \n                  <h3 className=\"text-lg font-semibold text-white mb-2\">\n                    {item.label}\n                  </h3>\n                  \n                  <p className=\"text-sm text-gray-400 mb-4\">\n                    {item.description}\n                  </p>\n\n                  {/* Status Indicator */}\n                  {location.pathname === item.path ? (\n                    <div className=\"inline-flex items-center px-3 py-1 rounded-full bg-orange-600 text-white text-xs\">\n                      <i className=\"fas fa-circle mr-2\"></i>\n                      Current Step\n                    </div>\n                  ) : index < currentStep ? (\n                    <div className=\"inline-flex items-center px-3 py-1 rounded-full bg-green-600 text-white text-xs\">\n                      <i className=\"fas fa-check mr-2\"></i>\n                      Completed\n                    </div>\n                  ) : (\n                    <div className=\"inline-flex items-center px-3 py-1 rounded-full bg-gray-600 text-gray-300 text-xs\">\n                      <i className=\"fas fa-clock mr-2\"></i>\n                      Pending\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Workflow Flow Diagram */}\n          <div className=\"bg-gray-800 rounded-xl p-6 mb-8\">\n            <h3 className=\"text-lg font-semibold text-white mb-4 text-center\">\n              Complete Workflow Process\n            </h3>\n            \n            <div className=\"flex items-center justify-center space-x-4\">\n              <div className=\"flex items-center\">\n                <div className=\"w-12 h-12 rounded-full bg-blue-600 flex items-center justify-center text-white\">\n                  <i className=\"fas fa-cloud-upload-alt\"></i>\n                </div>\n                <div className=\"ml-3 text-sm\">\n                  <div className=\"font-medium text-white\">Upload</div>\n                  <div className=\"text-gray-400\">Source Data</div>\n                </div>\n              </div>\n              \n              <div className=\"w-8 h-1 bg-gray-600\"></div>\n              \n              <div className=\"flex items-center\">\n                <div className=\"w-12 h-12 rounded-full bg-orange-600 flex items-center justify-center text-white\">\n                  <i className=\"fas fa-brain\"></i>\n                </div>\n                <div className=\"ml-3 text-sm\">\n                  <div className=\"font-medium text-white\">AI Mapping</div>\n                  <div className=\"text-gray-400\">Auto-suggest</div>\n                </div>\n              </div>\n              \n              <div className=\"w-8 h-1 bg-gray-600\"></div>\n              \n              <div className=\"flex items-center\">\n                <div className=\"w-12 h-12 rounded-full bg-purple-600 flex items-center justify-center text-white\">\n                  <i className=\"fas fa-exchange-alt\"></i>\n                </div>\n                <div className=\"ml-3 text-sm\">\n                  <div className=\"font-medium text-white\">Crosswalk</div>\n                  <div className=\"text-gray-400\">Review & Map</div>\n                </div>\n              </div>\n              \n              <div className=\"w-8 h-1 bg-gray-600\"></div>\n              \n              <div className=\"flex items-center\">\n                <div className=\"w-12 h-12 rounded-full bg-green-600 flex items-center justify-center text-white\">\n                  <i className=\"fas fa-clipboard-check\"></i>\n                </div>\n                <div className=\"ml-3 text-sm\">\n                  <div className=\"font-medium text-white\">MCS Review</div>\n                  <div className=\"text-gray-400\">Approve</div>\n                </div>\n              </div>\n              \n              <div className=\"w-8 h-1 bg-gray-600\"></div>\n              \n              <div className=\"flex items-center\">\n                <div className=\"w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white\">\n                  <i className=\"fas fa-rocket\"></i>\n                </div>\n                <div className=\"ml-3 text-sm\">\n                  <div className=\"font-medium text-white\">Production</div>\n                  <div className=\"text-gray-400\">Deploy</div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Actions */}\n          <div className=\"text-center\">\n            <h3 className=\"text-lg font-medium text-white mb-4\">Quick Actions</h3>\n            <div className=\"flex justify-center space-x-4\">\n              <button\n                onClick={() => navigate('/upload')}\n                className=\"px-6 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors\"\n              >\n                <i className=\"fas fa-play mr-2\"></i>\n                Start New Project\n              </button>\n              <button\n                onClick={() => navigate('/crosswalk')}\n                className=\"px-6 py-2 bg-gray-700 text-white rounded-lg hover:bg-gray-600 transition-colors border border-gray-600\"\n              >\n                <i className=\"fas fa-list mr-2\"></i>\n                View Existing Mappings\n              </button>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navigation;","size_bytes":8953},"frontend/src/components/UploadScreen.tsx":{"content":"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { autoMappingService, MappingSuggestion } from '../services/autoMappingApi';\n\ninterface UploadScreenProps {}\n\ninterface ColumnInfo {\n  name: string;\n  sample_values: string[];\n  suggestions?: MappingSuggestion[];\n}\n\nconst UploadScreen: React.FC<UploadScreenProps> = () => {\n  const navigate = useNavigate();\n  const [clientId, setClientId] = useState('TEST');\n  const [fileGroup, setFileGroup] = useState('CLAIM');\n  const [version, setVersion] = useState('V00');\n  const [stream, setStream] = useState('S00');\n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);\n  const [columns, setColumns] = useState<ColumnInfo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [suggestions, setSuggestions] = useState<Record<string, MappingSuggestion[]>>({});\n\n  // Sample demo data for testing\n  const handleDemoData = async () => {\n    setLoading(true);\n    const demoColumns: ColumnInfo[] = [\n      { name: 'MEMBER_FIRST_NAME', sample_values: ['John', 'Jane', 'Mike', 'Sarah'] },\n      { name: 'MEMBER_LAST_NAME', sample_values: ['Smith', 'Johnson', 'Williams', 'Brown'] },\n      { name: 'CLAIM_NUMBER', sample_values: ['12345-67890', '98765-43210', '11111-22222'] },\n      { name: 'SERVICE_DATE', sample_values: ['2024-01-15', '2024-02-20', '2024-03-10'] },\n      { name: 'CLAIM_AMOUNT', sample_values: ['1250.00', '890.50', '2100.75'] },\n      { name: 'PROVIDER_NPI', sample_values: ['1234567890', '0987654321', '1122334455'] },\n    ];\n\n    setColumns(demoColumns);\n\n    try {\n      // Get AI suggestions for demo columns\n      const sourceCols = demoColumns.map(col => ({\n        column_name: col.name,\n        sample_values: col.sample_values\n      }));\n\n      const aiSuggestions = await autoMappingService.getSuggestions(sourceCols);\n      setSuggestions(aiSuggestions);\n    } catch (error) {\n      console.error('Error getting AI suggestions:', error);\n    }\n\n    setLoading(false);\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setUploadedFile(file);\n      // In a real implementation, you would parse the CSV/Excel file here\n      // For demo purposes, we'll use sample data\n      handleDemoData();\n    }\n  };\n\n  const handleProceedToCrosswalk = () => {\n    // Navigate to crosswalk screen with the uploaded data\n    navigate('/crosswalk', {\n      state: {\n        clientId,\n        fileGroup,\n        version,\n        stream,\n        columns,\n        suggestions\n      }\n    });\n  };\n\n  return (\n    <div className=\"h-screen bg-gray-900 flex flex-col\">\n      {/* Header */}\n      <div className=\"bg-gray-900 border-b border-gray-700 shadow-sm\">\n        <div className=\"px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-white\">Upload Source Data</h1>\n              <p className=\"text-sm text-gray-300 mt-1\">\n                Upload client files or define schema to start crosswalk mapping\n              </p>\n            </div>\n            \n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={() => navigate('/crosswalk')}\n                className=\"px-4 py-2 text-sm font-medium text-gray-300 bg-gray-700 rounded-lg hover:bg-gray-600\"\n              >\n                Skip to Crosswalk\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex-1 overflow-auto p-6\">\n        <div className=\"max-w-4xl mx-auto\">\n          \n          {/* Project Configuration */}\n          <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\n            <h2 className=\"text-lg font-semibold text-white mb-4\">Project Configuration</h2>\n            \n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">Client ID</label>\n                <input\n                  type=\"text\"\n                  value={clientId}\n                  onChange={(e) => setClientId(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500\"\n                  placeholder=\"e.g., TEST\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">File Group</label>\n                <select\n                  value={fileGroup}\n                  onChange={(e) => setFileGroup(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500\"\n                >\n                  <option value=\"CLAIM\">CLAIM</option>\n                  <option value=\"CLAIM_LINE\">CLAIM_LINE</option>\n                  <option value=\"MEMBER\">MEMBER</option>\n                  <option value=\"PROVIDER\">PROVIDER</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">Version</label>\n                <select\n                  value={version}\n                  onChange={(e) => setVersion(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500\"\n                >\n                  <option value=\"V00\">V00</option>\n                  <option value=\"V01\">V01</option>\n                  <option value=\"V02\">V02</option>\n                  <option value=\"V03\">V03</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">Stream</label>\n                <select\n                  value={stream}\n                  onChange={(e) => setStream(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-orange-500\"\n                >\n                  <option value=\"S00\">S00</option>\n                  <option value=\"S02\">S02</option>\n                  <option value=\"S03\">S03</option>\n                  <option value=\"S04\">S04</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          {/* File Upload Section */}\n          <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\n            <h2 className=\"text-lg font-semibold text-white mb-4\">Data Source</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"border-2 border-dashed border-gray-600 rounded-lg p-6 text-center hover:border-orange-500 transition-colors\">\n                <i className=\"fas fa-cloud-upload-alt text-4xl text-gray-400 mb-4\"></i>\n                <h3 className=\"text-lg font-medium text-white mb-2\">Upload CSV/Excel File</h3>\n                <p className=\"text-sm text-gray-400 mb-4\">\n                  Upload your client's source data file\n                </p>\n                <input\n                  type=\"file\"\n                  id=\"file-upload\"\n                  accept=\".csv,.xlsx,.xls\"\n                  onChange={handleFileUpload}\n                  className=\"hidden\"\n                />\n                <label\n                  htmlFor=\"file-upload\"\n                  className=\"cursor-pointer px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 inline-block\"\n                >\n                  Choose File\n                </label>\n                {uploadedFile && (\n                  <p className=\"mt-2 text-sm text-green-400\">\n                    ✓ {uploadedFile.name} uploaded\n                  </p>\n                )}\n              </div>\n\n              <div className=\"border-2 border-dashed border-gray-600 rounded-lg p-6 text-center hover:border-blue-500 transition-colors\">\n                <i className=\"fas fa-magic text-4xl text-gray-400 mb-4\"></i>\n                <h3 className=\"text-lg font-medium text-white mb-2\">Use Demo Data</h3>\n                <p className=\"text-sm text-gray-400 mb-4\">\n                  Try with sample healthcare data\n                </p>\n                <button\n                  onClick={handleDemoData}\n                  disabled={loading}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {loading ? (\n                    <>\n                      <i className=\"fas fa-spinner fa-spin mr-2\"></i>\n                      Loading...\n                    </>\n                  ) : (\n                    'Load Demo Data'\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Preview and AI Suggestions */}\n          {columns.length > 0 && (\n            <div className=\"bg-gray-800 rounded-lg p-6 mb-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-lg font-semibold text-white\">\n                  Data Preview & AI Suggestions\n                </h2>\n                <span className=\"text-sm text-gray-400\">{columns.length} columns detected</span>\n              </div>\n              \n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full text-sm text-white\">\n                  <thead className=\"bg-gray-700\">\n                    <tr>\n                      <th className=\"px-4 py-3 text-left\">Source Column</th>\n                      <th className=\"px-4 py-3 text-left\">Sample Values</th>\n                      <th className=\"px-4 py-3 text-left\">AI Suggestion</th>\n                      <th className=\"px-4 py-3 text-left\">Confidence</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-600\">\n                    {columns.map((column, index) => {\n                      const topSuggestion = suggestions[column.name]?.[0];\n                      return (\n                        <tr key={index} className=\"hover:bg-gray-700\">\n                          <td className=\"px-4 py-3 font-medium\">{column.name}</td>\n                          <td className=\"px-4 py-3 text-gray-300\">\n                            {column.sample_values.slice(0, 3).join(', ')}\n                            {column.sample_values.length > 3 && '...'}\n                          </td>\n                          <td className=\"px-4 py-3\">\n                            {topSuggestion ? (\n                              <span className=\"text-green-400\">\n                                {topSuggestion.target_table}.{topSuggestion.target_column}\n                              </span>\n                            ) : (\n                              <span className=\"text-gray-400\">-</span>\n                            )}\n                          </td>\n                          <td className=\"px-4 py-3\">\n                            {topSuggestion && (\n                              <div className=\"flex items-center\">\n                                <div className={`w-2 h-2 rounded-full mr-2 ${\n                                  topSuggestion.confidence > 0.7 ? 'bg-green-500' :\n                                  topSuggestion.confidence > 0.4 ? 'bg-yellow-500' :\n                                  'bg-red-500'\n                                }`}></div>\n                                {Math.round(topSuggestion.confidence * 100)}%\n                              </div>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n\n          {/* Action Buttons */}\n          {columns.length > 0 && (\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={() => navigate('/')}\n                className=\"px-4 py-2 text-sm font-medium text-gray-300 bg-gray-700 rounded-lg hover:bg-gray-600\"\n              >\n                Back\n              </button>\n              <button\n                onClick={handleProceedToCrosswalk}\n                className=\"px-6 py-2 text-sm font-medium text-white bg-orange-600 rounded-lg hover:bg-orange-700\"\n              >\n                Proceed to Crosswalk Mapping\n                <i className=\"fas fa-arrow-right ml-2\"></i>\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UploadScreen;","size_bytes":12699},"frontend/src/services/autoMappingApi.ts":{"content":"/**\n * API service for intelligent automated mapping suggestions\n */\n\nexport interface MappingSuggestion {\n  source_column: string;\n  target_column: string;\n  target_table: string;\n  confidence: number;\n  reasoning: string;\n  data_type: string;\n}\n\nexport interface SourceColumn {\n  column_name: string;\n  sample_values?: string[];\n  column_order?: number;\n}\n\nexport interface AutoMappingStats {\n  data_model_fields: number;\n  corrections_learned: number;\n  pattern_types: number;\n  status: string;\n}\n\nclass AutoMappingService {\n  private baseURL = '/api/auto-mapping';\n\n  /**\n   * Get intelligent mapping suggestions for source columns\n   */\n  async getSuggestions(sourceColumns: SourceColumn[]): Promise<Record<string, MappingSuggestion[]>> {\n    try {\n      const response = await fetch(`${this.baseURL}/suggest`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          source_columns: sourceColumns\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('📊 Auto-mapping suggestions:', data);\n      return data;\n    } catch (error) {\n      console.error('❌ Error getting mapping suggestions:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get suggestions for a single column\n   */\n  async getSingleSuggestion(columnName: string, sampleValues?: string[]): Promise<MappingSuggestion[]> {\n    try {\n      const response = await fetch(`${this.baseURL}/suggest-single?column_name=${encodeURIComponent(columnName)}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(sampleValues || []),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log(`🤖 Suggestions for '${columnName}':`, data);\n      return data;\n    } catch (error) {\n      console.error(`❌ Error getting suggestions for '${columnName}':`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Record a mapping correction to improve future suggestions\n   */\n  async recordCorrection(\n    sourceColumn: string,\n    correctTable: string,\n    correctColumn: string,\n    incorrectSuggestion?: string\n  ): Promise<void> {\n    try {\n      const response = await fetch(`${this.baseURL}/correct`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          source_column: sourceColumn,\n          correct_table: correctTable,\n          correct_column: correctColumn,\n          incorrect_suggestion: incorrectSuggestion\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('✅ Learning from correction:', data.message);\n    } catch (error) {\n      console.error('❌ Error recording correction:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get statistics about the auto-mapping system\n   */\n  async getStats(): Promise<AutoMappingStats> {\n    try {\n      const response = await fetch(`${this.baseURL}/stats`);\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('📈 Auto-mapping stats:', data);\n      return data;\n    } catch (error) {\n      console.error('❌ Error getting auto-mapping stats:', error);\n      throw error;\n    }\n  }\n}\n\nexport const autoMappingService = new AutoMappingService();","size_bytes":3703}},"version":1}